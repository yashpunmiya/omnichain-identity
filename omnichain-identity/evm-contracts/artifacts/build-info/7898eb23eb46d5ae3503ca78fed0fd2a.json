{"id":"7898eb23eb46d5ae3503ca78fed0fd2a","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nimport { IMessageLibManager } from \"./IMessageLibManager.sol\";\nimport { IMessagingComposer } from \"./IMessagingComposer.sol\";\nimport { IMessagingChannel } from \"./IMessagingChannel.sol\";\nimport { IMessagingContext } from \"./IMessagingContext.sol\";\n\nstruct MessagingParams {\n    uint32 dstEid;\n    bytes32 receiver;\n    bytes message;\n    bytes options;\n    bool payInLzToken;\n}\n\nstruct MessagingReceipt {\n    bytes32 guid;\n    uint64 nonce;\n    MessagingFee fee;\n}\n\nstruct MessagingFee {\n    uint256 nativeFee;\n    uint256 lzTokenFee;\n}\n\nstruct Origin {\n    uint32 srcEid;\n    bytes32 sender;\n    uint64 nonce;\n}\n\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n\n    event PacketDelivered(Origin origin, address receiver);\n\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n\n    event LzTokenSet(address token);\n\n    event DelegateSet(address sender, address delegate);\n\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n\n    function setLzToken(address _lzToken) external;\n\n    function lzToken() external view returns (address);\n\n    function nativeToken() external view returns (address);\n\n    function setDelegate(address _delegate) external;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nimport { Origin } from \"./ILayerZeroEndpointV2.sol\";\n\ninterface ILayerZeroReceiver {\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\n\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\n\n    function lzReceive(\n        Origin calldata _origin,\n        bytes32 _guid,\n        bytes calldata _message,\n        address _executor,\n        bytes calldata _extraData\n    ) external payable;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nstruct SetConfigParam {\n    uint32 eid;\n    uint32 configType;\n    bytes config;\n}\n\ninterface IMessageLibManager {\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n\n    function registerLibrary(address _lib) external;\n\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n\n    function getRegisteredLibraries() external view returns (address[] memory);\n\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n\n    /// ------------------- OApp interfaces -------------------\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingChannel {\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n\n    function eid() external view returns (uint32);\n\n    // this is an emergency function if a message cannot be verified for some reasons\n    // required to provide _nextNonce to avoid race condition\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingComposer {\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\n    event LzComposeAlert(\n        address indexed from,\n        address indexed to,\n        address indexed executor,\n        bytes32 guid,\n        uint16 index,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n\n    function composeQueue(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index\n    ) external view returns (bytes32 messageHash);\n\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\n\n    function lzCompose(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingContext {\n    function isSendingMessage() external view returns (bool);\n\n    function getSendContext() external view returns (uint32 dstEid, address sender);\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { ILayerZeroEndpointV2 } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\";\n\n/**\n * @title IOAppCore\n */\ninterface IOAppCore {\n    // Custom error messages\n    error OnlyPeer(uint32 eid, bytes32 sender);\n    error NoPeer(uint32 eid);\n    error InvalidEndpointCall();\n    error InvalidDelegate();\n\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\n    event PeerSet(uint32 eid, bytes32 peer);\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol contract.\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\n     */\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\n\n    /**\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\n     * @return iEndpoint The LayerZero endpoint as an interface.\n     */\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\n\n    /**\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\n     */\n    function peers(uint32 _eid) external view returns (bytes32 peer);\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     */\n    function setPeer(uint32 _eid, bytes32 _peer) external;\n\n    /**\n     * @notice Sets the delegate address for the OApp Core.\n     * @param _delegate The address of the delegate to be set.\n     */\n    function setDelegate(address _delegate) external;\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { ILayerZeroReceiver, Origin } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\";\n\ninterface IOAppReceiver is ILayerZeroReceiver {\n    /**\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\n     * @param _origin The origin information containing the source endpoint and sender address.\n     *  - srcEid: The source chain endpoint ID.\n     *  - sender: The sender address on the src chain.\n     *  - nonce: The nonce of the message.\n     * @param _message The lzReceive payload.\n     * @param _sender The sender address.\n     * @return isSender Is a valid sender.\n     *\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\n     * @dev The default sender IS the OAppReceiver implementer.\n     */\n    function isComposeMsgSender(\n        Origin calldata _origin,\n        bytes calldata _message,\n        address _sender\n    ) external view returns (bool isSender);\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n// @dev Import the 'MessagingFee' and 'MessagingReceipt' so it's exposed to OApp implementers\n// solhint-disable-next-line no-unused-import\nimport { OAppSender, MessagingFee, MessagingReceipt } from \"./OAppSender.sol\";\n// @dev Import the 'Origin' so it's exposed to OApp implementers\n// solhint-disable-next-line no-unused-import\nimport { OAppReceiver, Origin } from \"./OAppReceiver.sol\";\nimport { OAppCore } from \"./OAppCore.sol\";\n\n/**\n * @title OApp\n * @dev Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.\n */\nabstract contract OApp is OAppSender, OAppReceiver {\n    /**\n     * @dev Constructor to initialize the OApp with the provided endpoint and owner.\n     * @param _endpoint The address of the LOCAL LayerZero endpoint.\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\n     */\n    constructor(address _endpoint, address _delegate) OAppCore(_endpoint, _delegate) {}\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol implementation.\n     * @return receiverVersion The version of the OAppReceiver.sol implementation.\n     */\n    function oAppVersion()\n        public\n        pure\n        virtual\n        override(OAppSender, OAppReceiver)\n        returns (uint64 senderVersion, uint64 receiverVersion)\n    {\n        return (SENDER_VERSION, RECEIVER_VERSION);\n    }\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { IOAppCore, ILayerZeroEndpointV2 } from \"./interfaces/IOAppCore.sol\";\n\n/**\n * @title OAppCore\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\n */\nabstract contract OAppCore is IOAppCore, Ownable {\n    // The LayerZero endpoint associated with the given OApp\n    ILayerZeroEndpointV2 public immutable endpoint;\n\n    // Mapping to store peers associated with corresponding endpoints\n    mapping(uint32 eid => bytes32 peer) public peers;\n\n    /**\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\n     *\n     * @dev The delegate typically should be set as the owner of the contract.\n     */\n    constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     *\n     * @dev Only the owner/admin of the OApp can call this function.\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n     * @dev Set this to bytes32(0) to remove the peer address.\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\n     */\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     *\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n     * @dev Set this to bytes32(0) to remove the peer address.\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\n     */\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }\n\n    /**\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\n     * ie. the peer is set to bytes32(0).\n     * @param _eid The endpoint ID.\n     * @return peer The address of the peer associated with the specified endpoint.\n     */\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }\n\n    /**\n     * @notice Sets the delegate address for the OApp.\n     * @param _delegate The address of the delegate to be set.\n     *\n     * @dev Only the owner/admin of the OApp can call this function.\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\n     */\n    function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { IOAppReceiver, Origin } from \"./interfaces/IOAppReceiver.sol\";\nimport { OAppCore } from \"./OAppCore.sol\";\n\n/**\n * @title OAppReceiver\n * @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\n */\nabstract contract OAppReceiver is IOAppReceiver, OAppCore {\n    // Custom error message for when the caller is not the registered endpoint/\n    error OnlyEndpoint(address addr);\n\n    // @dev The version of the OAppReceiver implementation.\n    // @dev Version is bumped when changes are made to this contract.\n    uint64 internal constant RECEIVER_VERSION = 2;\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol contract.\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\n     *\n     * @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\n     * ie. this is a RECEIVE only OApp.\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\n     */\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (0, RECEIVER_VERSION);\n    }\n\n    /**\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\n     * @dev _origin The origin information containing the source endpoint and sender address.\n     *  - srcEid: The source chain endpoint ID.\n     *  - sender: The sender address on the src chain.\n     *  - nonce: The nonce of the message.\n     * @dev _message The lzReceive payload.\n     * @param _sender The sender address.\n     * @return isSender Is a valid sender.\n     *\n     * @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\n     * @dev The default sender IS the OAppReceiver implementer.\n     */\n    function isComposeMsgSender(\n        Origin calldata /*_origin*/,\n        bytes calldata /*_message*/,\n        address _sender\n    ) public view virtual returns (bool) {\n        return _sender == address(this);\n    }\n\n    /**\n     * @notice Checks if the path initialization is allowed based on the provided origin.\n     * @param origin The origin information containing the source endpoint and sender address.\n     * @return Whether the path has been initialized.\n     *\n     * @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\n     * @dev This defaults to assuming if a peer has been set, its initialized.\n     * Can be overridden by the OApp if there is other logic to determine this.\n     */\n    function allowInitializePath(Origin calldata origin) public view virtual returns (bool) {\n        return peers[origin.srcEid] == origin.sender;\n    }\n\n    /**\n     * @notice Retrieves the next nonce for a given source endpoint and sender address.\n     * @dev _srcEid The source endpoint ID.\n     * @dev _sender The sender address.\n     * @return nonce The next nonce.\n     *\n     * @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\n     * @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\n     * @dev This is also enforced by the OApp.\n     * @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\n     */\n    function nextNonce(uint32 /*_srcEid*/, bytes32 /*_sender*/) public view virtual returns (uint64 nonce) {\n        return 0;\n    }\n\n    /**\n     * @dev Entry point for receiving messages or packets from the endpoint.\n     * @param _origin The origin information containing the source endpoint and sender address.\n     *  - srcEid: The source chain endpoint ID.\n     *  - sender: The sender address on the src chain.\n     *  - nonce: The nonce of the message.\n     * @param _guid The unique identifier for the received LayerZero message.\n     * @param _message The payload of the received message.\n     * @param _executor The address of the executor for the received message.\n     * @param _extraData Additional arbitrary data provided by the corresponding executor.\n     *\n     * @dev Entry point for receiving msg/packet from the LayerZero endpoint.\n     */\n    function lzReceive(\n        Origin calldata _origin,\n        bytes32 _guid,\n        bytes calldata _message,\n        address _executor,\n        bytes calldata _extraData\n    ) public payable virtual {\n        // Ensures that only the endpoint can attempt to lzReceive() messages to this OApp.\n        if (address(endpoint) != msg.sender) revert OnlyEndpoint(msg.sender);\n\n        // Ensure that the sender matches the expected peer for the source endpoint.\n        if (_getPeerOrRevert(_origin.srcEid) != _origin.sender) revert OnlyPeer(_origin.srcEid, _origin.sender);\n\n        // Call the internal OApp implementation of lzReceive.\n        _lzReceive(_origin, _guid, _message, _executor, _extraData);\n    }\n\n    /**\n     * @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation.\n     */\n    function _lzReceive(\n        Origin calldata _origin,\n        bytes32 _guid,\n        bytes calldata _message,\n        address _executor,\n        bytes calldata _extraData\n    ) internal virtual;\n}\n"},"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { SafeERC20, IERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\";\nimport { OAppCore } from \"./OAppCore.sol\";\n\n/**\n * @title OAppSender\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\n */\nabstract contract OAppSender is OAppCore {\n    using SafeERC20 for IERC20;\n\n    // Custom error messages\n    error NotEnoughNative(uint256 msgValue);\n    error LzTokenUnavailable();\n\n    // @dev The version of the OAppSender implementation.\n    // @dev Version is bumped when changes are made to this contract.\n    uint64 internal constant SENDER_VERSION = 1;\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol contract.\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\n     *\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\n     * ie. this is a SEND only OApp.\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\n     */\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }\n\n    /**\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\n     * @param _dstEid The destination endpoint ID.\n     * @param _message The message payload.\n     * @param _options Additional options for the message.\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\n     * @return fee The calculated MessagingFee for the message.\n     *      - nativeFee: The native fee for the message.\n     *      - lzTokenFee: The LZ token fee for the message.\n     */\n    function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }\n\n    /**\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\n     * @param _dstEid The destination endpoint ID.\n     * @param _message The message payload.\n     * @param _options Additional options for the message.\n     * @param _fee The calculated LayerZero fee for the message.\n     *      - nativeFee: The native fee.\n     *      - lzTokenFee: The lzToken fee.\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\n     * @return receipt The receipt for the sent message.\n     *      - guid: The unique identifier for the sent message.\n     *      - nonce: The nonce of the sent message.\n     *      - fee: The LayerZero fee incurred for the message.\n     */\n    function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n\n        return\n            // solhint-disable-next-line check-send-result\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }\n\n    /**\n     * @dev Internal function to pay the native fee associated with the message.\n     * @param _nativeFee The native fee to be paid.\n     * @return nativeFee The amount of native currency paid.\n     *\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\n     * this will need to be overridden because msg.value would contain multiple lzFees.\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\n     */\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }\n\n    /**\n     * @dev Internal function to pay the LZ token fee associated with the message.\n     * @param _lzTokenFee The LZ token fee to be paid.\n     *\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\n     */\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n\n        // Pay LZ token fee by sending tokens to the endpoint.\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/OmnichainIdentityLinker.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol\";\r\n\r\n/**\r\n * @title OmnichainIdentityLinker\r\n * @dev Contract for linking EVM addresses to Solana addresses via LayerZero V2\r\n * This contract sends messages from EVM chains to a Solana OApp\r\n */\r\ncontract OmnichainIdentityLinker is OApp {\r\n    // Solana chain ID in LayerZero V2\r\n    uint32 public constant SOLANA_CHAIN_ID = 40168; // Solana DEVNET chain ID in LZ V2\r\n\r\n    // Gas limit for cross-chain calls\r\n    uint256 public gasLimit = 200000;\r\n\r\n    // Store linked addresses history for reference\r\n    mapping(address => bytes[]) public linkedSolanaAddresses;\r\n\r\n    // Event emitted when a link is created\r\n    event IdentityLinked(address evmAddress, bytes solanaAddress, uint256 timestamp);\r\n\r\n    constructor(address _lzEndpoint, address _delegate) OApp(_lzEndpoint, _delegate) {}\r\n\r\n    /**\r\n     * @dev Link the sender's EVM address to a Solana address\r\n     * @param _solanaAddress Solana address as string\r\n     */\r\n    function linkAddress(string memory _solanaAddress) external payable {\r\n        // Format the message as CSV string for easy parsing on Solana\r\n        // Format: \"evmAddress,solanaAddress,timestamp\"\r\n        string memory evmAddressStr = addressToString(msg.sender);\r\n        string memory timestampStr = uint256ToString(block.timestamp);\r\n        string memory message = string(abi.encodePacked(\r\n            evmAddressStr, \",\", \r\n            _solanaAddress, \",\", \r\n            timestampStr\r\n        ));\r\n        \r\n        // Convert string to bytes for sending\r\n        bytes memory payload = bytes(message);\r\n\r\n        // Store the linked address in history\r\n        linkedSolanaAddresses[msg.sender].push(bytes(_solanaAddress));\r\n\r\n        // Emit event\r\n        emit IdentityLinked(msg.sender, bytes(_solanaAddress), block.timestamp);\r\n\r\n        // Prepare messaging parameters for LayerZero V2\r\n        bytes memory options = bytes(\"\"); // Use empty options for now\r\n        \r\n        // Send message to Solana via LayerZero V2\r\n        MessagingFee memory fee = _quote(SOLANA_CHAIN_ID, payload, options, false);\r\n        require(msg.value >= fee.nativeFee, \"Insufficient fee\");\r\n        \r\n        _lzSend(\r\n            SOLANA_CHAIN_ID,     // Destination chain ID (Solana)\r\n            payload,             // Payload\r\n            options,             // Options\r\n            MessagingFee(msg.value, 0), // Fee\r\n            payable(msg.sender)  // Refund address\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Convert an address to a string\r\n     * @param _addr The address to convert\r\n     * @return String representation of the address\r\n     */\r\n    function addressToString(address _addr) internal pure returns (string memory) {\r\n        bytes32 value = bytes32(uint256(uint160(_addr)));\r\n        bytes memory alphabet = \"0123456789abcdef\";\r\n        \r\n        bytes memory str = new bytes(42);\r\n        str[0] = \"0\";\r\n        str[1] = \"x\";\r\n        \r\n        for (uint256 i = 0; i < 20; i++) {\r\n            str[2 + i * 2] = alphabet[uint8(value[i + 12] >> 4)];\r\n            str[3 + i * 2] = alphabet[uint8(value[i + 12] & 0x0f)];\r\n        }\r\n        \r\n        return string(str);\r\n    }\r\n    \r\n    /**\r\n     * @dev Convert a uint256 to a string\r\n     * @param _value The uint256 to convert\r\n     * @return String representation of the uint256\r\n     */\r\n    function uint256ToString(uint256 _value) internal pure returns (string memory) {\r\n        if (_value == 0) {\r\n            return \"0\";\r\n        }\r\n        \r\n        uint256 temp = _value;\r\n        uint256 digits;\r\n        \r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        \r\n        bytes memory buffer = new bytes(digits);\r\n        while (_value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(_value % 10)));\r\n            _value /= 10;\r\n        }\r\n        \r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Get linked Solana addresses for an EVM address\r\n     * @param _evmAddress The EVM address to check\r\n     * @return Array of linked Solana addresses as bytes\r\n     */\r\n    function getLinkedAddresses(address _evmAddress) external view returns (bytes[] memory) {\r\n        return linkedSolanaAddresses[_evmAddress];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get linked Solana addresses for an EVM address as strings\r\n     * @param _evmAddress The EVM address to check\r\n     * @return Array of linked Solana addresses as strings\r\n     */\r\n    function getLinkedAddressesAsStrings(address _evmAddress) external view returns (string[] memory) {\r\n        bytes[] memory bytesAddresses = linkedSolanaAddresses[_evmAddress];\r\n        string[] memory strAddresses = new string[](bytesAddresses.length);\r\n        \r\n        for (uint i = 0; i < bytesAddresses.length; i++) {\r\n            strAddresses[i] = string(bytesAddresses[i]);\r\n        }\r\n        \r\n        return strAddresses;\r\n    }\r\n\r\n    /**\r\n     * @dev Quote the fee for sending a message to Solana\r\n     * @param _solanaAddress The Solana address to link\r\n     * @return fee The estimated messaging fee\r\n     */\r\n    function quoteLinkFee(string memory _solanaAddress) external view returns (MessagingFee memory fee) {\r\n        // Format the message as CSV string for fee estimation\r\n        string memory evmAddressStr = addressToString(msg.sender);\r\n        string memory timestampStr = uint256ToString(block.timestamp);\r\n        string memory message = string(abi.encodePacked(\r\n            evmAddressStr, \",\", \r\n            _solanaAddress, \",\", \r\n            timestampStr\r\n        ));\r\n        \r\n        bytes memory payload = bytes(message);\r\n        bytes memory options = bytes(\"\"); // Default options\r\n        \r\n        return _quote(SOLANA_CHAIN_ID, payload, options, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Quote the fee for linking an address\r\n     * @param _solanaAddress Solana address as string\r\n     * @return Fee required for the cross-chain message\r\n     */\r\n    function quoteLinkAddress(string memory _solanaAddress) external view returns (uint256) {\r\n        // Format the same message as in linkAddress\r\n        string memory evmAddressStr = addressToString(msg.sender);\r\n        string memory timestampStr = uint256ToString(block.timestamp);\r\n        string memory message = string(abi.encodePacked(\r\n            evmAddressStr, \",\", \r\n            _solanaAddress, \",\", \r\n            timestampStr\r\n        ));\r\n        \r\n        bytes memory payload = bytes(message);\r\n        \r\n        // Use empty options for compatibility\r\n        bytes memory options = bytes(\"\");\r\n        \r\n        MessagingFee memory fee = _quote(SOLANA_CHAIN_ID, payload, options, false);\r\n        return fee.nativeFee;\r\n    }\r\n\r\n    /**\r\n     * @dev Override the _lzReceive function to handle incoming messages (if needed)\r\n     * This would be used if you want to receive messages from Solana back to EVM\r\n     */\r\n    function _lzReceive(\r\n        Origin calldata _origin,\r\n        bytes32 _guid,\r\n        bytes calldata _payload,\r\n        address _executor,\r\n        bytes calldata _extraData\r\n    ) internal override {\r\n        // Add handling for received messages from Solana if needed\r\n        // For now, this is a placeholder\r\n    }\r\n\r\n    /**\r\n     * @dev Update the gas limit for cross-chain calls\r\n     * @param _gasLimit New gas limit\r\n     */\r\n    function setGasLimit(uint256 _gasLimit) external onlyOwner {\r\n        gasLimit = _gasLimit;\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw any stuck funds (admin function)\r\n     */\r\n    function withdraw() external onlyOwner {\r\n        (bool success, ) = owner().call{value: address(this).balance}(\"\");\r\n        require(success, \"Transfer failed\");\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","exportedSymbols":{"ILayerZeroEndpointV2":[202],"IMessageLibManager":[483],"IMessagingChannel":[619],"IMessagingComposer":[705],"IMessagingContext":[720],"MessagingFee":[33],"MessagingParams":[20],"MessagingReceipt":[28],"Origin":[40]},"id":203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:0"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol","file":"./IMessageLibManager.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":203,"sourceUnit":484,"src":"59:62:0","symbolAliases":[{"foreign":{"id":2,"name":"IMessageLibManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"68:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol","file":"./IMessagingComposer.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":203,"sourceUnit":706,"src":"122:62:0","symbolAliases":[{"foreign":{"id":4,"name":"IMessagingComposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"131:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol","file":"./IMessagingChannel.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":203,"sourceUnit":620,"src":"185:60:0","symbolAliases":[{"foreign":{"id":6,"name":"IMessagingChannel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"194:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol","file":"./IMessagingContext.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":203,"sourceUnit":721,"src":"246:60:0","symbolAliases":[{"foreign":{"id":8,"name":"IMessagingContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"255:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"MessagingParams","id":20,"members":[{"constant":false,"id":11,"mutability":"mutable","name":"dstEid","nameLocation":"344:6:0","nodeType":"VariableDeclaration","scope":20,"src":"337:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10,"name":"uint32","nodeType":"ElementaryTypeName","src":"337:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":13,"mutability":"mutable","name":"receiver","nameLocation":"364:8:0","nodeType":"VariableDeclaration","scope":20,"src":"356:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12,"name":"bytes32","nodeType":"ElementaryTypeName","src":"356:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15,"mutability":"mutable","name":"message","nameLocation":"384:7:0","nodeType":"VariableDeclaration","scope":20,"src":"378:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":14,"name":"bytes","nodeType":"ElementaryTypeName","src":"378:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"options","nameLocation":"403:7:0","nodeType":"VariableDeclaration","scope":20,"src":"397:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16,"name":"bytes","nodeType":"ElementaryTypeName","src":"397:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"payInLzToken","nameLocation":"421:12:0","nodeType":"VariableDeclaration","scope":20,"src":"416:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18,"name":"bool","nodeType":"ElementaryTypeName","src":"416:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MessagingParams","nameLocation":"315:15:0","nodeType":"StructDefinition","scope":203,"src":"308:128:0","visibility":"public"},{"canonicalName":"MessagingReceipt","id":28,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"guid","nameLocation":"476:4:0","nodeType":"VariableDeclaration","scope":28,"src":"468:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":21,"name":"bytes32","nodeType":"ElementaryTypeName","src":"468:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"nonce","nameLocation":"493:5:0","nodeType":"VariableDeclaration","scope":28,"src":"486:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":23,"name":"uint64","nodeType":"ElementaryTypeName","src":"486:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"fee","nameLocation":"517:3:0","nodeType":"VariableDeclaration","scope":28,"src":"504:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_storage_ptr","typeString":"struct MessagingFee"},"typeName":{"id":26,"nodeType":"UserDefinedTypeName","pathNode":{"id":25,"name":"MessagingFee","nameLocations":["504:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"504:12:0"},"referencedDeclaration":33,"src":"504:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"name":"MessagingReceipt","nameLocation":"445:16:0","nodeType":"StructDefinition","scope":203,"src":"438:85:0","visibility":"public"},{"canonicalName":"MessagingFee","id":33,"members":[{"constant":false,"id":30,"mutability":"mutable","name":"nativeFee","nameLocation":"559:9:0","nodeType":"VariableDeclaration","scope":33,"src":"551:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"551:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"lzTokenFee","nameLocation":"582:10:0","nodeType":"VariableDeclaration","scope":33,"src":"574:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MessagingFee","nameLocation":"532:12:0","nodeType":"StructDefinition","scope":203,"src":"525:70:0","visibility":"public"},{"canonicalName":"Origin","id":40,"members":[{"constant":false,"id":35,"mutability":"mutable","name":"srcEid","nameLocation":"624:6:0","nodeType":"VariableDeclaration","scope":40,"src":"617:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":34,"name":"uint32","nodeType":"ElementaryTypeName","src":"617:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"sender","nameLocation":"644:6:0","nodeType":"VariableDeclaration","scope":40,"src":"636:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"636:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"nonce","nameLocation":"663:5:0","nodeType":"VariableDeclaration","scope":40,"src":"656:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":38,"name":"uint64","nodeType":"ElementaryTypeName","src":"656:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Origin","nameLocation":"604:6:0","nodeType":"StructDefinition","scope":203,"src":"597:74:0","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":41,"name":"IMessageLibManager","nameLocations":["707:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":483,"src":"707:18:0"},"id":42,"nodeType":"InheritanceSpecifier","src":"707:18:0"},{"baseName":{"id":43,"name":"IMessagingComposer","nameLocations":["727:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":705,"src":"727:18:0"},"id":44,"nodeType":"InheritanceSpecifier","src":"727:18:0"},{"baseName":{"id":45,"name":"IMessagingChannel","nameLocations":["747:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":619,"src":"747:17:0"},"id":46,"nodeType":"InheritanceSpecifier","src":"747:17:0"},{"baseName":{"id":47,"name":"IMessagingContext","nameLocations":["766:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":720,"src":"766:17:0"},"id":48,"nodeType":"InheritanceSpecifier","src":"766:17:0"}],"canonicalName":"ILayerZeroEndpointV2","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":202,"linearizedBaseContracts":[202,720,619,705,483],"name":"ILayerZeroEndpointV2","nameLocation":"683:20:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f","id":56,"name":"PacketSent","nameLocation":"796:10:0","nodeType":"EventDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"indexed":false,"mutability":"mutable","name":"encodedPayload","nameLocation":"813:14:0","nodeType":"VariableDeclaration","scope":56,"src":"807:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49,"name":"bytes","nodeType":"ElementaryTypeName","src":"807:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":52,"indexed":false,"mutability":"mutable","name":"options","nameLocation":"835:7:0","nodeType":"VariableDeclaration","scope":56,"src":"829:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":51,"name":"bytes","nodeType":"ElementaryTypeName","src":"829:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":54,"indexed":false,"mutability":"mutable","name":"sendLibrary","nameLocation":"852:11:0","nodeType":"VariableDeclaration","scope":56,"src":"844:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"806:58:0"},"src":"790:75:0"},{"anonymous":false,"eventSelector":"0d87345f3d1c929caba93e1c3821b54ff3512e12b66aa3cfe54b6bcbc17e59b4","id":65,"name":"PacketVerified","nameLocation":"877:14:0","nodeType":"EventDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"899:6:0","nodeType":"VariableDeclaration","scope":65,"src":"892:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_memory_ptr","typeString":"struct Origin"},"typeName":{"id":58,"nodeType":"UserDefinedTypeName","pathNode":{"id":57,"name":"Origin","nameLocations":["892:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"892:6:0"},"referencedDeclaration":40,"src":"892:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"915:8:0","nodeType":"VariableDeclaration","scope":65,"src":"907:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"933:11:0","nodeType":"VariableDeclaration","scope":65,"src":"925:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"925:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"891:54:0"},"src":"871:75:0"},{"anonymous":false,"eventSelector":"3cd5e48f9730b129dc7550f0fcea9c767b7be37837cd10e55eb35f734f4bca04","id":72,"name":"PacketDelivered","nameLocation":"958:15:0","nodeType":"EventDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"981:6:0","nodeType":"VariableDeclaration","scope":72,"src":"974:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_memory_ptr","typeString":"struct Origin"},"typeName":{"id":67,"nodeType":"UserDefinedTypeName","pathNode":{"id":66,"name":"Origin","nameLocations":["974:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"974:6:0"},"referencedDeclaration":40,"src":"974:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"997:8:0","nodeType":"VariableDeclaration","scope":72,"src":"989:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:33:0"},"src":"952:55:0"},{"anonymous":false,"eventSelector":"7edfa10fe10193301ad8a8bea7e968c7bcabcc64981f368e3aeada40ce26ae2c","id":93,"name":"LzReceiveAlert","nameLocation":"1019:14:0","nodeType":"EventDefinition","parameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"1059:8:0","nodeType":"VariableDeclaration","scope":93,"src":"1043:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"1093:8:0","nodeType":"VariableDeclaration","scope":93,"src":"1077:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"1118:6:0","nodeType":"VariableDeclaration","scope":93,"src":"1111:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_memory_ptr","typeString":"struct Origin"},"typeName":{"id":78,"nodeType":"UserDefinedTypeName","pathNode":{"id":77,"name":"Origin","nameLocations":["1111:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1111:6:0"},"referencedDeclaration":40,"src":"1111:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":81,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"1142:4:0","nodeType":"VariableDeclaration","scope":93,"src":"1134:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":80,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1134:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83,"indexed":false,"mutability":"mutable","name":"gas","nameLocation":"1164:3:0","nodeType":"VariableDeclaration","scope":93,"src":"1156:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1185:5:0","nodeType":"VariableDeclaration","scope":93,"src":"1177:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":87,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1206:7:0","nodeType":"VariableDeclaration","scope":93,"src":"1200:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"1200:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"1229:9:0","nodeType":"VariableDeclaration","scope":93,"src":"1223:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"1223:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":91,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1254:6:0","nodeType":"VariableDeclaration","scope":93,"src":"1248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":90,"name":"bytes","nodeType":"ElementaryTypeName","src":"1248:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1033:233:0"},"src":"1013:254:0"},{"anonymous":false,"eventSelector":"d476ec5ec1ac11cec3714d41e7ea49419471aceb9bd0dff1becfc3e363a62396","id":97,"name":"LzTokenSet","nameLocation":"1279:10:0","nodeType":"EventDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1298:5:0","nodeType":"VariableDeclaration","scope":97,"src":"1290:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1289:15:0"},"src":"1273:32:0"},{"anonymous":false,"eventSelector":"6ee10e9ed4d6ce9742703a498707862f4b00f1396a87195eb93267b3d7983981","id":103,"name":"DelegateSet","nameLocation":"1317:11:0","nodeType":"EventDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1337:6:0","nodeType":"VariableDeclaration","scope":103,"src":"1329:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":101,"indexed":false,"mutability":"mutable","name":"delegate","nameLocation":"1353:8:0","nodeType":"VariableDeclaration","scope":103,"src":"1345:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1328:34:0"},"src":"1311:52:0"},{"functionSelector":"ddc28c58","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"1378:5:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"_params","nameLocation":"1409:7:0","nodeType":"VariableDeclaration","scope":114,"src":"1384:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$20_calldata_ptr","typeString":"struct MessagingParams"},"typeName":{"id":105,"nodeType":"UserDefinedTypeName","pathNode":{"id":104,"name":"MessagingParams","nameLocations":["1384:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":20,"src":"1384:15:0"},"referencedDeclaration":20,"src":"1384:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$20_storage_ptr","typeString":"struct MessagingParams"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"_sender","nameLocation":"1426:7:0","nodeType":"VariableDeclaration","scope":114,"src":"1418:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1418:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1383:51:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":114,"src":"1458:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":111,"nodeType":"UserDefinedTypeName","pathNode":{"id":110,"name":"MessagingFee","nameLocations":["1458:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"1458:12:0"},"referencedDeclaration":33,"src":"1458:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"1457:21:0"},"scope":202,"src":"1369:110:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2637a450","id":125,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"1494:4:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"_params","nameLocation":"1533:7:0","nodeType":"VariableDeclaration","scope":125,"src":"1508:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$20_calldata_ptr","typeString":"struct MessagingParams"},"typeName":{"id":116,"nodeType":"UserDefinedTypeName","pathNode":{"id":115,"name":"MessagingParams","nameLocations":["1508:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":20,"src":"1508:15:0"},"referencedDeclaration":20,"src":"1508:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$20_storage_ptr","typeString":"struct MessagingParams"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"_refundAddress","nameLocation":"1558:14:0","nodeType":"VariableDeclaration","scope":125,"src":"1550:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"1550:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1498:80:0"},"returnParameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":125,"src":"1605:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$28_memory_ptr","typeString":"struct MessagingReceipt"},"typeName":{"id":122,"nodeType":"UserDefinedTypeName","pathNode":{"id":121,"name":"MessagingReceipt","nameLocations":["1605:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"1605:16:0"},"referencedDeclaration":28,"src":"1605:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$28_storage_ptr","typeString":"struct MessagingReceipt"}},"visibility":"internal"}],"src":"1604:25:0"},"scope":202,"src":"1485:145:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a825d747","id":135,"implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1645:6:0","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"_origin","nameLocation":"1668:7:0","nodeType":"VariableDeclaration","scope":135,"src":"1652:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":127,"nodeType":"UserDefinedTypeName","pathNode":{"id":126,"name":"Origin","nameLocations":["1652:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1652:6:0"},"referencedDeclaration":40,"src":"1652:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"_receiver","nameLocation":"1685:9:0","nodeType":"VariableDeclaration","scope":135,"src":"1677:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"_payloadHash","nameLocation":"1704:12:0","nodeType":"VariableDeclaration","scope":135,"src":"1696:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1696:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1651:66:0"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"1726:0:0"},"scope":202,"src":"1636:91:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c9a54a99","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"verifiable","nameLocation":"1742:10:0","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"_origin","nameLocation":"1769:7:0","nodeType":"VariableDeclaration","scope":145,"src":"1753:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":137,"nodeType":"UserDefinedTypeName","pathNode":{"id":136,"name":"Origin","nameLocations":["1753:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1753:6:0"},"referencedDeclaration":40,"src":"1753:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"_receiver","nameLocation":"1786:9:0","nodeType":"VariableDeclaration","scope":145,"src":"1778:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"1778:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1752:44:0"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":145,"src":"1820:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":142,"name":"bool","nodeType":"ElementaryTypeName","src":"1820:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1819:6:0"},"scope":202,"src":"1733:93:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"861e1ca5","id":155,"implemented":false,"kind":"function","modifiers":[],"name":"initializable","nameLocation":"1841:13:0","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"_origin","nameLocation":"1871:7:0","nodeType":"VariableDeclaration","scope":155,"src":"1855:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":147,"nodeType":"UserDefinedTypeName","pathNode":{"id":146,"name":"Origin","nameLocations":["1855:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1855:6:0"},"referencedDeclaration":40,"src":"1855:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"_receiver","nameLocation":"1888:9:0","nodeType":"VariableDeclaration","scope":155,"src":"1880:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1854:44:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":155,"src":"1922:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":152,"name":"bool","nodeType":"ElementaryTypeName","src":"1922:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1921:6:0"},"scope":202,"src":"1832:96:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0c0c389e","id":169,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1943:9:0","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"_origin","nameLocation":"1978:7:0","nodeType":"VariableDeclaration","scope":169,"src":"1962:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":157,"nodeType":"UserDefinedTypeName","pathNode":{"id":156,"name":"Origin","nameLocations":["1962:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1962:6:0"},"referencedDeclaration":40,"src":"1962:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"_receiver","nameLocation":"2003:9:0","nodeType":"VariableDeclaration","scope":169,"src":"1995:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1995:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"_guid","nameLocation":"2030:5:0","nodeType":"VariableDeclaration","scope":169,"src":"2022:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2022:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"_message","nameLocation":"2060:8:0","nodeType":"VariableDeclaration","scope":169,"src":"2045:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":163,"name":"bytes","nodeType":"ElementaryTypeName","src":"2045:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"_extraData","nameLocation":"2093:10:0","nodeType":"VariableDeclaration","scope":169,"src":"2078:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":165,"name":"bytes","nodeType":"ElementaryTypeName","src":"2078:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1952:157:0"},"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[],"src":"2126:0:0"},"scope":202,"src":"1934:193:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2a56c1b0","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"clear","nameLocation":"2269:5:0","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"_oapp","nameLocation":"2283:5:0","nodeType":"VariableDeclaration","scope":181,"src":"2275:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"_origin","nameLocation":"2306:7:0","nodeType":"VariableDeclaration","scope":181,"src":"2290:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":173,"nodeType":"UserDefinedTypeName","pathNode":{"id":172,"name":"Origin","nameLocations":["2290:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2290:6:0"},"referencedDeclaration":40,"src":"2290:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"_guid","nameLocation":"2323:5:0","nodeType":"VariableDeclaration","scope":181,"src":"2315:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2315:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"_message","nameLocation":"2345:8:0","nodeType":"VariableDeclaration","scope":181,"src":"2330:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":177,"name":"bytes","nodeType":"ElementaryTypeName","src":"2330:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2274:80:0"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[],"src":"2363:0:0"},"scope":202,"src":"2260:104:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c28e0eed","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"setLzToken","nameLocation":"2379:10:0","nodeType":"FunctionDefinition","parameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"_lzToken","nameLocation":"2398:8:0","nodeType":"VariableDeclaration","scope":186,"src":"2390:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2389:18:0"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"2416:0:0"},"scope":202,"src":"2370:47:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e4fe1d94","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"lzToken","nameLocation":"2432:7:0","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[],"src":"2439:2:0"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"2465:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:9:0"},"scope":202,"src":"2423:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e1758bd8","id":196,"implemented":false,"kind":"function","modifiers":[],"name":"nativeToken","nameLocation":"2489:11:0","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2500:2:0"},"returnParameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":196,"src":"2526:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2525:9:0"},"scope":202,"src":"2480:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca5eb5e1","id":201,"implemented":false,"kind":"function","modifiers":[],"name":"setDelegate","nameLocation":"2550:11:0","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"_delegate","nameLocation":"2570:9:0","nodeType":"VariableDeclaration","scope":201,"src":"2562:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"2562:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2561:19:0"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"2589:0:0"},"scope":202,"src":"2541:49:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":203,"src":"673:1919:0","usedErrors":[],"usedEvents":[56,65,72,93,97,103,256,262,268,276,284,292,302,495,507,519,633,643,665]}],"src":"33:2560:0"},"id":0},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[238],"Origin":[40]},"id":239,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":204,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:1"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","file":"./ILayerZeroEndpointV2.sol","id":206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":239,"sourceUnit":203,"src":"59:52:1","symbolAliases":[{"foreign":{"id":205,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"68:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":238,"linearizedBaseContracts":[238],"name":"ILayerZeroReceiver","nameLocation":"123:18:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"ff7bd03d","id":214,"implemented":false,"kind":"function","modifiers":[],"name":"allowInitializePath","nameLocation":"157:19:1","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"_origin","nameLocation":"193:7:1","nodeType":"VariableDeclaration","scope":214,"src":"177:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":208,"nodeType":"UserDefinedTypeName","pathNode":{"id":207,"name":"Origin","nameLocations":["177:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"177:6:1"},"referencedDeclaration":40,"src":"177:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"}],"src":"176:25:1"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":214,"src":"225:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":211,"name":"bool","nodeType":"ElementaryTypeName","src":"225:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"224:6:1"},"scope":238,"src":"148:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7d25a05e","id":223,"implemented":false,"kind":"function","modifiers":[],"name":"nextNonce","nameLocation":"246:9:1","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"_eid","nameLocation":"263:4:1","nodeType":"VariableDeclaration","scope":223,"src":"256:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":215,"name":"uint32","nodeType":"ElementaryTypeName","src":"256:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"_sender","nameLocation":"277:7:1","nodeType":"VariableDeclaration","scope":223,"src":"269:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"269:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"255:30:1"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":223,"src":"309:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":220,"name":"uint64","nodeType":"ElementaryTypeName","src":"309:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"308:8:1"},"scope":238,"src":"237:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"13137d65","id":237,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"332:9:1","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"_origin","nameLocation":"367:7:1","nodeType":"VariableDeclaration","scope":237,"src":"351:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":225,"nodeType":"UserDefinedTypeName","pathNode":{"id":224,"name":"Origin","nameLocations":["351:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"351:6:1"},"referencedDeclaration":40,"src":"351:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"_guid","nameLocation":"392:5:1","nodeType":"VariableDeclaration","scope":237,"src":"384:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"384:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"_message","nameLocation":"422:8:1","nodeType":"VariableDeclaration","scope":237,"src":"407:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":229,"name":"bytes","nodeType":"ElementaryTypeName","src":"407:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"_executor","nameLocation":"448:9:1","nodeType":"VariableDeclaration","scope":237,"src":"440:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"_extraData","nameLocation":"482:10:1","nodeType":"VariableDeclaration","scope":237,"src":"467:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":233,"name":"bytes","nodeType":"ElementaryTypeName","src":"467:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"341:157:1"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"515:0:1"},"scope":238,"src":"323:193:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":239,"src":"113:405:1","usedErrors":[],"usedEvents":[]}],"src":"33:486:1"},"id":1},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol","exportedSymbols":{"IMessageLibManager":[483],"SetConfigParam":[247]},"id":484,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":240,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:2"},{"canonicalName":"SetConfigParam","id":247,"members":[{"constant":false,"id":242,"mutability":"mutable","name":"eid","nameLocation":"94:3:2","nodeType":"VariableDeclaration","scope":247,"src":"87:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":241,"name":"uint32","nodeType":"ElementaryTypeName","src":"87:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"configType","nameLocation":"110:10:2","nodeType":"VariableDeclaration","scope":247,"src":"103:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":243,"name":"uint32","nodeType":"ElementaryTypeName","src":"103:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"config","nameLocation":"132:6:2","nodeType":"VariableDeclaration","scope":247,"src":"126:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":245,"name":"bytes","nodeType":"ElementaryTypeName","src":"126:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SetConfigParam","nameLocation":"66:14:2","nodeType":"StructDefinition","scope":484,"src":"59:82:2","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessageLibManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":483,"linearizedBaseContracts":[483],"name":"IMessageLibManager","nameLocation":"153:18:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IMessageLibManager.Timeout","id":252,"members":[{"constant":false,"id":249,"mutability":"mutable","name":"lib","nameLocation":"211:3:2","nodeType":"VariableDeclaration","scope":252,"src":"203:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"203:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"expiry","nameLocation":"232:6:2","nodeType":"VariableDeclaration","scope":252,"src":"224:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Timeout","nameLocation":"185:7:2","nodeType":"StructDefinition","scope":483,"src":"178:67:2","visibility":"public"},{"anonymous":false,"eventSelector":"6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5","id":256,"name":"LibraryRegistered","nameLocation":"257:17:2","nodeType":"EventDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"283:6:2","nodeType":"VariableDeclaration","scope":256,"src":"275:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"274:16:2"},"src":"251:40:2"},{"anonymous":false,"eventSelector":"16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f5","id":262,"name":"DefaultSendLibrarySet","nameLocation":"302:21:2","nodeType":"EventDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"331:3:2","nodeType":"VariableDeclaration","scope":262,"src":"324:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":257,"name":"uint32","nodeType":"ElementaryTypeName","src":"324:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":260,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"344:6:2","nodeType":"VariableDeclaration","scope":262,"src":"336:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"323:28:2"},"src":"296:56:2"},{"anonymous":false,"eventSelector":"c16891855cffb4a5ac51ac11864a3f3c96ba816cc45fe686c987ae36277de5ec","id":268,"name":"DefaultReceiveLibrarySet","nameLocation":"363:24:2","nodeType":"EventDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"395:3:2","nodeType":"VariableDeclaration","scope":268,"src":"388:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":263,"name":"uint32","nodeType":"ElementaryTypeName","src":"388:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"408:6:2","nodeType":"VariableDeclaration","scope":268,"src":"400:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:28:2"},"src":"357:59:2"},{"anonymous":false,"eventSelector":"55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8","id":276,"name":"DefaultReceiveLibraryTimeoutSet","nameLocation":"427:31:2","nodeType":"EventDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"466:3:2","nodeType":"VariableDeclaration","scope":276,"src":"459:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":269,"name":"uint32","nodeType":"ElementaryTypeName","src":"459:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":272,"indexed":false,"mutability":"mutable","name":"oldLib","nameLocation":"479:6:2","nodeType":"VariableDeclaration","scope":276,"src":"471:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"471:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"indexed":false,"mutability":"mutable","name":"expiry","nameLocation":"495:6:2","nodeType":"VariableDeclaration","scope":276,"src":"487:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"458:44:2"},"src":"421:82:2"},{"anonymous":false,"eventSelector":"4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c","id":284,"name":"SendLibrarySet","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"537:6:2","nodeType":"VariableDeclaration","scope":284,"src":"529:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":280,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"552:3:2","nodeType":"VariableDeclaration","scope":284,"src":"545:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":279,"name":"uint32","nodeType":"ElementaryTypeName","src":"545:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"565:6:2","nodeType":"VariableDeclaration","scope":284,"src":"557:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"528:44:2"},"src":"508:65:2"},{"anonymous":false,"eventSelector":"cd6f92f5ac6185a5acfa02c92090746cec64d777269cbcd0ed031e396657a1c2","id":292,"name":"ReceiveLibrarySet","nameLocation":"584:17:2","nodeType":"EventDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"610:8:2","nodeType":"VariableDeclaration","scope":292,"src":"602:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"602:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":288,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"627:3:2","nodeType":"VariableDeclaration","scope":292,"src":"620:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":287,"name":"uint32","nodeType":"ElementaryTypeName","src":"620:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":290,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"640:6:2","nodeType":"VariableDeclaration","scope":292,"src":"632:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"601:46:2"},"src":"578:70:2"},{"anonymous":false,"eventSelector":"4e0a5bbfa0c11a64effb1ada324b5437a17272e1aed9320398715ef71bb20928","id":302,"name":"ReceiveLibraryTimeoutSet","nameLocation":"659:24:2","nodeType":"EventDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"692:8:2","nodeType":"VariableDeclaration","scope":302,"src":"684:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"709:3:2","nodeType":"VariableDeclaration","scope":302,"src":"702:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":295,"name":"uint32","nodeType":"ElementaryTypeName","src":"702:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":298,"indexed":false,"mutability":"mutable","name":"oldLib","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":302,"src":"714:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"indexed":false,"mutability":"mutable","name":"timeout","nameLocation":"738:7:2","nodeType":"VariableDeclaration","scope":302,"src":"730:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"683:63:2"},"src":"653:94:2"},{"functionSelector":"e8964e81","id":307,"implemented":false,"kind":"function","modifiers":[],"name":"registerLibrary","nameLocation":"762:15:2","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"_lib","nameLocation":"786:4:2","nodeType":"VariableDeclaration","scope":307,"src":"778:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:14:2"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"800:0:2"},"scope":483,"src":"753:48:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dc706a62","id":314,"implemented":false,"kind":"function","modifiers":[],"name":"isRegisteredLibrary","nameLocation":"816:19:2","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"_lib","nameLocation":"844:4:2","nodeType":"VariableDeclaration","scope":314,"src":"836:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"835:14:2"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"873:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"872:6:2"},"scope":483,"src":"807:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9132e5c3","id":320,"implemented":false,"kind":"function","modifiers":[],"name":"getRegisteredLibraries","nameLocation":"894:22:2","nodeType":"FunctionDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[],"src":"916:2:2"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":320,"src":"942:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":317,"nodeType":"ArrayTypeName","src":"942:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"941:18:2"},"scope":483,"src":"885:75:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aafea312","id":327,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultSendLibrary","nameLocation":"975:21:2","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"_eid","nameLocation":"1004:4:2","nodeType":"VariableDeclaration","scope":327,"src":"997:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":321,"name":"uint32","nodeType":"ElementaryTypeName","src":"997:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"_newLib","nameLocation":"1018:7:2","nodeType":"VariableDeclaration","scope":327,"src":"1010:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"996:30:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1035:0:2"},"scope":483,"src":"966:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f64be4c7","id":334,"implemented":false,"kind":"function","modifiers":[],"name":"defaultSendLibrary","nameLocation":"1051:18:2","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"_eid","nameLocation":"1077:4:2","nodeType":"VariableDeclaration","scope":334,"src":"1070:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":328,"name":"uint32","nodeType":"ElementaryTypeName","src":"1070:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1069:13:2"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"1106:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1105:9:2"},"scope":483,"src":"1042:73:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a718531b","id":343,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultReceiveLibrary","nameLocation":"1130:24:2","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"_eid","nameLocation":"1162:4:2","nodeType":"VariableDeclaration","scope":343,"src":"1155:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":335,"name":"uint32","nodeType":"ElementaryTypeName","src":"1155:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"_newLib","nameLocation":"1176:7:2","nodeType":"VariableDeclaration","scope":343,"src":"1168:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"_gracePeriod","nameLocation":"1193:12:2","nodeType":"VariableDeclaration","scope":343,"src":"1185:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1154:52:2"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"1215:0:2"},"scope":483,"src":"1121:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6f50a803","id":350,"implemented":false,"kind":"function","modifiers":[],"name":"defaultReceiveLibrary","nameLocation":"1231:21:2","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"_eid","nameLocation":"1260:4:2","nodeType":"VariableDeclaration","scope":350,"src":"1253:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":344,"name":"uint32","nodeType":"ElementaryTypeName","src":"1253:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1252:13:2"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":350,"src":"1289:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:9:2"},"scope":483,"src":"1222:76:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d4b4ec8f","id":359,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultReceiveLibraryTimeout","nameLocation":"1313:31:2","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"_eid","nameLocation":"1352:4:2","nodeType":"VariableDeclaration","scope":359,"src":"1345:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":351,"name":"uint32","nodeType":"ElementaryTypeName","src":"1345:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"_lib","nameLocation":"1366:4:2","nodeType":"VariableDeclaration","scope":359,"src":"1358:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1358:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"_expiry","nameLocation":"1380:7:2","nodeType":"VariableDeclaration","scope":359,"src":"1372:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:44:2"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[],"src":"1397:0:2"},"scope":483,"src":"1304:94:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e83f5bb","id":368,"implemented":false,"kind":"function","modifiers":[],"name":"defaultReceiveLibraryTimeout","nameLocation":"1413:28:2","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"_eid","nameLocation":"1449:4:2","nodeType":"VariableDeclaration","scope":368,"src":"1442:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":360,"name":"uint32","nodeType":"ElementaryTypeName","src":"1442:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1441:13:2"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"lib","nameLocation":"1486:3:2","nodeType":"VariableDeclaration","scope":368,"src":"1478:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"expiry","nameLocation":"1499:6:2","nodeType":"VariableDeclaration","scope":368,"src":"1491:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1477:29:2"},"scope":483,"src":"1404:103:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6750cd4c","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"isSupportedEid","nameLocation":"1522:14:2","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"_eid","nameLocation":"1544:4:2","nodeType":"VariableDeclaration","scope":375,"src":"1537:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":369,"name":"uint32","nodeType":"ElementaryTypeName","src":"1537:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1536:13:2"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"1573:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":372,"name":"bool","nodeType":"ElementaryTypeName","src":"1573:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1572:6:2"},"scope":483,"src":"1513:66:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9d7f9775","id":386,"implemented":false,"kind":"function","modifiers":[],"name":"isValidReceiveLibrary","nameLocation":"1594:21:2","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"_receiver","nameLocation":"1624:9:2","nodeType":"VariableDeclaration","scope":386,"src":"1616:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"_eid","nameLocation":"1642:4:2","nodeType":"VariableDeclaration","scope":386,"src":"1635:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":378,"name":"uint32","nodeType":"ElementaryTypeName","src":"1635:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"_lib","nameLocation":"1656:4:2","nodeType":"VariableDeclaration","scope":386,"src":"1648:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:46:2"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"1685:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"1685:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1684:6:2"},"scope":483,"src":"1585:106:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"1697:59:2","text":"------------------- OApp interfaces -------------------"},"functionSelector":"9535ff30","id":396,"implemented":false,"kind":"function","modifiers":[],"name":"setSendLibrary","nameLocation":"1770:14:2","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"_oapp","nameLocation":"1793:5:2","nodeType":"VariableDeclaration","scope":396,"src":"1785:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"_eid","nameLocation":"1807:4:2","nodeType":"VariableDeclaration","scope":396,"src":"1800:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":390,"name":"uint32","nodeType":"ElementaryTypeName","src":"1800:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"_newLib","nameLocation":"1821:7:2","nodeType":"VariableDeclaration","scope":396,"src":"1813:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1784:45:2"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"1838:0:2"},"scope":483,"src":"1761:78:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b96a277f","id":405,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibrary","nameLocation":"1854:14:2","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"_sender","nameLocation":"1877:7:2","nodeType":"VariableDeclaration","scope":405,"src":"1869:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"1869:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"_eid","nameLocation":"1893:4:2","nodeType":"VariableDeclaration","scope":405,"src":"1886:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":399,"name":"uint32","nodeType":"ElementaryTypeName","src":"1886:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1868:30:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"lib","nameLocation":"1930:3:2","nodeType":"VariableDeclaration","scope":405,"src":"1922:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1921:13:2"},"scope":483,"src":"1845:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dc93c8a2","id":414,"implemented":false,"kind":"function","modifiers":[],"name":"isDefaultSendLibrary","nameLocation":"1950:20:2","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"_sender","nameLocation":"1979:7:2","nodeType":"VariableDeclaration","scope":414,"src":"1971:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"_eid","nameLocation":"1995:4:2","nodeType":"VariableDeclaration","scope":414,"src":"1988:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":408,"name":"uint32","nodeType":"ElementaryTypeName","src":"1988:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1970:30:2"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":414,"src":"2024:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":411,"name":"bool","nodeType":"ElementaryTypeName","src":"2024:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2023:6:2"},"scope":483,"src":"1941:89:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6a14d715","id":425,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveLibrary","nameLocation":"2045:17:2","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"_oapp","nameLocation":"2071:5:2","nodeType":"VariableDeclaration","scope":425,"src":"2063:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"2063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"_eid","nameLocation":"2085:4:2","nodeType":"VariableDeclaration","scope":425,"src":"2078:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":417,"name":"uint32","nodeType":"ElementaryTypeName","src":"2078:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"_newLib","nameLocation":"2099:7:2","nodeType":"VariableDeclaration","scope":425,"src":"2091:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"_gracePeriod","nameLocation":"2116:12:2","nodeType":"VariableDeclaration","scope":425,"src":"2108:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2108:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2062:67:2"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"2138:0:2"},"scope":483,"src":"2036:103:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"402f8468","id":436,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibrary","nameLocation":"2154:17:2","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"_receiver","nameLocation":"2180:9:2","nodeType":"VariableDeclaration","scope":436,"src":"2172:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"2172:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"_eid","nameLocation":"2198:4:2","nodeType":"VariableDeclaration","scope":436,"src":"2191:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":428,"name":"uint32","nodeType":"ElementaryTypeName","src":"2191:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2171:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"lib","nameLocation":"2235:3:2","nodeType":"VariableDeclaration","scope":436,"src":"2227:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"2227:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"isDefault","nameLocation":"2245:9:2","nodeType":"VariableDeclaration","scope":436,"src":"2240:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"2240:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2226:29:2"},"scope":483,"src":"2145:111:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"183c834f","id":447,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveLibraryTimeout","nameLocation":"2271:24:2","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"_oapp","nameLocation":"2304:5:2","nodeType":"VariableDeclaration","scope":447,"src":"2296:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"_eid","nameLocation":"2318:4:2","nodeType":"VariableDeclaration","scope":447,"src":"2311:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":439,"name":"uint32","nodeType":"ElementaryTypeName","src":"2311:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"_lib","nameLocation":"2332:4:2","nodeType":"VariableDeclaration","scope":447,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"_expiry","nameLocation":"2346:7:2","nodeType":"VariableDeclaration","scope":447,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2338:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:59:2"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":483,"src":"2262:102:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ef667aa1","id":458,"implemented":false,"kind":"function","modifiers":[],"name":"receiveLibraryTimeout","nameLocation":"2379:21:2","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"_receiver","nameLocation":"2409:9:2","nodeType":"VariableDeclaration","scope":458,"src":"2401:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"2401:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"_eid","nameLocation":"2427:4:2","nodeType":"VariableDeclaration","scope":458,"src":"2420:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":450,"name":"uint32","nodeType":"ElementaryTypeName","src":"2420:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2400:32:2"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"lib","nameLocation":"2464:3:2","nodeType":"VariableDeclaration","scope":458,"src":"2456:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"2456:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"expiry","nameLocation":"2477:6:2","nodeType":"VariableDeclaration","scope":458,"src":"2469:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2455:29:2"},"scope":483,"src":"2370:115:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6dbd9f90","id":469,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"2500:9:2","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"_oapp","nameLocation":"2518:5:2","nodeType":"VariableDeclaration","scope":469,"src":"2510:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"_lib","nameLocation":"2533:4:2","nodeType":"VariableDeclaration","scope":469,"src":"2525:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"_params","nameLocation":"2565:7:2","nodeType":"VariableDeclaration","scope":469,"src":"2539:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SetConfigParam_$247_calldata_ptr_$dyn_calldata_ptr","typeString":"struct SetConfigParam[]"},"typeName":{"baseType":{"id":464,"nodeType":"UserDefinedTypeName","pathNode":{"id":463,"name":"SetConfigParam","nameLocations":["2539:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"2539:14:2"},"referencedDeclaration":247,"src":"2539:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_SetConfigParam_$247_storage_ptr","typeString":"struct SetConfigParam"}},"id":465,"nodeType":"ArrayTypeName","src":"2539:16:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SetConfigParam_$247_storage_$dyn_storage_ptr","typeString":"struct SetConfigParam[]"}},"visibility":"internal"}],"src":"2509:64:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2582:0:2"},"scope":483,"src":"2491:92:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2b3197b9","id":482,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"2598:9:2","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"_oapp","nameLocation":"2625:5:2","nodeType":"VariableDeclaration","scope":482,"src":"2617:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"_lib","nameLocation":"2648:4:2","nodeType":"VariableDeclaration","scope":482,"src":"2640:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"_eid","nameLocation":"2669:4:2","nodeType":"VariableDeclaration","scope":482,"src":"2662:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":474,"name":"uint32","nodeType":"ElementaryTypeName","src":"2662:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"_configType","nameLocation":"2690:11:2","nodeType":"VariableDeclaration","scope":482,"src":"2683:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":476,"name":"uint32","nodeType":"ElementaryTypeName","src":"2683:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2607:100:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"config","nameLocation":"2744:6:2","nodeType":"VariableDeclaration","scope":482,"src":"2731:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":479,"name":"bytes","nodeType":"ElementaryTypeName","src":"2731:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2730:21:2"},"scope":483,"src":"2589:163:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":484,"src":"143:2611:2","usedErrors":[],"usedEvents":[256,262,268,276,284,292,302]}],"src":"33:2722:2"},"id":2},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol","exportedSymbols":{"IMessagingChannel":[619]},"id":620,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":485,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingChannel","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":619,"linearizedBaseContracts":[619],"name":"IMessagingChannel","nameLocation":"69:17:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde48","id":495,"name":"InboundNonceSkipped","nameLocation":"99:19:3","nodeType":"EventDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"126:6:3","nodeType":"VariableDeclaration","scope":495,"src":"119:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":486,"name":"uint32","nodeType":"ElementaryTypeName","src":"119:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":489,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"142:6:3","nodeType":"VariableDeclaration","scope":495,"src":"134:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"134:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":491,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"158:8:3","nodeType":"VariableDeclaration","scope":495,"src":"150:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"150:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"175:5:3","nodeType":"VariableDeclaration","scope":495,"src":"168:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":492,"name":"uint64","nodeType":"ElementaryTypeName","src":"168:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"118:63:3"},"src":"93:89:3"},{"anonymous":false,"eventSelector":"af0450c392c4f702515a457a362328c8aa21916048ca6d0419e248b30cb55292","id":507,"name":"PacketNilified","nameLocation":"193:14:3","nodeType":"EventDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"215:6:3","nodeType":"VariableDeclaration","scope":507,"src":"208:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":496,"name":"uint32","nodeType":"ElementaryTypeName","src":"208:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":499,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"231:6:3","nodeType":"VariableDeclaration","scope":507,"src":"223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"223:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":501,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"247:8:3","nodeType":"VariableDeclaration","scope":507,"src":"239:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"239:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"264:5:3","nodeType":"VariableDeclaration","scope":507,"src":"257:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":502,"name":"uint64","nodeType":"ElementaryTypeName","src":"257:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":505,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"279:11:3","nodeType":"VariableDeclaration","scope":507,"src":"271:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"271:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"207:84:3"},"src":"187:105:3"},{"anonymous":false,"eventSelector":"7f68a37a6e69a0de35024a234558f9efe4b33b58657753d21eaaa82d51c3510e","id":519,"name":"PacketBurnt","nameLocation":"303:11:3","nodeType":"EventDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"322:6:3","nodeType":"VariableDeclaration","scope":519,"src":"315:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":508,"name":"uint32","nodeType":"ElementaryTypeName","src":"315:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":511,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"338:6:3","nodeType":"VariableDeclaration","scope":519,"src":"330:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"330:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"354:8:3","nodeType":"VariableDeclaration","scope":519,"src":"346:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"371:5:3","nodeType":"VariableDeclaration","scope":519,"src":"364:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":514,"name":"uint64","nodeType":"ElementaryTypeName","src":"364:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":517,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"386:11:3","nodeType":"VariableDeclaration","scope":519,"src":"378:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"378:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"314:84:3"},"src":"297:102:3"},{"functionSelector":"416ecebf","id":524,"implemented":false,"kind":"function","modifiers":[],"name":"eid","nameLocation":"414:3:3","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"417:2:3"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"443:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":521,"name":"uint32","nodeType":"ElementaryTypeName","src":"443:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"442:8:3"},"scope":619,"src":"405:46:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d70b8902","id":535,"implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"614:4:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"_oapp","nameLocation":"627:5:3","nodeType":"VariableDeclaration","scope":535,"src":"619:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"_srcEid","nameLocation":"641:7:3","nodeType":"VariableDeclaration","scope":535,"src":"634:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":527,"name":"uint32","nodeType":"ElementaryTypeName","src":"634:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"_sender","nameLocation":"658:7:3","nodeType":"VariableDeclaration","scope":535,"src":"650:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"650:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"_nonce","nameLocation":"674:6:3","nodeType":"VariableDeclaration","scope":535,"src":"667:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":531,"name":"uint64","nodeType":"ElementaryTypeName","src":"667:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"618:63:3"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[],"src":"690:0:3"},"scope":619,"src":"605:86:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e80fbf3","id":548,"implemented":false,"kind":"function","modifiers":[],"name":"nilify","nameLocation":"706:6:3","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"_oapp","nameLocation":"721:5:3","nodeType":"VariableDeclaration","scope":548,"src":"713:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"_srcEid","nameLocation":"735:7:3","nodeType":"VariableDeclaration","scope":548,"src":"728:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":538,"name":"uint32","nodeType":"ElementaryTypeName","src":"728:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"_sender","nameLocation":"752:7:3","nodeType":"VariableDeclaration","scope":548,"src":"744:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"744:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"_nonce","nameLocation":"768:6:3","nodeType":"VariableDeclaration","scope":548,"src":"761:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":542,"name":"uint64","nodeType":"ElementaryTypeName","src":"761:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"_payloadHash","nameLocation":"784:12:3","nodeType":"VariableDeclaration","scope":548,"src":"776:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"776:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"712:85:3"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[],"src":"806:0:3"},"scope":619,"src":"697:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"40f80683","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"822:4:3","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"_oapp","nameLocation":"835:5:3","nodeType":"VariableDeclaration","scope":561,"src":"827:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"_srcEid","nameLocation":"849:7:3","nodeType":"VariableDeclaration","scope":561,"src":"842:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":551,"name":"uint32","nodeType":"ElementaryTypeName","src":"842:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"_sender","nameLocation":"866:7:3","nodeType":"VariableDeclaration","scope":561,"src":"858:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"858:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"_nonce","nameLocation":"882:6:3","nodeType":"VariableDeclaration","scope":561,"src":"875:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":555,"name":"uint64","nodeType":"ElementaryTypeName","src":"875:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"_payloadHash","nameLocation":"898:12:3","nodeType":"VariableDeclaration","scope":561,"src":"890:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"890:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"826:85:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"920:0:3"},"scope":619,"src":"813:108:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aafe5e07","id":572,"implemented":false,"kind":"function","modifiers":[],"name":"nextGuid","nameLocation":"936:8:3","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"_sender","nameLocation":"953:7:3","nodeType":"VariableDeclaration","scope":572,"src":"945:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"_dstEid","nameLocation":"969:7:3","nodeType":"VariableDeclaration","scope":572,"src":"962:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":564,"name":"uint32","nodeType":"ElementaryTypeName","src":"962:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"_receiver","nameLocation":"986:9:3","nodeType":"VariableDeclaration","scope":572,"src":"978:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"978:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"944:52:3"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"1020:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1020:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1019:9:3"},"scope":619,"src":"927:102:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a0dd43fc","id":583,"implemented":false,"kind":"function","modifiers":[],"name":"inboundNonce","nameLocation":"1044:12:3","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"_receiver","nameLocation":"1065:9:3","nodeType":"VariableDeclaration","scope":583,"src":"1057:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"1057:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"_srcEid","nameLocation":"1083:7:3","nodeType":"VariableDeclaration","scope":583,"src":"1076:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":575,"name":"uint32","nodeType":"ElementaryTypeName","src":"1076:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"_sender","nameLocation":"1100:7:3","nodeType":"VariableDeclaration","scope":583,"src":"1092:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1092:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1056:52:3"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":583,"src":"1132:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":580,"name":"uint64","nodeType":"ElementaryTypeName","src":"1132:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1131:8:3"},"scope":619,"src":"1035:105:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c6d7340","id":594,"implemented":false,"kind":"function","modifiers":[],"name":"outboundNonce","nameLocation":"1155:13:3","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"_sender","nameLocation":"1177:7:3","nodeType":"VariableDeclaration","scope":594,"src":"1169:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"_dstEid","nameLocation":"1193:7:3","nodeType":"VariableDeclaration","scope":594,"src":"1186:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":586,"name":"uint32","nodeType":"ElementaryTypeName","src":"1186:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"_receiver","nameLocation":"1210:9:3","nodeType":"VariableDeclaration","scope":594,"src":"1202:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1202:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1168:52:3"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"1244:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":591,"name":"uint64","nodeType":"ElementaryTypeName","src":"1244:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1243:8:3"},"scope":619,"src":"1146:106:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9fc7bcd","id":607,"implemented":false,"kind":"function","modifiers":[],"name":"inboundPayloadHash","nameLocation":"1267:18:3","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"_receiver","nameLocation":"1303:9:3","nodeType":"VariableDeclaration","scope":607,"src":"1295:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"1295:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"_srcEid","nameLocation":"1329:7:3","nodeType":"VariableDeclaration","scope":607,"src":"1322:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":597,"name":"uint32","nodeType":"ElementaryTypeName","src":"1322:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"_sender","nameLocation":"1354:7:3","nodeType":"VariableDeclaration","scope":607,"src":"1346:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1346:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"_nonce","nameLocation":"1378:6:3","nodeType":"VariableDeclaration","scope":607,"src":"1371:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":601,"name":"uint64","nodeType":"ElementaryTypeName","src":"1371:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1285:105:3"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"1414:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1414:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1413:9:3"},"scope":619,"src":"1258:165:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5b17bb70","id":618,"implemented":false,"kind":"function","modifiers":[],"name":"lazyInboundNonce","nameLocation":"1438:16:3","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"_receiver","nameLocation":"1463:9:3","nodeType":"VariableDeclaration","scope":618,"src":"1455:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"_srcEid","nameLocation":"1481:7:3","nodeType":"VariableDeclaration","scope":618,"src":"1474:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":610,"name":"uint32","nodeType":"ElementaryTypeName","src":"1474:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"_sender","nameLocation":"1498:7:3","nodeType":"VariableDeclaration","scope":618,"src":"1490:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1490:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1454:52:3"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":618,"src":"1530:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":615,"name":"uint64","nodeType":"ElementaryTypeName","src":"1530:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1529:8:3"},"scope":619,"src":"1429:109:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":620,"src":"59:1481:3","usedErrors":[],"usedEvents":[495,507,519]}],"src":"33:1508:3"},"id":3},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol","exportedSymbols":{"IMessagingComposer":[705]},"id":706,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":621,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingComposer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":705,"linearizedBaseContracts":[705],"name":"IMessagingComposer","nameLocation":"69:18:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"3d52ff888d033fd3dd1d8057da59e850c91d91a72c41dfa445b247dfedeb6dc1","id":633,"name":"ComposeSent","nameLocation":"100:11:4","nodeType":"EventDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"120:4:4","nodeType":"VariableDeclaration","scope":633,"src":"112:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":625,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"134:2:4","nodeType":"VariableDeclaration","scope":633,"src":"126:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"126:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":627,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"146:4:4","nodeType":"VariableDeclaration","scope":633,"src":"138:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"138:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":629,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"159:5:4","nodeType":"VariableDeclaration","scope":633,"src":"152:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":628,"name":"uint16","nodeType":"ElementaryTypeName","src":"152:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":631,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"172:7:4","nodeType":"VariableDeclaration","scope":633,"src":"166:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":630,"name":"bytes","nodeType":"ElementaryTypeName","src":"166:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:69:4"},"src":"94:87:4"},{"anonymous":false,"eventSelector":"0036c98efcf9e6641dfbc9051f66f405253e8e0c2ab4a24dccda15595b7378c8","id":643,"name":"ComposeDelivered","nameLocation":"192:16:4","nodeType":"EventDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"217:4:4","nodeType":"VariableDeclaration","scope":643,"src":"209:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"209:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"231:2:4","nodeType":"VariableDeclaration","scope":643,"src":"223:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"243:4:4","nodeType":"VariableDeclaration","scope":643,"src":"235:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"235:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":641,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"256:5:4","nodeType":"VariableDeclaration","scope":643,"src":"249:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":640,"name":"uint16","nodeType":"ElementaryTypeName","src":"249:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"208:54:4"},"src":"186:77:4"},{"anonymous":false,"eventSelector":"8a0b1dce321c5c5fb42349bce46d18087c04140de520917661fb923e44a904b9","id":665,"name":"LzComposeAlert","nameLocation":"274:14:4","nodeType":"EventDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"314:4:4","nodeType":"VariableDeclaration","scope":665,"src":"298:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"298:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"344:2:4","nodeType":"VariableDeclaration","scope":665,"src":"328:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"372:8:4","nodeType":"VariableDeclaration","scope":665,"src":"356:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"398:4:4","nodeType":"VariableDeclaration","scope":665,"src":"390:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"390:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":653,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"419:5:4","nodeType":"VariableDeclaration","scope":665,"src":"412:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":652,"name":"uint16","nodeType":"ElementaryTypeName","src":"412:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":655,"indexed":false,"mutability":"mutable","name":"gas","nameLocation":"442:3:4","nodeType":"VariableDeclaration","scope":665,"src":"434:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":657,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"463:5:4","nodeType":"VariableDeclaration","scope":665,"src":"455:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"484:7:4","nodeType":"VariableDeclaration","scope":665,"src":"478:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":658,"name":"bytes","nodeType":"ElementaryTypeName","src":"478:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"507:9:4","nodeType":"VariableDeclaration","scope":665,"src":"501:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"501:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":663,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"532:6:4","nodeType":"VariableDeclaration","scope":665,"src":"526:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":662,"name":"bytes","nodeType":"ElementaryTypeName","src":"526:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"288:256:4"},"src":"268:277:4"},{"functionSelector":"35d330b0","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"composeQueue","nameLocation":"560:12:4","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"_from","nameLocation":"590:5:4","nodeType":"VariableDeclaration","scope":678,"src":"582:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"_to","nameLocation":"613:3:4","nodeType":"VariableDeclaration","scope":678,"src":"605:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"_guid","nameLocation":"634:5:4","nodeType":"VariableDeclaration","scope":678,"src":"626:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"626:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"_index","nameLocation":"656:6:4","nodeType":"VariableDeclaration","scope":678,"src":"649:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":672,"name":"uint16","nodeType":"ElementaryTypeName","src":"649:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"572:96:4"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"messageHash","nameLocation":"700:11:4","nodeType":"VariableDeclaration","scope":678,"src":"692:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"692:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"691:21:4"},"scope":705,"src":"551:162:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7cb59012","id":689,"implemented":false,"kind":"function","modifiers":[],"name":"sendCompose","nameLocation":"728:11:4","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"_to","nameLocation":"748:3:4","nodeType":"VariableDeclaration","scope":689,"src":"740:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"_guid","nameLocation":"761:5:4","nodeType":"VariableDeclaration","scope":689,"src":"753:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"753:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"_index","nameLocation":"775:6:4","nodeType":"VariableDeclaration","scope":689,"src":"768:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":683,"name":"uint16","nodeType":"ElementaryTypeName","src":"768:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"_message","nameLocation":"798:8:4","nodeType":"VariableDeclaration","scope":689,"src":"783:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":685,"name":"bytes","nodeType":"ElementaryTypeName","src":"783:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"739:68:4"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"816:0:4"},"scope":705,"src":"719:98:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"91d20fa1","id":704,"implemented":false,"kind":"function","modifiers":[],"name":"lzCompose","nameLocation":"832:9:4","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"_from","nameLocation":"859:5:4","nodeType":"VariableDeclaration","scope":704,"src":"851:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"_to","nameLocation":"882:3:4","nodeType":"VariableDeclaration","scope":704,"src":"874:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"_guid","nameLocation":"903:5:4","nodeType":"VariableDeclaration","scope":704,"src":"895:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"_index","nameLocation":"925:6:4","nodeType":"VariableDeclaration","scope":704,"src":"918:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":696,"name":"uint16","nodeType":"ElementaryTypeName","src":"918:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"_message","nameLocation":"956:8:4","nodeType":"VariableDeclaration","scope":704,"src":"941:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":698,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"_extraData","nameLocation":"989:10:4","nodeType":"VariableDeclaration","scope":704,"src":"974:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":700,"name":"bytes","nodeType":"ElementaryTypeName","src":"974:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"841:164:4"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"1022:0:4"},"scope":705,"src":"823:200:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":706,"src":"59:966:4","usedErrors":[],"usedEvents":[633,643,665]}],"src":"33:993:4"},"id":4},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol","exportedSymbols":{"IMessagingContext":[720]},"id":721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":707,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingContext","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":720,"linearizedBaseContracts":[720],"name":"IMessagingContext","nameLocation":"69:17:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"79624ca9","id":712,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingMessage","nameLocation":"102:16:5","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[],"src":"118:2:5"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"144:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":709,"name":"bool","nodeType":"ElementaryTypeName","src":"144:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"143:6:5"},"scope":720,"src":"93:57:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"14f651a9","id":719,"implemented":false,"kind":"function","modifiers":[],"name":"getSendContext","nameLocation":"165:14:5","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"179:2:5"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"dstEid","nameLocation":"212:6:5","nodeType":"VariableDeclaration","scope":719,"src":"205:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":714,"name":"uint32","nodeType":"ElementaryTypeName","src":"205:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"sender","nameLocation":"228:6:5","nodeType":"VariableDeclaration","scope":719,"src":"220:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"220:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"204:31:5"},"scope":720,"src":"156:80:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":721,"src":"59:179:5","usedErrors":[],"usedEvents":[]}],"src":"33:206:5"},"id":5},"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol","exportedSymbols":{"MessagingFee":[33],"MessagingReceipt":[28],"OApp":[766],"OAppCore":[896],"OAppReceiver":[1048],"OAppSender":[1234],"Origin":[40]},"id":767,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":722,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol","file":"./OAppSender.sol","id":726,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":1235,"src":"199:78:6","symbolAliases":[{"foreign":{"id":723,"name":"OAppSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"208:10:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":724,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"220:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":725,"name":"MessagingReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"234:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol","file":"./OAppReceiver.sol","id":729,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":1049,"src":"389:58:6","symbolAliases":[{"foreign":{"id":727,"name":"OAppReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"398:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":728,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"412:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol","file":"./OAppCore.sol","id":731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":897,"src":"448:42:6","symbolAliases":[{"foreign":{"id":730,"name":"OAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"457:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":733,"name":"OAppSender","nameLocations":["665:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"665:10:6"},"id":734,"nodeType":"InheritanceSpecifier","src":"665:10:6"},{"baseName":{"id":735,"name":"OAppReceiver","nameLocations":["677:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1048,"src":"677:12:6"},"id":736,"nodeType":"InheritanceSpecifier","src":"677:12:6"}],"canonicalName":"OApp","contractDependencies":[],"contractKind":"contract","documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"492:146:6","text":" @title OApp\n @dev Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality."},"fullyImplemented":false,"id":766,"linearizedBaseContracts":[766,1048,1234,896,1431,2281,1297,1318,238],"name":"OApp","nameLocation":"657:4:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":748,"nodeType":"Block","src":"1046:2:6","statements":[]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"696:264:6","text":" @dev Constructor to initialize the OApp with the provided endpoint and owner.\n @param _endpoint The address of the LOCAL LayerZero endpoint.\n @param _delegate The delegate capable of making OApp configurations inside of the endpoint."},"id":749,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":744,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"1024:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":745,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"1035:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":746,"kind":"baseConstructorSpecifier","modifierName":{"id":743,"name":"OAppCore","nameLocations":["1015:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":896,"src":"1015:8:6"},"nodeType":"ModifierInvocation","src":"1015:30:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"_endpoint","nameLocation":"985:9:6","nodeType":"VariableDeclaration","scope":749,"src":"977:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"_delegate","nameLocation":"1004:9:6","nodeType":"VariableDeclaration","scope":749,"src":"996:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"976:38:6"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"1046:0:6"},"scope":766,"src":"965:83:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[928,1088],"body":{"id":764,"nodeType":"Block","src":"1464:58:6","statements":[{"expression":{"components":[{"id":760,"name":"SENDER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"1482:14:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":761,"name":"RECEIVER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1498:16:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1481:34:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint64_$_t_uint64_$","typeString":"tuple(uint64,uint64)"}},"functionReturnParameters":759,"id":763,"nodeType":"Return","src":"1474:41:6"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1054:228:6","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol implementation.\n @return receiverVersion The version of the OAppReceiver.sol implementation."},"functionSelector":"17442b70","id":765,"implemented":true,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"1296:11:6","nodeType":"FunctionDefinition","overrides":{"id":754,"nodeType":"OverrideSpecifier","overrides":[{"id":752,"name":"OAppSender","nameLocations":["1371:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"1371:10:6"},{"id":753,"name":"OAppReceiver","nameLocations":["1383:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1048,"src":"1383:12:6"}],"src":"1362:34:6"},"parameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"1307:2:6"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"senderVersion","nameLocation":"1421:13:6","nodeType":"VariableDeclaration","scope":765,"src":"1414:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":755,"name":"uint64","nodeType":"ElementaryTypeName","src":"1414:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"receiverVersion","nameLocation":"1443:15:6","nodeType":"VariableDeclaration","scope":765,"src":"1436:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":757,"name":"uint64","nodeType":"ElementaryTypeName","src":"1436:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1413:46:6"},"scope":766,"src":"1287:235:6","stateMutability":"pure","virtual":true,"visibility":"public"}],"scope":767,"src":"639:885:6","usedErrors":[912,1070,1072,1245,1249,1251,1253],"usedEvents":[1259,1332]}],"src":"33:1492:6"},"id":6},"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol","exportedSymbols":{"ILayerZeroEndpointV2":[202],"IOAppCore":[1297],"OAppCore":[896],"Ownable":[1431]},"id":897,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":768,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:7"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":770,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":897,"sourceUnit":1432,"src":"59:69:7","symbolAliases":[{"foreign":{"id":769,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"68:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol","file":"./interfaces/IOAppCore.sol","id":773,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":897,"sourceUnit":1298,"src":"129:77:7","symbolAliases":[{"foreign":{"id":771,"name":"IOAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"138:9:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":772,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"149:20:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":775,"name":"IOAppCore","nameLocations":["360:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1297,"src":"360:9:7"},"id":776,"nodeType":"InheritanceSpecifier","src":"360:9:7"},{"baseName":{"id":777,"name":"Ownable","nameLocations":["371:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"371:7:7"},"id":778,"nodeType":"InheritanceSpecifier","src":"371:7:7"}],"canonicalName":"OAppCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"208:121:7","text":" @title OAppCore\n @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations."},"fullyImplemented":false,"id":896,"linearizedBaseContracts":[896,1431,2281,1297],"name":"OAppCore","nameLocation":"348:8:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1274],"constant":false,"functionSelector":"5e280f11","id":781,"mutability":"immutable","name":"endpoint","nameLocation":"484:8:7","nodeType":"VariableDeclaration","scope":896,"src":"446:46:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"},"typeName":{"id":780,"nodeType":"UserDefinedTypeName","pathNode":{"id":779,"name":"ILayerZeroEndpointV2","nameLocations":["446:20:7"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"446:20:7"},"referencedDeclaration":202,"src":"446:20:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"visibility":"public"},{"baseFunctions":[1282],"constant":false,"functionSelector":"bb0b6a53","id":785,"mutability":"mutable","name":"peers","nameLocation":"612:5:7","nodeType":"VariableDeclaration","scope":896,"src":"569:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"},"typeName":{"id":784,"keyName":"eid","keyNameLocation":"584:3:7","keyType":{"id":782,"name":"uint32","nodeType":"ElementaryTypeName","src":"577:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Mapping","src":"569:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"},"valueName":"peer","valueNameLocation":"599:4:7","valueType":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"591:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"body":{"id":815,"nodeType":"Block","src":"1037:164:7","statements":[{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":793,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1047:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":795,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1079:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":794,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1058:20:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpointV2_$202_$","typeString":"type(contract ILayerZeroEndpointV2)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1058:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"src":"1047:42:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"id":798,"nodeType":"ExpressionStatement","src":"1047:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"1104:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1125:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1117:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"1117:7:7","typeDescriptions":{}}},"id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1117:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1104:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":808,"nodeType":"IfStatement","src":"1100:53:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":805,"name":"InvalidDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1136:15:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1136:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"1129:24:7"}},{"expression":{"arguments":[{"id":812,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"1184:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":809,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1163:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1172:11:7","memberName":"setDelegate","nodeType":"MemberAccess","referencedDeclaration":201,"src":"1163:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"1163:31:7"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"624:358:7","text":" @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\n @param _endpoint The address of the LOCAL Layer Zero endpoint.\n @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\n @dev The delegate typically should be set as the owner of the contract."},"id":816,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"_endpoint","nameLocation":"1007:9:7","nodeType":"VariableDeclaration","scope":816,"src":"999:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"999:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"_delegate","nameLocation":"1026:9:7","nodeType":"VariableDeclaration","scope":816,"src":"1018:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"998:38:7"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[],"src":"1037:0:7"},"scope":896,"src":"987:214:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1290],"body":{"id":831,"nodeType":"Block","src":"1794:38:7","statements":[{"expression":{"arguments":[{"id":827,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1813:4:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":828,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1819:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":826,"name":"_setPeer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"1804:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"1804:21:7"}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1207:512:7","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint.\n @dev Only the owner/admin of the OApp can call this function.\n @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n @dev Set this to bytes32(0) to remove the peer address.\n @dev Peer is a bytes32 to accommodate non-evm chains."},"functionSelector":"3400288b","id":832,"implemented":true,"kind":"function","modifiers":[{"id":824,"kind":"modifierInvocation","modifierName":{"id":823,"name":"onlyOwner","nameLocations":["1784:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1350,"src":"1784:9:7"},"nodeType":"ModifierInvocation","src":"1784:9:7"}],"name":"setPeer","nameLocation":"1733:7:7","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"_eid","nameLocation":"1748:4:7","nodeType":"VariableDeclaration","scope":832,"src":"1741:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":818,"name":"uint32","nodeType":"ElementaryTypeName","src":"1741:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"_peer","nameLocation":"1762:5:7","nodeType":"VariableDeclaration","scope":832,"src":"1754:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1754:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1740:28:7"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[],"src":"1794:0:7"},"scope":896,"src":"1724:108:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":851,"nodeType":"Block","src":"2349:71:7","statements":[{"expression":{"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":840,"name":"peers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"2359:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"}},"id":842,"indexExpression":{"id":841,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"2365:4:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2359:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":843,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2373:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2359:19:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":845,"nodeType":"ExpressionStatement","src":"2359:19:7"},{"eventCall":{"arguments":[{"id":847,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"2401:4:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":848,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2407:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":846,"name":"PeerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2393:7:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"EmitStatement","src":"2388:25:7"}]},"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"1838:443:7","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint.\n @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n @dev Set this to bytes32(0) to remove the peer address.\n @dev Peer is a bytes32 to accommodate non-evm chains."},"id":852,"implemented":true,"kind":"function","modifiers":[],"name":"_setPeer","nameLocation":"2295:8:7","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"_eid","nameLocation":"2311:4:7","nodeType":"VariableDeclaration","scope":852,"src":"2304:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":834,"name":"uint32","nodeType":"ElementaryTypeName","src":"2304:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"_peer","nameLocation":"2325:5:7","nodeType":"VariableDeclaration","scope":852,"src":"2317:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2303:28:7"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"2349:0:7"},"scope":896,"src":"2286:134:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":879,"nodeType":"Block","src":"2797:117:7","statements":[{"assignments":[861],"declarations":[{"constant":false,"id":861,"mutability":"mutable","name":"peer","nameLocation":"2815:4:7","nodeType":"VariableDeclaration","scope":879,"src":"2807:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2807:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":865,"initialValue":{"baseExpression":{"id":862,"name":"peers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"2822:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"}},"id":864,"indexExpression":{"id":863,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2828:4:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2822:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2807:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":866,"name":"peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"2847:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2855:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2855:7:7","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2847:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"nodeType":"IfStatement","src":"2843:43:7","trueBody":{"errorCall":{"arguments":[{"id":873,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2881:4:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":872,"name":"NoPeer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2874:6:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$returns$__$","typeString":"function (uint32) pure"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"RevertStatement","src":"2867:19:7"}},{"expression":{"id":877,"name":"peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"2903:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":859,"id":878,"nodeType":"Return","src":"2896:11:7"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"2426:287:7","text":" @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\n ie. the peer is set to bytes32(0).\n @param _eid The endpoint ID.\n @return peer The address of the peer associated with the specified endpoint."},"id":880,"implemented":true,"kind":"function","modifiers":[],"name":"_getPeerOrRevert","nameLocation":"2727:16:7","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"_eid","nameLocation":"2751:4:7","nodeType":"VariableDeclaration","scope":880,"src":"2744:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":854,"name":"uint32","nodeType":"ElementaryTypeName","src":"2744:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2743:13:7"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"2788:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2788:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2787:9:7"},"scope":896,"src":"2718:196:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1296],"body":{"id":894,"nodeType":"Block","src":"3309:48:7","statements":[{"expression":{"arguments":[{"id":891,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"3340:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":888,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"3319:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3328:11:7","memberName":"setDelegate","nodeType":"MemberAccess","referencedDeclaration":201,"src":"3319:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"3319:31:7"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"2920:327:7","text":" @notice Sets the delegate address for the OApp.\n @param _delegate The address of the delegate to be set.\n @dev Only the owner/admin of the OApp can call this function.\n @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract."},"functionSelector":"ca5eb5e1","id":895,"implemented":true,"kind":"function","modifiers":[{"id":886,"kind":"modifierInvocation","modifierName":{"id":885,"name":"onlyOwner","nameLocations":["3299:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1350,"src":"3299:9:7"},"nodeType":"ModifierInvocation","src":"3299:9:7"}],"name":"setDelegate","nameLocation":"3261:11:7","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"_delegate","nameLocation":"3281:9:7","nodeType":"VariableDeclaration","scope":895,"src":"3273:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3272:19:7"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"3309:0:7"},"scope":896,"src":"3252:105:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":897,"src":"330:3029:7","usedErrors":[1245,1249,1251,1253],"usedEvents":[1259,1332]}],"src":"33:3327:7"},"id":7},"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol","exportedSymbols":{"IOAppReceiver":[1318],"OAppCore":[896],"OAppReceiver":[1048],"Origin":[40]},"id":1049,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":898,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:8"},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol","file":"./interfaces/IOAppReceiver.sol","id":901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1049,"sourceUnit":1319,"src":"59:71:8","symbolAliases":[{"foreign":{"id":899,"name":"IOAppReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"68:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":900,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"83:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol","file":"./OAppCore.sol","id":903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1049,"sourceUnit":897,"src":"131:42:8","symbolAliases":[{"foreign":{"id":902,"name":"OAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"140:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":905,"name":"IOAppReceiver","nameLocations":["355:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"355:13:8"},"id":906,"nodeType":"InheritanceSpecifier","src":"355:13:8"},{"baseName":{"id":907,"name":"OAppCore","nameLocations":["370:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":896,"src":"370:8:8"},"id":908,"nodeType":"InheritanceSpecifier","src":"370:8:8"}],"canonicalName":"OAppReceiver","contractDependencies":[],"contractKind":"contract","documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"175:145:8","text":" @title OAppReceiver\n @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers."},"fullyImplemented":false,"id":1048,"linearizedBaseContracts":[1048,896,1431,2281,1297,1318,238],"name":"OAppReceiver","nameLocation":"339:12:8","nodeType":"ContractDefinition","nodes":[{"errorSelector":"91ac5e4f","id":912,"name":"OnlyEndpoint","nameLocation":"471:12:8","nodeType":"ErrorDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"addr","nameLocation":"492:4:8","nodeType":"VariableDeclaration","scope":912,"src":"484:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"483:14:8"},"src":"465:33:8"},{"constant":true,"id":915,"mutability":"constant","name":"RECEIVER_VERSION","nameLocation":"659:16:8","nodeType":"VariableDeclaration","scope":1048,"src":"634:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":913,"name":"uint64","nodeType":"ElementaryTypeName","src":"634:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"32","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"678:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"baseFunctions":[1267],"body":{"id":927,"nodeType":"Block","src":"1291:45:8","statements":[{"expression":{"components":[{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1309:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":924,"name":"RECEIVER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1312:16:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1308:21:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint64_$","typeString":"tuple(int_const 0,uint64)"}},"functionReturnParameters":922,"id":926,"nodeType":"Return","src":"1301:28:8"}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"686:502:8","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol contract.\n @return receiverVersion The version of the OAppReceiver.sol contract.\n @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\n ie. this is a RECEIVE only OApp.\n @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions."},"functionSelector":"17442b70","id":928,"implemented":true,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"1202:11:8","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"1213:2:8"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"senderVersion","nameLocation":"1252:13:8","nodeType":"VariableDeclaration","scope":928,"src":"1245:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":918,"name":"uint64","nodeType":"ElementaryTypeName","src":"1245:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"receiverVersion","nameLocation":"1274:15:8","nodeType":"VariableDeclaration","scope":928,"src":"1267:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":920,"name":"uint64","nodeType":"ElementaryTypeName","src":"1267:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1244:46:8"},"scope":1048,"src":"1193:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1317],"body":{"id":948,"nodeType":"Block","src":"2181:48:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":941,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"2198:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":944,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2217:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_OAppReceiver_$1048","typeString":"contract OAppReceiver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OAppReceiver_$1048","typeString":"contract OAppReceiver"}],"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2209:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"2209:7:8","typeDescriptions":{}}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2198:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":940,"id":947,"nodeType":"Return","src":"2191:31:8"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1342:666:8","text":" @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\n @dev _origin The origin information containing the source endpoint and sender address.\n  - srcEid: The source chain endpoint ID.\n  - sender: The sender address on the src chain.\n  - nonce: The nonce of the message.\n @dev _message The lzReceive payload.\n @param _sender The sender address.\n @return isSender Is a valid sender.\n @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\n @dev The default sender IS the OAppReceiver implementer."},"functionSelector":"82413eac","id":949,"implemented":true,"kind":"function","modifiers":[],"name":"isComposeMsgSender","nameLocation":"2022:18:8","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"2050:15:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":931,"nodeType":"UserDefinedTypeName","pathNode":{"id":930,"name":"Origin","nameLocations":["2050:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2050:6:8"},"referencedDeclaration":40,"src":"2050:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"2087:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"2087:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"_sender","nameLocation":"2132:7:8","nodeType":"VariableDeclaration","scope":949,"src":"2124:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"2124:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:105:8"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"2175:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":938,"name":"bool","nodeType":"ElementaryTypeName","src":"2175:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2174:6:8"},"scope":1048,"src":"2013:216:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[214],"body":{"id":966,"nodeType":"Block","src":"2859:61:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":958,"name":"peers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"2876:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"}},"id":961,"indexExpression":{"expression":{"id":959,"name":"origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2882:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin calldata"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2889:6:8","memberName":"srcEid","nodeType":"MemberAccess","referencedDeclaration":35,"src":"2882:13:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2876:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":962,"name":"origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2900:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin calldata"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2907:6:8","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":37,"src":"2900:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2876:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":957,"id":965,"nodeType":"Return","src":"2869:44:8"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"2235:531:8","text":" @notice Checks if the path initialization is allowed based on the provided origin.\n @param origin The origin information containing the source endpoint and sender address.\n @return Whether the path has been initialized.\n @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\n @dev This defaults to assuming if a peer has been set, its initialized.\n Can be overridden by the OApp if there is other logic to determine this."},"functionSelector":"ff7bd03d","id":967,"implemented":true,"kind":"function","modifiers":[],"name":"allowInitializePath","nameLocation":"2780:19:8","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"origin","nameLocation":"2816:6:8","nodeType":"VariableDeclaration","scope":967,"src":"2800:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":952,"nodeType":"UserDefinedTypeName","pathNode":{"id":951,"name":"Origin","nameLocations":["2800:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2800:6:8"},"referencedDeclaration":40,"src":"2800:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"}],"src":"2799:24:8"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"2853:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":955,"name":"bool","nodeType":"ElementaryTypeName","src":"2853:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2852:6:8"},"scope":1048,"src":"2771:149:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[223],"body":{"id":979,"nodeType":"Block","src":"3610:25:8","statements":[{"expression":{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3627:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":976,"id":978,"nodeType":"Return","src":"3620:8:8"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"2926:576:8","text":" @notice Retrieves the next nonce for a given source endpoint and sender address.\n @dev _srcEid The source endpoint ID.\n @dev _sender The sender address.\n @return nonce The next nonce.\n @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\n @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\n @dev This is also enforced by the OApp.\n @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0."},"functionSelector":"7d25a05e","id":980,"implemented":true,"kind":"function","modifiers":[],"name":"nextNonce","nameLocation":"3516:9:8","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"3526:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":969,"name":"uint32","nodeType":"ElementaryTypeName","src":"3526:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"3546:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3546:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3525:41:8"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"nonce","nameLocation":"3603:5:8","nodeType":"VariableDeclaration","scope":980,"src":"3596:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":974,"name":"uint64","nodeType":"ElementaryTypeName","src":"3596:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3595:14:8"},"scope":1048,"src":"3507:128:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[237],"body":{"id":1031,"nodeType":"Block","src":"4567:509:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":997,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4681:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4673:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4673:7:8","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4673:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":999,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4694:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4698:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4694:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4673:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1007,"nodeType":"IfStatement","src":"4669:68:8","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1003,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4726:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4730:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4726:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1002,"name":"OnlyEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4713:12:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4713:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"RevertStatement","src":"4706:31:8"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1009,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4854:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin calldata"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4862:6:8","memberName":"srcEid","nodeType":"MemberAccess","referencedDeclaration":35,"src":"4854:14:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1008,"name":"_getPeerOrRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"4837:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_bytes32_$","typeString":"function (uint32) view returns (bytes32)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4837:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1012,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4873:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin calldata"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4881:6:8","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":37,"src":"4873:14:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4837:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1022,"nodeType":"IfStatement","src":"4833:103:8","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1016,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4905:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin calldata"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4913:6:8","memberName":"srcEid","nodeType":"MemberAccess","referencedDeclaration":35,"src":"4905:14:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":1018,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"4921:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin calldata"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4929:6:8","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":37,"src":"4921:14:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1015,"name":"OnlyPeer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4896:8:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32) pure"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4896:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"RevertStatement","src":"4889:47:8"}},{"expression":{"arguments":[{"id":1024,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5021:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin calldata"}},{"id":1025,"name":"_guid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"5030:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1026,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5037:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1027,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"5047:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"5058:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1023,"name":"_lzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"5010:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Origin_$40_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct Origin calldata,bytes32,bytes calldata,address,bytes calldata)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5010:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"ExpressionStatement","src":"5010:59:8"}]},"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"3641:722:8","text":" @dev Entry point for receiving messages or packets from the endpoint.\n @param _origin The origin information containing the source endpoint and sender address.\n  - srcEid: The source chain endpoint ID.\n  - sender: The sender address on the src chain.\n  - nonce: The nonce of the message.\n @param _guid The unique identifier for the received LayerZero message.\n @param _message The payload of the received message.\n @param _executor The address of the executor for the received message.\n @param _extraData Additional arbitrary data provided by the corresponding executor.\n @dev Entry point for receiving msg/packet from the LayerZero endpoint."},"functionSelector":"13137d65","id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"4377:9:8","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"_origin","nameLocation":"4412:7:8","nodeType":"VariableDeclaration","scope":1032,"src":"4396:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":983,"nodeType":"UserDefinedTypeName","pathNode":{"id":982,"name":"Origin","nameLocations":["4396:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4396:6:8"},"referencedDeclaration":40,"src":"4396:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"_guid","nameLocation":"4437:5:8","nodeType":"VariableDeclaration","scope":1032,"src":"4429:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4429:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"_message","nameLocation":"4467:8:8","nodeType":"VariableDeclaration","scope":1032,"src":"4452:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":987,"name":"bytes","nodeType":"ElementaryTypeName","src":"4452:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"_executor","nameLocation":"4493:9:8","nodeType":"VariableDeclaration","scope":1032,"src":"4485:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"4485:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"_extraData","nameLocation":"4527:10:8","nodeType":"VariableDeclaration","scope":1032,"src":"4512:25:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":991,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4386:157:8"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"4567:0:8"},"scope":1048,"src":"4368:708:8","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"5082:126:8","text":" @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation."},"id":1047,"implemented":false,"kind":"function","modifiers":[],"name":"_lzReceive","nameLocation":"5222:10:8","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"_origin","nameLocation":"5258:7:8","nodeType":"VariableDeclaration","scope":1047,"src":"5242:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":1035,"nodeType":"UserDefinedTypeName","pathNode":{"id":1034,"name":"Origin","nameLocations":["5242:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"5242:6:8"},"referencedDeclaration":40,"src":"5242:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"_guid","nameLocation":"5283:5:8","nodeType":"VariableDeclaration","scope":1047,"src":"5275:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5275:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"_message","nameLocation":"5313:8:8","nodeType":"VariableDeclaration","scope":1047,"src":"5298:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1039,"name":"bytes","nodeType":"ElementaryTypeName","src":"5298:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"_executor","nameLocation":"5339:9:8","nodeType":"VariableDeclaration","scope":1047,"src":"5331:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"_extraData","nameLocation":"5373:10:8","nodeType":"VariableDeclaration","scope":1047,"src":"5358:25:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1043,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5232:157:8"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"5406:0:8"},"scope":1048,"src":"5213:194:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1049,"src":"321:5088:8","usedErrors":[912,1245,1249,1251,1253],"usedEvents":[1259,1332]}],"src":"33:5377:8"},"id":8},"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol","exportedSymbols":{"IERC20":[1509],"MessagingFee":[33],"MessagingParams":[20],"MessagingReceipt":[28],"OAppCore":[896],"OAppSender":[1234],"SafeERC20":[1921]},"id":1235,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1050,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":1922,"src":"59:92:9","symbolAliases":[{"foreign":{"id":1051,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"68:9:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1052,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"79:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","id":1057,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":203,"src":"152:146:9","symbolAliases":[{"foreign":{"id":1054,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"161:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1055,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"178:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1056,"name":"MessagingReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"192:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol","file":"./OAppCore.sol","id":1059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":897,"src":"299:42:9","symbolAliases":[{"foreign":{"id":1058,"name":"OAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"308:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1061,"name":"OAppCore","nameLocations":["518:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":896,"src":"518:8:9"},"id":1062,"nodeType":"InheritanceSpecifier","src":"518:8:9"}],"canonicalName":"OAppSender","contractDependencies":[],"contractKind":"contract","documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"343:142:9","text":" @title OAppSender\n @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint."},"fullyImplemented":true,"id":1234,"linearizedBaseContracts":[1234,896,1431,2281,1297],"name":"OAppSender","nameLocation":"504:10:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1066,"libraryName":{"id":1063,"name":"SafeERC20","nameLocations":["539:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1921,"src":"539:9:9"},"nodeType":"UsingForDirective","src":"533:27:9","typeName":{"id":1065,"nodeType":"UserDefinedTypeName","pathNode":{"id":1064,"name":"IERC20","nameLocations":["553:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"553:6:9"},"referencedDeclaration":1509,"src":"553:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}}},{"errorSelector":"9f704120","id":1070,"name":"NotEnoughNative","nameLocation":"601:15:9","nodeType":"ErrorDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"msgValue","nameLocation":"625:8:9","nodeType":"VariableDeclaration","scope":1070,"src":"617:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"616:18:9"},"src":"595:40:9"},{"errorSelector":"5373352a","id":1072,"name":"LzTokenUnavailable","nameLocation":"646:18:9","nodeType":"ErrorDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"664:2:9"},"src":"640:27:9"},{"constant":true,"id":1075,"mutability":"constant","name":"SENDER_VERSION","nameLocation":"826:14:9","nodeType":"VariableDeclaration","scope":1234,"src":"801:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1073,"name":"uint64","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"baseFunctions":[1267],"body":{"id":1087,"nodeType":"Block","src":"1456:43:9","statements":[{"expression":{"components":[{"id":1083,"name":"SENDER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"1474:14:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1473:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint64_$_t_rational_0_by_1_$","typeString":"tuple(uint64,int_const 0)"}},"functionReturnParameters":1082,"id":1086,"nodeType":"Return","src":"1466:26:9"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"851:502:9","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol contract.\n @return receiverVersion The version of the OAppReceiver.sol contract.\n @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\n ie. this is a SEND only OApp.\n @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions"},"functionSelector":"17442b70","id":1088,"implemented":true,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"1367:11:9","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"1378:2:9"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"senderVersion","nameLocation":"1417:13:9","nodeType":"VariableDeclaration","scope":1088,"src":"1410:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1078,"name":"uint64","nodeType":"ElementaryTypeName","src":"1410:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"receiverVersion","nameLocation":"1439:15:9","nodeType":"VariableDeclaration","scope":1088,"src":"1432:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1080,"name":"uint64","nodeType":"ElementaryTypeName","src":"1432:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1409:46:9"},"scope":1234,"src":"1358:141:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1120,"nodeType":"Block","src":"2230:199:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1106,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2307:7:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1108,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2333:7:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1107,"name":"_getPeerOrRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2316:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_bytes32_$","typeString":"function (uint32) view returns (bytes32)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1110,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2343:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1111,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2353:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1112,"name":"_payInLzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"2363:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1105,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2291:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MessagingParams_$20_storage_ptr_$","typeString":"type(struct MessagingParams storage pointer)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2291:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$20_memory_ptr","typeString":"struct MessagingParams memory"}},{"arguments":[{"id":1116,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2403:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_OAppSender_$1234","typeString":"contract OAppSender"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OAppSender_$1234","typeString":"contract OAppSender"}],"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2395:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:9","typeDescriptions":{}}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2395:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$20_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1103,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"2259:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2268:5:9","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":114,"src":"2259:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_MessagingParams_$20_memory_ptr_$_t_address_$returns$_t_struct$_MessagingFee_$33_memory_ptr_$","typeString":"function (struct MessagingParams memory,address) view external returns (struct MessagingFee memory)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:163:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"functionReturnParameters":1102,"id":1119,"nodeType":"Return","src":"2240:182:9"}]},"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"1505:528:9","text":" @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\n @param _dstEid The destination endpoint ID.\n @param _message The message payload.\n @param _options Additional options for the message.\n @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\n @return fee The calculated MessagingFee for the message.\n      - nativeFee: The native fee for the message.\n      - lzTokenFee: The LZ token fee for the message."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"_quote","nameLocation":"2047:6:9","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"_dstEid","nameLocation":"2070:7:9","nodeType":"VariableDeclaration","scope":1121,"src":"2063:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1090,"name":"uint32","nodeType":"ElementaryTypeName","src":"2063:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"_message","nameLocation":"2100:8:9","nodeType":"VariableDeclaration","scope":1121,"src":"2087:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1092,"name":"bytes","nodeType":"ElementaryTypeName","src":"2087:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"_options","nameLocation":"2131:8:9","nodeType":"VariableDeclaration","scope":1121,"src":"2118:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1094,"name":"bytes","nodeType":"ElementaryTypeName","src":"2118:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"_payInLzToken","nameLocation":"2154:13:9","nodeType":"VariableDeclaration","scope":1121,"src":"2149:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1096,"name":"bool","nodeType":"ElementaryTypeName","src":"2149:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2053:120:9"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"fee","nameLocation":"2225:3:9","nodeType":"VariableDeclaration","scope":1121,"src":"2205:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":1100,"nodeType":"UserDefinedTypeName","pathNode":{"id":1099,"name":"MessagingFee","nameLocations":["2205:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"2205:12:9"},"referencedDeclaration":33,"src":"2205:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"2204:25:9"},"scope":1234,"src":"2038:391:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"3422:532:9","statements":[{"assignments":[1140],"declarations":[{"constant":false,"id":1140,"mutability":"mutable","name":"messageValue","nameLocation":"3562:12:9","nodeType":"VariableDeclaration","scope":1175,"src":"3554:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"3554:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1145,"initialValue":{"arguments":[{"expression":{"id":1142,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"3588:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"id":1143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3593:9:9","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":30,"src":"3588:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1141,"name":"_payNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3577:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3554:49:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1146,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"3617:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"id":1147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3622:10:9","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":32,"src":"3617:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3635:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3617:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1155,"nodeType":"IfStatement","src":"3613:53:9","trueBody":{"expression":{"arguments":[{"expression":{"id":1151,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"3650:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"id":1152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3655:10:9","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":32,"src":"3650:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"_payLzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3638:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3638:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"3638:28:9"}},{"expression":{"arguments":[{"arguments":[{"id":1161,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3825:7:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1163,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3851:7:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1162,"name":"_getPeerOrRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"3834:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_bytes32_$","typeString":"function (uint32) view returns (bytes32)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1165,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3861:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1166,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3871:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1167,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"3881:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"id":1168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3886:10:9","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":32,"src":"3881:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3899:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3881:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1160,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"3809:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MessagingParams_$20_storage_ptr_$","typeString":"type(struct MessagingParams storage pointer)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3809:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$20_memory_ptr","typeString":"struct MessagingParams memory"}},{"id":1172,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"3919:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$20_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$20_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1156,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"3755:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3764:4:9","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":125,"src":"3755:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_MessagingParams_$20_memory_ptr_$_t_address_$returns$_t_struct$_MessagingReceipt_$28_memory_ptr_$","typeString":"function (struct MessagingParams memory,address) payable external returns (struct MessagingReceipt memory)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1158,"name":"messageValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3777:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3755:36:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_MessagingParams_$20_memory_ptr_$_t_address_$returns$_t_struct$_MessagingReceipt_$28_memory_ptr_$value","typeString":"function (struct MessagingParams memory,address) payable external returns (struct MessagingReceipt memory)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3755:192:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$28_memory_ptr","typeString":"struct MessagingReceipt memory"}},"functionReturnParameters":1138,"id":1174,"nodeType":"Return","src":"3677:270:9"}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"2435:748:9","text":" @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\n @param _dstEid The destination endpoint ID.\n @param _message The message payload.\n @param _options Additional options for the message.\n @param _fee The calculated LayerZero fee for the message.\n      - nativeFee: The native fee.\n      - lzTokenFee: The lzToken fee.\n @param _refundAddress The address to receive any excess fee values sent to the endpoint.\n @return receipt The receipt for the sent message.\n      - guid: The unique identifier for the sent message.\n      - nonce: The nonce of the sent message.\n      - fee: The LayerZero fee incurred for the message."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"3197:7:9","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"_dstEid","nameLocation":"3221:7:9","nodeType":"VariableDeclaration","scope":1176,"src":"3214:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1123,"name":"uint32","nodeType":"ElementaryTypeName","src":"3214:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"_message","nameLocation":"3251:8:9","nodeType":"VariableDeclaration","scope":1176,"src":"3238:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"3238:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"_options","nameLocation":"3282:8:9","nodeType":"VariableDeclaration","scope":1176,"src":"3269:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1127,"name":"bytes","nodeType":"ElementaryTypeName","src":"3269:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"_fee","nameLocation":"3320:4:9","nodeType":"VariableDeclaration","scope":1176,"src":"3300:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":1130,"nodeType":"UserDefinedTypeName","pathNode":{"id":1129,"name":"MessagingFee","nameLocations":["3300:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"3300:12:9"},"referencedDeclaration":33,"src":"3300:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"_refundAddress","nameLocation":"3342:14:9","nodeType":"VariableDeclaration","scope":1176,"src":"3334:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"3334:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:158:9"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"receipt","nameLocation":"3413:7:9","nodeType":"VariableDeclaration","scope":1176,"src":"3389:31:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$28_memory_ptr","typeString":"struct MessagingReceipt"},"typeName":{"id":1136,"nodeType":"UserDefinedTypeName","pathNode":{"id":1135,"name":"MessagingReceipt","nameLocations":["3389:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"3389:16:9"},"referencedDeclaration":28,"src":"3389:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$28_storage_ptr","typeString":"struct MessagingReceipt"}},"visibility":"internal"}],"src":"3388:33:9"},"scope":1234,"src":"3188:766:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1196,"nodeType":"Block","src":"4735:106:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1184,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4749:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4753:5:9","memberName":"value","nodeType":"MemberAccess","src":"4749:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1186,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4762:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4749:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1193,"nodeType":"IfStatement","src":"4745:62:9","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1189,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4797:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4801:5:9","memberName":"value","nodeType":"MemberAccess","src":"4797:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1188,"name":"NotEnoughNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4781:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4781:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"RevertStatement","src":"4774:33:9"}},{"expression":{"id":1194,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4824:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1183,"id":1195,"nodeType":"Return","src":"4817:17:9"}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"3960:685:9","text":" @dev Internal function to pay the native fee associated with the message.\n @param _nativeFee The native fee to be paid.\n @return nativeFee The amount of native currency paid.\n @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\n this will need to be overridden because msg.value would contain multiple lzFees.\n @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\n @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\n @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time."},"id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"_payNative","nameLocation":"4659:10:9","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"_nativeFee","nameLocation":"4678:10:9","nodeType":"VariableDeclaration","scope":1197,"src":"4670:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"4670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4669:20:9"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"nativeFee","nameLocation":"4724:9:9","nodeType":"VariableDeclaration","scope":1197,"src":"4716:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"4716:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4715:19:9"},"scope":1234,"src":"4650:191:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1232,"nodeType":"Block","src":"5277:351:9","statements":[{"assignments":[1204],"declarations":[{"constant":false,"id":1204,"mutability":"mutable","name":"lzToken","nameLocation":"5379:7:9","nodeType":"VariableDeclaration","scope":1232,"src":"5371:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"5371:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1208,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1205,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"5389:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5398:7:9","memberName":"lzToken","nodeType":"MemberAccess","referencedDeclaration":191,"src":"5389:16:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5371:36:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"lzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"5421:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5440:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5432:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"5432:7:9","typeDescriptions":{}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1218,"nodeType":"IfStatement","src":"5417:54:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1215,"name":"LzTokenUnavailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5451:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5451:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"RevertStatement","src":"5444:27:9"}},{"expression":{"arguments":[{"expression":{"id":1223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5578:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5582:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5578:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1227,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"5598:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}],"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5590:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"5590:7:9","typeDescriptions":{}}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5590:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1229,"name":"_lzTokenFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5609:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1220,"name":"lzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"5552:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1219,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"5545:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1509_$","typeString":"type(contract IERC20)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5561:16:9","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1605,"src":"5545:32:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1509_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1231,"nodeType":"ExpressionStatement","src":"5545:76:9"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"4847:366:9","text":" @dev Internal function to pay the LZ token fee associated with the message.\n @param _lzTokenFee The LZ token fee to be paid.\n @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\n @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend()."},"id":1233,"implemented":true,"kind":"function","modifiers":[],"name":"_payLzToken","nameLocation":"5227:11:9","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"_lzTokenFee","nameLocation":"5247:11:9","nodeType":"VariableDeclaration","scope":1233,"src":"5239:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"5239:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5238:21:9"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"5277:0:9"},"scope":1234,"src":"5218:410:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1235,"src":"486:5144:9","usedErrors":[1070,1072,1245,1249,1251,1253],"usedEvents":[1259,1332]}],"src":"33:5598:9"},"id":9},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol","exportedSymbols":{"ILayerZeroEndpointV2":[202],"IOAppCore":[1297]},"id":1298,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1236,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:10"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","id":1238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1298,"sourceUnit":203,"src":"59:119:10","symbolAliases":[{"foreign":{"id":1237,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"68:20:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IOAppCore","contractDependencies":[],"contractKind":"interface","documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"180:27:10","text":" @title IOAppCore"},"fullyImplemented":false,"id":1297,"linearizedBaseContracts":[1297],"name":"IOAppCore","nameLocation":"218:9:10","nodeType":"ContractDefinition","nodes":[{"errorSelector":"c26bebcc","id":1245,"name":"OnlyPeer","nameLocation":"269:8:10","nodeType":"ErrorDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"eid","nameLocation":"285:3:10","nodeType":"VariableDeclaration","scope":1245,"src":"278:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1240,"name":"uint32","nodeType":"ElementaryTypeName","src":"278:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"sender","nameLocation":"298:6:10","nodeType":"VariableDeclaration","scope":1245,"src":"290:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"290:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"277:28:10"},"src":"263:43:10"},{"errorSelector":"f6ff4fb7","id":1249,"name":"NoPeer","nameLocation":"317:6:10","nodeType":"ErrorDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"eid","nameLocation":"331:3:10","nodeType":"VariableDeclaration","scope":1249,"src":"324:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1246,"name":"uint32","nodeType":"ElementaryTypeName","src":"324:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"323:12:10"},"src":"311:25:10"},{"errorSelector":"0fbdec0a","id":1251,"name":"InvalidEndpointCall","nameLocation":"347:19:10","nodeType":"ErrorDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[],"src":"366:2:10"},"src":"341:28:10"},{"errorSelector":"b5863604","id":1253,"name":"InvalidDelegate","nameLocation":"380:15:10","nodeType":"ErrorDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[],"src":"395:2:10"},"src":"374:24:10"},{"anonymous":false,"eventSelector":"238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b","id":1259,"name":"PeerSet","nameLocation":"486:7:10","nodeType":"EventDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"501:3:10","nodeType":"VariableDeclaration","scope":1259,"src":"494:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1254,"name":"uint32","nodeType":"ElementaryTypeName","src":"494:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1257,"indexed":false,"mutability":"mutable","name":"peer","nameLocation":"514:4:10","nodeType":"VariableDeclaration","scope":1259,"src":"506:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"506:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"493:26:10"},"src":"480:40:10"},{"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"526:216:10","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol contract.\n @return receiverVersion The version of the OAppReceiver.sol contract."},"functionSelector":"17442b70","id":1267,"implemented":false,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"756:11:10","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"767:2:10"},"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"senderVersion","nameLocation":"800:13:10","nodeType":"VariableDeclaration","scope":1267,"src":"793:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1262,"name":"uint64","nodeType":"ElementaryTypeName","src":"793:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"receiverVersion","nameLocation":"822:15:10","nodeType":"VariableDeclaration","scope":1267,"src":"815:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1264,"name":"uint64","nodeType":"ElementaryTypeName","src":"815:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"792:46:10"},"scope":1297,"src":"747:92:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"845:150:10","text":" @notice Retrieves the LayerZero endpoint associated with the OApp.\n @return iEndpoint The LayerZero endpoint as an interface."},"functionSelector":"5e280f11","id":1274,"implemented":false,"kind":"function","modifiers":[],"name":"endpoint","nameLocation":"1009:8:10","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[],"src":"1017:2:10"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"iEndpoint","nameLocation":"1064:9:10","nodeType":"VariableDeclaration","scope":1274,"src":"1043:30:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"},"typeName":{"id":1271,"nodeType":"UserDefinedTypeName","pathNode":{"id":1270,"name":"ILayerZeroEndpointV2","nameLocations":["1043:20:10"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"1043:20:10"},"referencedDeclaration":202,"src":"1043:20:10","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$202","typeString":"contract ILayerZeroEndpointV2"}},"visibility":"internal"}],"src":"1042:32:10"},"scope":1297,"src":"1000:75:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"1081:227:10","text":" @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\n @param _eid The endpoint ID.\n @return peer The peer address (OApp instance) associated with the corresponding endpoint."},"functionSelector":"bb0b6a53","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"peers","nameLocation":"1322:5:10","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"_eid","nameLocation":"1335:4:10","nodeType":"VariableDeclaration","scope":1282,"src":"1328:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1276,"name":"uint32","nodeType":"ElementaryTypeName","src":"1328:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1327:13:10"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"peer","nameLocation":"1372:4:10","nodeType":"VariableDeclaration","scope":1282,"src":"1364:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1364:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1363:14:10"},"scope":1297,"src":"1313:65:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"1384:224:10","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint."},"functionSelector":"3400288b","id":1290,"implemented":false,"kind":"function","modifiers":[],"name":"setPeer","nameLocation":"1622:7:10","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"_eid","nameLocation":"1637:4:10","nodeType":"VariableDeclaration","scope":1290,"src":"1630:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1284,"name":"uint32","nodeType":"ElementaryTypeName","src":"1630:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"_peer","nameLocation":"1651:5:10","nodeType":"VariableDeclaration","scope":1290,"src":"1643:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1643:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1629:28:10"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"1666:0:10"},"scope":1297,"src":"1613:54:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"1673:134:10","text":" @notice Sets the delegate address for the OApp Core.\n @param _delegate The address of the delegate to be set."},"functionSelector":"ca5eb5e1","id":1296,"implemented":false,"kind":"function","modifiers":[],"name":"setDelegate","nameLocation":"1821:11:10","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"_delegate","nameLocation":"1841:9:10","nodeType":"VariableDeclaration","scope":1296,"src":"1833:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1832:19:10"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[],"src":"1860:0:10"},"scope":1297,"src":"1812:49:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1298,"src":"208:1655:10","usedErrors":[1245,1249,1251,1253],"usedEvents":[1259]}],"src":"33:1831:10"},"id":10},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[238],"IOAppReceiver":[1318],"Origin":[40]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1299,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol","id":1302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":239,"src":"58:123:11","symbolAliases":[{"foreign":{"id":1300,"name":"ILayerZeroReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"67:18:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1301,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"87:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1303,"name":"ILayerZeroReceiver","nameLocations":["210:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":238,"src":"210:18:11"},"id":1304,"nodeType":"InheritanceSpecifier","src":"210:18:11"}],"canonicalName":"IOAppReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1318,"linearizedBaseContracts":[1318,238],"name":"IOAppReceiver","nameLocation":"193:13:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"235:670:11","text":" @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\n @param _origin The origin information containing the source endpoint and sender address.\n  - srcEid: The source chain endpoint ID.\n  - sender: The sender address on the src chain.\n  - nonce: The nonce of the message.\n @param _message The lzReceive payload.\n @param _sender The sender address.\n @return isSender Is a valid sender.\n @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\n @dev The default sender IS the OAppReceiver implementer."},"functionSelector":"82413eac","id":1317,"implemented":false,"kind":"function","modifiers":[],"name":"isComposeMsgSender","nameLocation":"919:18:11","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"_origin","nameLocation":"963:7:11","nodeType":"VariableDeclaration","scope":1317,"src":"947:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":1307,"nodeType":"UserDefinedTypeName","pathNode":{"id":1306,"name":"Origin","nameLocations":["947:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"947:6:11"},"referencedDeclaration":40,"src":"947:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"_message","nameLocation":"995:8:11","nodeType":"VariableDeclaration","scope":1317,"src":"980:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1309,"name":"bytes","nodeType":"ElementaryTypeName","src":"980:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"_sender","nameLocation":"1021:7:11","nodeType":"VariableDeclaration","scope":1317,"src":"1013:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"1013:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"937:97:11"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"isSender","nameLocation":"1063:8:11","nodeType":"VariableDeclaration","scope":1317,"src":"1058:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1314,"name":"bool","nodeType":"ElementaryTypeName","src":"1058:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1057:15:11"},"scope":1318,"src":"910:163:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1319,"src":"183:892:11","usedErrors":[],"usedEvents":[]}],"src":"32:1044:11"},"id":11},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2281],"Ownable":[1431]},"id":1432,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":2282,"src":"127:30:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1323,"name":"Context","nameLocations":["683:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2281,"src":"683:7:12"},"id":1324,"nodeType":"InheritanceSpecifier","src":"683:7:12"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"159:494:12","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1431,"linearizedBaseContracts":[1431,2281],"name":"Ownable","nameLocation":"672:7:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1326,"mutability":"mutable","name":"_owner","nameLocation":"713:6:12","nodeType":"VariableDeclaration","scope":1431,"src":"697:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1332,"name":"OwnershipTransferred","nameLocation":"732:20:12","nodeType":"EventDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:12","nodeType":"VariableDeclaration","scope":1332,"src":"753:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:12","nodeType":"VariableDeclaration","scope":1332,"src":"784:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:12"},"src":"726:84:12"},{"body":{"id":1341,"nodeType":"Block","src":"926:49:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1337,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"955:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1336,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"936:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"ExpressionStatement","src":"936:32:12"}]},"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"816:91:12","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1342,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"923:2:12"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"926:0:12"},"scope":1431,"src":"912:63:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1349,"nodeType":"Block","src":"1084:41:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1345,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"1094:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1347,"nodeType":"ExpressionStatement","src":"1094:13:12"},{"id":1348,"nodeType":"PlaceholderStatement","src":"1117:1:12"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"981:77:12","text":" @dev Throws if called by any account other than the owner."},"id":1350,"name":"onlyOwner","nameLocation":"1072:9:12","nodeType":"ModifierDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"1081:2:12"},"src":"1063:62:12","virtual":false,"visibility":"internal"},{"body":{"id":1358,"nodeType":"Block","src":"1256:30:12","statements":[{"expression":{"id":1356,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1273:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1355,"id":1357,"nodeType":"Return","src":"1266:13:12"}]},"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"1131:65:12","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1359,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:12","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[],"src":"1215:2:12"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1359,"src":"1247:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:12"},"scope":1431,"src":"1201:85:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1372,"nodeType":"Block","src":"1404:85:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1364,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"1422:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1366,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"1433:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"ExpressionStatement","src":"1414:68:12"}]},"documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"1292:62:12","text":" @dev Throws if the sender is not the owner."},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:12","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[],"src":"1379:2:12"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"1404:0:12"},"scope":1431,"src":"1359:130:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1386,"nodeType":"Block","src":"1878:47:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:12","typeDescriptions":{}}},"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1379,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"1888:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"ExpressionStatement","src":"1888:30:12"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"1495:324:12","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1387,"implemented":true,"kind":"function","modifiers":[{"id":1377,"kind":"modifierInvocation","modifierName":{"id":1376,"name":"onlyOwner","nameLocations":["1868:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1350,"src":"1868:9:12"},"nodeType":"ModifierInvocation","src":"1868:9:12"}],"name":"renounceOwnership","nameLocation":"1833:17:12","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[],"src":"1850:2:12"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"1878:0:12"},"scope":1431,"src":"1824:101:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1409,"nodeType":"Block","src":"2144:128:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"2162:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:12","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1404,"nodeType":"ExpressionStatement","src":"2154:73:12"},{"expression":{"arguments":[{"id":1406,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"2256:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"2237:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"ExpressionStatement","src":"2237:28:12"}]},"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"1931:138:12","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1410,"implemented":true,"kind":"function","modifiers":[{"id":1393,"kind":"modifierInvocation","modifierName":{"id":1392,"name":"onlyOwner","nameLocations":["2134:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1350,"src":"2134:9:12"},"nodeType":"ModifierInvocation","src":"2134:9:12"}],"name":"transferOwnership","nameLocation":"2083:17:12","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:12","nodeType":"VariableDeclaration","scope":1410,"src":"2101:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:12"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"2144:0:12"},"scope":1431,"src":"2074:198:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1429,"nodeType":"Block","src":"2489:124:12","statements":[{"assignments":[1417],"declarations":[{"constant":false,"id":1417,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:12","nodeType":"VariableDeclaration","scope":1429,"src":"2499:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1419,"initialValue":{"id":1418,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2518:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:12"},{"expression":{"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1420,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2534:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1421,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"2543:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1423,"nodeType":"ExpressionStatement","src":"2534:17:12"},{"eventCall":{"arguments":[{"id":1425,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"2587:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1426,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"2597:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1424,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2566:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"EmitStatement","src":"2561:45:12"}]},"documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"2278:143:12","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:12","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:12","nodeType":"VariableDeclaration","scope":1430,"src":"2454:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1412,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:12"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"2489:0:12"},"scope":1431,"src":"2426:187:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1432,"src":"654:1961:12","usedErrors":[],"usedEvents":[1332]}],"src":"102:2514:12"},"id":12},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1509]},"id":1510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1433,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"131:70:13","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1509,"linearizedBaseContracts":[1509],"name":"IERC20","nameLocation":"212:6:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"225:158:13","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1443,"name":"Transfer","nameLocation":"394:8:13","nodeType":"EventDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:13","nodeType":"VariableDeclaration","scope":1443,"src":"403:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1439,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:13","nodeType":"VariableDeclaration","scope":1443,"src":"425:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1441,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:13","nodeType":"VariableDeclaration","scope":1443,"src":"445:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:13"},"src":"388:72:13"},{"anonymous":false,"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"466:148:13","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1452,"name":"Approval","nameLocation":"625:8:13","nodeType":"EventDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:13","nodeType":"VariableDeclaration","scope":1452,"src":"634:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:13","nodeType":"VariableDeclaration","scope":1452,"src":"657:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1450,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:13","nodeType":"VariableDeclaration","scope":1452,"src":"682:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:13"},"src":"619:78:13"},{"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"703:66:13","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1458,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:13","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[],"src":"794:2:13"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"820:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:13"},"scope":1509,"src":"774:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"835:72:13","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1466,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:13","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"939:7:13","nodeType":"VariableDeclaration","scope":1466,"src":"931:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:13"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1466,"src":"971:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:13"},"scope":1509,"src":"912:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"986:202:13","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1476,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:13","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"to","nameLocation":"1219:2:13","nodeType":"VariableDeclaration","scope":1476,"src":"1211:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1468,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"amount","nameLocation":"1231:6:13","nodeType":"VariableDeclaration","scope":1476,"src":"1223:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:13"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1476,"src":"1257:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1473,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:13"},"scope":1509,"src":"1193:70:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"1269:264:13","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1486,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:13","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"owner","nameLocation":"1565:5:13","nodeType":"VariableDeclaration","scope":1486,"src":"1557:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"spender","nameLocation":"1580:7:13","nodeType":"VariableDeclaration","scope":1486,"src":"1572:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:13"},"returnParameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"1612:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:13"},"scope":1509,"src":"1538:83:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"1627:642:13","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1496,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:13","nodeType":"FunctionDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"spender","nameLocation":"2299:7:13","nodeType":"VariableDeclaration","scope":1496,"src":"2291:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1488,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"amount","nameLocation":"2316:6:13","nodeType":"VariableDeclaration","scope":1496,"src":"2308:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:13"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1496,"src":"2342:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1493,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:13"},"scope":1509,"src":"2274:74:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"2354:287:13","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1508,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:13","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"from","nameLocation":"2676:4:13","nodeType":"VariableDeclaration","scope":1508,"src":"2668:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"to","nameLocation":"2690:2:13","nodeType":"VariableDeclaration","scope":1508,"src":"2682:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"amount","nameLocation":"2702:6:13","nodeType":"VariableDeclaration","scope":1508,"src":"2694:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:13"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"2728:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1505,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:13"},"scope":1509,"src":"2646:88:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1510,"src":"202:2534:13","usedErrors":[],"usedEvents":[1443,1452]}],"src":"106:2631:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1545]},"id":1546,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1511,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"148:1963:14","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1545,"linearizedBaseContracts":[1545],"name":"IERC20Permit","nameLocation":"2122:12:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"2141:850:14","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1530,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:14","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"owner","nameLocation":"3029:5:14","nodeType":"VariableDeclaration","scope":1530,"src":"3021:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1517,"mutability":"mutable","name":"spender","nameLocation":"3052:7:14","nodeType":"VariableDeclaration","scope":1530,"src":"3044:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"value","nameLocation":"3077:5:14","nodeType":"VariableDeclaration","scope":1530,"src":"3069:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:14","nodeType":"VariableDeclaration","scope":1530,"src":"3092:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"v","nameLocation":"3124:1:14","nodeType":"VariableDeclaration","scope":1530,"src":"3118:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1522,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"r","nameLocation":"3143:1:14","nodeType":"VariableDeclaration","scope":1530,"src":"3135:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"s","nameLocation":"3162:1:14","nodeType":"VariableDeclaration","scope":1530,"src":"3154:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:14"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"3178:0:14"},"scope":1545,"src":"2996:183:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"3185:294:14","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1538,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:14","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"owner","nameLocation":"3508:5:14","nodeType":"VariableDeclaration","scope":1538,"src":"3500:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:14"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1538,"src":"3538:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:14"},"scope":1545,"src":"3484:63:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"3553:128:14","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1544,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:14","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[],"src":"3764:2:14"},"returnParameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"3790:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:14"},"scope":1545,"src":"3739:60:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1546,"src":"2112:1689:14","usedErrors":[],"usedEvents":[]}],"src":"123:3679:14"},"id":14},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2251],"IERC20":[1509],"IERC20Permit":[1545],"SafeERC20":[1921]},"id":1922,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1547,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1922,"sourceUnit":1510,"src":"140:23:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1922,"sourceUnit":1546,"src":"164:40:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1922,"sourceUnit":2252,"src":"205:36:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"243:457:15","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1921,"linearizedBaseContracts":[1921],"name":"SafeERC20","nameLocation":"709:9:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1554,"libraryName":{"id":1552,"name":"Address","nameLocations":["731:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"731:7:15"},"nodeType":"UsingForDirective","src":"725:26:15","typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1577,"nodeType":"Block","src":"1013:103:15","statements":[{"expression":{"arguments":[{"id":1566,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"1043:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1569,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"1073:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"1073:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1572,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"1098:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"1102:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1567,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1565,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1023:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"ExpressionStatement","src":"1023:86:15"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"757:179:15","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:15","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"token","nameLocation":"970:5:15","nodeType":"VariableDeclaration","scope":1578,"src":"963:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},"typeName":{"id":1557,"nodeType":"UserDefinedTypeName","pathNode":{"id":1556,"name":"IERC20","nameLocations":["963:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"963:6:15"},"referencedDeclaration":1509,"src":"963:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"to","nameLocation":"985:2:15","nodeType":"VariableDeclaration","scope":1578,"src":"977:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"value","nameLocation":"997:5:15","nodeType":"VariableDeclaration","scope":1578,"src":"989:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:15"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"1013:0:15"},"scope":1921,"src":"941:175:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"1445:113:15","statements":[{"expression":{"arguments":[{"id":1592,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"1475:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1595,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"1505:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"1505:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1598,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"1534:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1599,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"1540:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"1544:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1593,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1591,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1455:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"ExpressionStatement","src":"1455:96:15"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"1122:228:15","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:15","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"token","nameLocation":"1388:5:15","nodeType":"VariableDeclaration","scope":1605,"src":"1381:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},"typeName":{"id":1581,"nodeType":"UserDefinedTypeName","pathNode":{"id":1580,"name":"IERC20","nameLocations":["1381:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"1381:6:15"},"referencedDeclaration":1509,"src":"1381:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"from","nameLocation":"1403:4:15","nodeType":"VariableDeclaration","scope":1605,"src":"1395:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"to","nameLocation":"1417:2:15","nodeType":"VariableDeclaration","scope":1605,"src":"1409:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"value","nameLocation":"1429:5:15","nodeType":"VariableDeclaration","scope":1605,"src":"1421:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:15"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"1445:0:15"},"scope":1921,"src":"1355:203:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1648,"nodeType":"Block","src":"1894:497:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"2143:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1625,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1921","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1921","typeString":"library SafeERC20"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:15","typeDescriptions":{}}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"2190:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1621,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2159:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1486,"src":"2159:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1635,"nodeType":"ExpressionStatement","src":"2121:163:15"},{"expression":{"arguments":[{"id":1637,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2314:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1640,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2344:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1496,"src":"2344:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:15","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1643,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"2368:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"2377:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1638,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1636,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2294:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1647,"nodeType":"ExpressionStatement","src":"2294:90:15"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"1564:249:15","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1649,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:15","nodeType":"FunctionDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"token","nameLocation":"1846:5:15","nodeType":"VariableDeclaration","scope":1649,"src":"1839:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},"typeName":{"id":1608,"nodeType":"UserDefinedTypeName","pathNode":{"id":1607,"name":"IERC20","nameLocations":["1839:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"1839:6:15"},"referencedDeclaration":1509,"src":"1839:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"spender","nameLocation":"1861:7:15","nodeType":"VariableDeclaration","scope":1649,"src":"1853:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"value","nameLocation":"1878:5:15","nodeType":"VariableDeclaration","scope":1649,"src":"1870:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:15"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[],"src":"1894:0:15"},"scope":1921,"src":"1818:573:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"2668:194:15","statements":[{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:15","nodeType":"VariableDeclaration","scope":1685,"src":"2678:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1670,"initialValue":{"arguments":[{"arguments":[{"id":1666,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1921","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1921","typeString":"library SafeERC20"}],"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:15","typeDescriptions":{}}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1668,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"2732:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1662,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"2701:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1486,"src":"2701:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:15"},{"expression":{"arguments":[{"id":1672,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"2770:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1675,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"2800:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1496,"src":"2800:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:15","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1678,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"2824:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2833:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2848:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1673,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1671,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2750:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"2750:105:15"}]},"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"2397:180:15","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:15","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"token","nameLocation":"2620:5:15","nodeType":"VariableDeclaration","scope":1686,"src":"2613:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},"typeName":{"id":1652,"nodeType":"UserDefinedTypeName","pathNode":{"id":1651,"name":"IERC20","nameLocations":["2613:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"2613:6:15"},"referencedDeclaration":1509,"src":"2613:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"spender","nameLocation":"2635:7:15","nodeType":"VariableDeclaration","scope":1686,"src":"2627:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"value","nameLocation":"2652:5:15","nodeType":"VariableDeclaration","scope":1686,"src":"2644:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:15"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"2668:0:15"},"scope":1921,"src":"2582:280:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1730,"nodeType":"Block","src":"3139:321:15","statements":[{"id":1729,"nodeType":"UncheckedBlock","src":"3149:305:15","statements":[{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:15","nodeType":"VariableDeclaration","scope":1729,"src":"3173:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1707,"initialValue":{"arguments":[{"arguments":[{"id":1703,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1921","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1921","typeString":"library SafeERC20"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:15","typeDescriptions":{}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1705,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"3227:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1699,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"3196:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1486,"src":"3196:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3257:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"3273:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1714,"nodeType":"ExpressionStatement","src":"3249:75:15"},{"expression":{"arguments":[{"id":1716,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"3358:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1719,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"3388:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1496,"src":"3388:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:15","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1722,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"3412:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1723,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3421:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"3436:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1717,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1715,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3338:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"3338:105:15"}]}]},"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"2868:180:15","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:15","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"token","nameLocation":"3091:5:15","nodeType":"VariableDeclaration","scope":1731,"src":"3084:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},"typeName":{"id":1689,"nodeType":"UserDefinedTypeName","pathNode":{"id":1688,"name":"IERC20","nameLocations":["3084:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"3084:6:15"},"referencedDeclaration":1509,"src":"3084:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"spender","nameLocation":"3106:7:15","nodeType":"VariableDeclaration","scope":1731,"src":"3098:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"value","nameLocation":"3123:5:15","nodeType":"VariableDeclaration","scope":1731,"src":"3115:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:15"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[],"src":"3139:0:15"},"scope":1921,"src":"3053:407:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"3856:333:15","statements":[{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:15","nodeType":"VariableDeclaration","scope":1777,"src":"3866:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1742,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1752,"initialValue":{"arguments":[{"expression":{"expression":{"id":1746,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3917:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1496,"src":"3917:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:15","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1749,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"3941:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"3950:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1744,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:15"},{"condition":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:15","subExpression":{"arguments":[{"id":1754,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3996:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},{"id":1755,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"4003:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1753,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"3972:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1776,"nodeType":"IfStatement","src":"3967:216:15","trueBody":{"id":1775,"nodeType":"Block","src":"4018:165:15","statements":[{"expression":{"arguments":[{"id":1759,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"4052:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1762,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"4082:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1496,"src":"4082:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:15","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1765,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"4106:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1760,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1758,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"4032:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"ExpressionStatement","src":"4032:86:15"},{"expression":{"arguments":[{"id":1771,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"4152:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},{"id":1772,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"4159:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1770,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"4132:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"ExpressionStatement","src":"4132:40:15"}]}}]},"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"3466:308:15","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:15","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"token","nameLocation":"3808:5:15","nodeType":"VariableDeclaration","scope":1778,"src":"3801:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},"typeName":{"id":1734,"nodeType":"UserDefinedTypeName","pathNode":{"id":1733,"name":"IERC20","nameLocations":["3801:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"3801:6:15"},"referencedDeclaration":1509,"src":"3801:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"spender","nameLocation":"3823:7:15","nodeType":"VariableDeclaration","scope":1778,"src":"3815:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"value","nameLocation":"3840:5:15","nodeType":"VariableDeclaration","scope":1778,"src":"3832:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:15"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[],"src":"3856:0:15"},"scope":1921,"src":"3779:410:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1834,"nodeType":"Block","src":"4556:257:15","statements":[{"assignments":[1800],"declarations":[{"constant":false,"id":1800,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:15","nodeType":"VariableDeclaration","scope":1834,"src":"4566:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1805,"initialValue":{"arguments":[{"id":1803,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4601:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1801,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4588:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1545","typeString":"contract IERC20Permit"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:15","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"4588:12:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:15"},{"expression":{"arguments":[{"id":1809,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4630:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1810,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"4637:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4646:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1812,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4653:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1813,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"4663:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1814,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"4666:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1815,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4669:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1806,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4617:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1545","typeString":"contract IERC20Permit"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:15","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"4617:12:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1817,"nodeType":"ExpressionStatement","src":"4617:54:15"},{"assignments":[1819],"declarations":[{"constant":false,"id":1819,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:15","nodeType":"VariableDeclaration","scope":1834,"src":"4681:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1824,"initialValue":{"arguments":[{"id":1822,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4715:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1820,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4702:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1545","typeString":"contract IERC20Permit"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:15","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"4702:12:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"4739:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"4753:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1833,"nodeType":"ExpressionStatement","src":"4731:75:15"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"4195:141:15","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:15","nodeType":"FunctionDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"token","nameLocation":"4383:5:15","nodeType":"VariableDeclaration","scope":1835,"src":"4370:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1545","typeString":"contract IERC20Permit"},"typeName":{"id":1781,"nodeType":"UserDefinedTypeName","pathNode":{"id":1780,"name":"IERC20Permit","nameLocations":["4370:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"4370:12:15"},"referencedDeclaration":1545,"src":"4370:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1545","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"owner","nameLocation":"4406:5:15","nodeType":"VariableDeclaration","scope":1835,"src":"4398:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"spender","nameLocation":"4429:7:15","nodeType":"VariableDeclaration","scope":1835,"src":"4421:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"value","nameLocation":"4454:5:15","nodeType":"VariableDeclaration","scope":1835,"src":"4446:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:15","nodeType":"VariableDeclaration","scope":1835,"src":"4469:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"v","nameLocation":"4501:1:15","nodeType":"VariableDeclaration","scope":1835,"src":"4495:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1791,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"r","nameLocation":"4520:1:15","nodeType":"VariableDeclaration","scope":1835,"src":"4512:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"s","nameLocation":"4539:1:15","nodeType":"VariableDeclaration","scope":1835,"src":"4531:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:15"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[],"src":"4556:0:15"},"scope":1921,"src":"4341:472:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"5266:572:15","statements":[{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:15","nodeType":"VariableDeclaration","scope":1871,"src":"5615:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1844,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1854,"initialValue":{"arguments":[{"id":1851,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"5669:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1848,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"5649:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:15","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:15","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2011,"src":"5641:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1856,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5728:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:15","memberName":"length","nodeType":"MemberAccess","src":"5728:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1862,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5765:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1863,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:15","typeDescriptions":{}}}],"id":1865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1860,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:15","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"5720:111:15"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"4819:372:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:15","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"token","nameLocation":"5232:5:15","nodeType":"VariableDeclaration","scope":1872,"src":"5225:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},"typeName":{"id":1838,"nodeType":"UserDefinedTypeName","pathNode":{"id":1837,"name":"IERC20","nameLocations":["5225:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"5225:6:15"},"referencedDeclaration":1509,"src":"5225:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"data","nameLocation":"5252:4:15","nodeType":"VariableDeclaration","scope":1872,"src":"5239:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1840,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:15"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[],"src":"5266:0:15"},"scope":1921,"src":"5196:642:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1919,"nodeType":"Block","src":"6428:505:15","statements":[{"assignments":[1884,1886],"declarations":[{"constant":false,"id":1884,"mutability":"mutable","name":"success","nameLocation":"6729:7:15","nodeType":"VariableDeclaration","scope":1919,"src":"6724:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1883,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:15","nodeType":"VariableDeclaration","scope":1919,"src":"6738:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1885,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1894,"initialValue":{"arguments":[{"id":1892,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6785:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1889,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6773:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}],"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:15","typeDescriptions":{}}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:15","memberName":"call","nodeType":"MemberAccess","src":"6765:19:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:15"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"6819:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1896,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6831:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:15","memberName":"length","nodeType":"MemberAccess","src":"6831:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1902,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6868:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1903,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:15","typeDescriptions":{}}}],"id":1905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1900,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:15","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1914,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6919:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}],"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:15","typeDescriptions":{}}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1910,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"6892:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2251_$","typeString":"type(library Address)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:15","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"6892:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1882,"id":1918,"nodeType":"Return","src":"6800:126:15"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"5844:490:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:15","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"token","nameLocation":"6379:5:15","nodeType":"VariableDeclaration","scope":1920,"src":"6372:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"IERC20","nameLocations":["6372:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"6372:6:15"},"referencedDeclaration":1509,"src":"6372:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1509","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"data","nameLocation":"6399:4:15","nodeType":"VariableDeclaration","scope":1920,"src":"6386:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1877,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:15"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"6422:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1880,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:15"},"scope":1921,"src":"6339:594:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1922,"src":"701:6234:15","usedErrors":[],"usedEvents":[]}],"src":"115:6821:15"},"id":15},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2251]},"id":2252,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1923,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"126:67:16","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2251,"linearizedBaseContracts":[2251],"name":"Address","nameLocation":"202:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":1938,"nodeType":"Block","src":"1478:254:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1932,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1702:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:16","memberName":"code","nodeType":"MemberAccess","src":"1702:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:16","memberName":"length","nodeType":"MemberAccess","src":"1702:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1931,"id":1937,"nodeType":"Return","src":"1695:30:16"}]},"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"216:1191:16","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:16","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"account","nameLocation":"1440:7:16","nodeType":"VariableDeclaration","scope":1939,"src":"1432:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:16"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"1472:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1929,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:16"},"scope":2251,"src":"1412:320:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"2718:241:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1950,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2251","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2251","typeString":"library Address"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:16","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:16","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1953,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2761:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1947,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1957,"nodeType":"ExpressionStatement","src":"2728:73:16"},{"assignments":[1959,null],"declarations":[{"constant":false,"id":1959,"mutability":"mutable","name":"success","nameLocation":"2818:7:16","nodeType":"VariableDeclaration","scope":1972,"src":"2813:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1958,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1966,"initialValue":{"arguments":[{"hexValue":"","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1960,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"2831:9:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:16","memberName":"call","nodeType":"MemberAccess","src":"2831:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1962,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2853:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:16"},{"expression":{"arguments":[{"id":1968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2882:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"ExpressionStatement","src":"2874:78:16"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"1738:904:16","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:16","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:16","nodeType":"VariableDeclaration","scope":1973,"src":"2666:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"amount","nameLocation":"2701:6:16","nodeType":"VariableDeclaration","scope":1973,"src":"2693:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:16"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"2718:0:16"},"scope":2251,"src":"2647:312:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1990,"nodeType":"Block","src":"3790:96:16","statements":[{"expression":{"arguments":[{"id":1984,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"3829:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1985,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"3837:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1983,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2031,2075],"referencedDeclaration":2075,"src":"3807:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1982,"id":1989,"nodeType":"Return","src":"3800:79:16"}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"2965:731:16","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1991,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:16","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"target","nameLocation":"3731:6:16","nodeType":"VariableDeclaration","scope":1991,"src":"3723:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"data","nameLocation":"3752:4:16","nodeType":"VariableDeclaration","scope":1991,"src":"3739:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1977,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:16"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1991,"src":"3776:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1980,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:16"},"scope":2251,"src":"3701:185:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"4255:76:16","statements":[{"expression":{"arguments":[{"id":2004,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"4294:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2005,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"4302:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2007,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"4311:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2003,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2031,2075],"referencedDeclaration":2075,"src":"4272:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2002,"id":2009,"nodeType":"Return","src":"4265:59:16"}]},"documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"3892:211:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:16","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"target","nameLocation":"4147:6:16","nodeType":"VariableDeclaration","scope":2011,"src":"4139:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1996,"mutability":"mutable","name":"data","nameLocation":"4176:4:16","nodeType":"VariableDeclaration","scope":2011,"src":"4163:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1995,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:16","nodeType":"VariableDeclaration","scope":2011,"src":"4190:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1997,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:16"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2011,"src":"4241:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2000,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:16"},"scope":2251,"src":"4108:223:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"4806:111:16","statements":[{"expression":{"arguments":[{"id":2024,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"4845:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2025,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"4853:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"4859:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2023,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2031,2075],"referencedDeclaration":2075,"src":"4823:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2022,"id":2029,"nodeType":"Return","src":"4816:94:16"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"4337:351:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:16","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"target","nameLocation":"4732:6:16","nodeType":"VariableDeclaration","scope":2031,"src":"4724:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"data","nameLocation":"4753:4:16","nodeType":"VariableDeclaration","scope":2031,"src":"4740:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2015,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"value","nameLocation":"4767:5:16","nodeType":"VariableDeclaration","scope":2031,"src":"4759:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:16"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"4792:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2020,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:16"},"scope":2251,"src":"4693:224:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"5344:267:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2048,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2251","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2251","typeString":"library Address"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:16","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:16","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5387:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2055,"nodeType":"ExpressionStatement","src":"5354:81:16"},{"assignments":[2057,2059],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"success","nameLocation":"5451:7:16","nodeType":"VariableDeclaration","scope":2074,"src":"5446:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2056,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:16","nodeType":"VariableDeclaration","scope":2074,"src":"5460:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2058,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[{"id":2064,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5513:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2060,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5487:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:16","memberName":"call","nodeType":"MemberAccess","src":"5487:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5506:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:16"},{"expression":{"arguments":[{"id":2068,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5562:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2069,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"5570:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2070,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"5579:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2071,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"5591:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2067,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"5535:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2044,"id":2073,"nodeType":"Return","src":"5528:76:16"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"4923:237:16","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:16","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"target","nameLocation":"5213:6:16","nodeType":"VariableDeclaration","scope":2075,"src":"5205:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"data","nameLocation":"5242:4:16","nodeType":"VariableDeclaration","scope":2075,"src":"5229:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"value","nameLocation":"5264:5:16","nodeType":"VariableDeclaration","scope":2075,"src":"5256:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:16","nodeType":"VariableDeclaration","scope":2075,"src":"5279:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2039,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:16"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"5330:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2042,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:16"},"scope":2251,"src":"5165:446:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"5888:97:16","statements":[{"expression":{"arguments":[{"id":2086,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"5924:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2087,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"5932:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2085,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2092,2121],"referencedDeclaration":2121,"src":"5905:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2084,"id":2090,"nodeType":"Return","src":"5898:80:16"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"5617:166:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:16","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"target","nameLocation":"5824:6:16","nodeType":"VariableDeclaration","scope":2092,"src":"5816:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"data","nameLocation":"5845:4:16","nodeType":"VariableDeclaration","scope":2092,"src":"5832:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2079,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:16"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2092,"src":"5874:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2082,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:16"},"scope":2251,"src":"5788:197:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"6327:168:16","statements":[{"assignments":[2105,2107],"declarations":[{"constant":false,"id":2105,"mutability":"mutable","name":"success","nameLocation":"6343:7:16","nodeType":"VariableDeclaration","scope":2120,"src":"6338:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2104,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:16","nodeType":"VariableDeclaration","scope":2120,"src":"6352:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2106,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2112,"initialValue":{"arguments":[{"id":2110,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6397:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2108,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6379:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:16","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:16"},{"expression":{"arguments":[{"id":2114,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6446:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2115,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6454:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2116,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"6463:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2117,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"6475:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2113,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6419:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2103,"id":2119,"nodeType":"Return","src":"6412:76:16"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"5991:173:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:16","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"target","nameLocation":"6214:6:16","nodeType":"VariableDeclaration","scope":2121,"src":"6206:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"data","nameLocation":"6243:4:16","nodeType":"VariableDeclaration","scope":2121,"src":"6230:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2096,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:16","nodeType":"VariableDeclaration","scope":2121,"src":"6257:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2098,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:16"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"6313:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2101,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:16"},"scope":2251,"src":"6169:326:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"6771:101:16","statements":[{"expression":{"arguments":[{"id":2132,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"6809:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2133,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"6817:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2131,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2138,2167],"referencedDeclaration":2167,"src":"6788:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2130,"id":2136,"nodeType":"Return","src":"6781:84:16"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"6501:168:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:16","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"target","nameLocation":"6712:6:16","nodeType":"VariableDeclaration","scope":2138,"src":"6704:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"data","nameLocation":"6733:4:16","nodeType":"VariableDeclaration","scope":2138,"src":"6720:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2125,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:16"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"6757:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2128,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:16"},"scope":2251,"src":"6674:198:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2166,"nodeType":"Block","src":"7213:170:16","statements":[{"assignments":[2151,2153],"declarations":[{"constant":false,"id":2151,"mutability":"mutable","name":"success","nameLocation":"7229:7:16","nodeType":"VariableDeclaration","scope":2166,"src":"7224:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2150,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:16","nodeType":"VariableDeclaration","scope":2166,"src":"7238:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2152,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2158,"initialValue":{"arguments":[{"id":2156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"7285:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2154,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"7265:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:16","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:16","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:16"},{"expression":{"arguments":[{"id":2160,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"7334:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2161,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"7342:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2162,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"7351:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2163,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"7363:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2159,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"7307:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2149,"id":2165,"nodeType":"Return","src":"7300:76:16"}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"6878:175:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2167,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:16","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"target","nameLocation":"7105:6:16","nodeType":"VariableDeclaration","scope":2167,"src":"7097:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"data","nameLocation":"7134:4:16","nodeType":"VariableDeclaration","scope":2167,"src":"7121:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2142,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:16","nodeType":"VariableDeclaration","scope":2167,"src":"7148:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2144,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:16"},"returnParameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"7199:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2147,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:16"},"scope":2251,"src":"7058:325:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2205,"nodeType":"Block","src":"7865:434:16","statements":[{"condition":{"id":2181,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"7879:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2203,"nodeType":"Block","src":"8235:58:16","statements":[{"expression":{"arguments":[{"id":2199,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"8257:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2200,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8269:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2198,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"8249:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2202,"nodeType":"ExpressionStatement","src":"8249:33:16"}]},"id":2204,"nodeType":"IfStatement","src":"7875:418:16","trueBody":{"id":2197,"nodeType":"Block","src":"7888:341:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2182,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7906:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:16","memberName":"length","nodeType":"MemberAccess","src":"7906:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2194,"nodeType":"IfStatement","src":"7902:286:16","trueBody":{"id":2193,"nodeType":"Block","src":"7930:258:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2188,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"8132:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2187,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"8121:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"8113:60:16"}]}},{"expression":{"id":2195,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"8208:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2180,"id":2196,"nodeType":"Return","src":"8201:17:16"}]}}]},"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"7389:277:16","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:16","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"target","nameLocation":"7724:6:16","nodeType":"VariableDeclaration","scope":2206,"src":"7716:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"success","nameLocation":"7745:7:16","nodeType":"VariableDeclaration","scope":2206,"src":"7740:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2171,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:16","nodeType":"VariableDeclaration","scope":2206,"src":"7762:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2173,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:16","nodeType":"VariableDeclaration","scope":2206,"src":"7795:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2175,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:16"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"7851:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2178,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:16"},"scope":2251,"src":"7671:628:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2229,"nodeType":"Block","src":"8680:135:16","statements":[{"condition":{"id":2218,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"8694:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2227,"nodeType":"Block","src":"8751:58:16","statements":[{"expression":{"arguments":[{"id":2223,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"8773:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2224,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"8785:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2222,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"8765:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"ExpressionStatement","src":"8765:33:16"}]},"id":2228,"nodeType":"IfStatement","src":"8690:119:16","trueBody":{"id":2221,"nodeType":"Block","src":"8703:42:16","statements":[{"expression":{"id":2219,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"8724:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2217,"id":2220,"nodeType":"Return","src":"8717:17:16"}]}}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"8305:210:16","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:16","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"success","nameLocation":"8560:7:16","nodeType":"VariableDeclaration","scope":2230,"src":"8555:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2208,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:16","nodeType":"VariableDeclaration","scope":2230,"src":"8577:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:16","nodeType":"VariableDeclaration","scope":2230,"src":"8610:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2212,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:16"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2230,"src":"8666:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2215,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:16"},"scope":2251,"src":"8520:295:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2249,"nodeType":"Block","src":"8904:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2237,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8980:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:16","memberName":"length","nodeType":"MemberAccess","src":"8980:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2247,"nodeType":"Block","src":"9310:45:16","statements":[{"expression":{"arguments":[{"id":2244,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9331:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2243,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2246,"nodeType":"ExpressionStatement","src":"9324:20:16"}]},"id":2248,"nodeType":"IfStatement","src":"8976:379:16","trueBody":{"id":2242,"nodeType":"Block","src":"9003:301:16","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:16","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:16"},"nodeType":"YulFunctionCall","src":"9202:17:16"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:16","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:16"},"nodeType":"YulFunctionCall","src":"9243:19:16"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:16"},"nodeType":"YulFunctionCall","src":"9236:44:16"},"nodeType":"YulExpressionStatement","src":"9236:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2232,"isOffset":false,"isSlot":false,"src":"9208:10:16","valueSize":1},{"declaration":2232,"isOffset":false,"isSlot":false,"src":"9251:10:16","valueSize":1}],"id":2241,"nodeType":"InlineAssembly","src":"9152:142:16"}]}}]},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:16","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:16","nodeType":"VariableDeclaration","scope":2250,"src":"8838:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2231,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:16","nodeType":"VariableDeclaration","scope":2250,"src":"8863:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2233,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:16"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[],"src":"8904:0:16"},"scope":2251,"src":"8821:540:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2252,"src":"194:9169:16","usedErrors":[],"usedEvents":[]}],"src":"101:9263:16"},"id":16},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2281]},"id":2282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2253,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"126:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2281,"linearizedBaseContracts":[2281],"name":"Context","nameLocation":"641:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2262,"nodeType":"Block","src":"717:34:17","statements":[{"expression":{"expression":{"id":2259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:17","memberName":"sender","nodeType":"MemberAccess","src":"734:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2258,"id":2261,"nodeType":"Return","src":"727:17:17"}]},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:17","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[],"src":"674:2:17"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"708:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:17"},"scope":2281,"src":"655:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"824:32:17","statements":[{"expression":{"expression":{"id":2268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:17","memberName":"data","nodeType":"MemberAccess","src":"841:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2267,"id":2270,"nodeType":"Return","src":"834:15:17"}]},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:17","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[],"src":"774:2:17"},"returnParameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"808:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2265,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:17"},"scope":2281,"src":"757:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"934:25:17","statements":[{"expression":{"hexValue":"30","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2276,"id":2278,"nodeType":"Return","src":"944:8:17"}]},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:17","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[],"src":"891:2:17"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2280,"src":"925:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:17"},"scope":2281,"src":"862:97:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2282,"src":"623:338:17","usedErrors":[],"usedEvents":[]}],"src":"101:861:17"},"id":17},"contracts/OmnichainIdentityLinker.sol":{"ast":{"absolutePath":"contracts/OmnichainIdentityLinker.sol","exportedSymbols":{"MessagingFee":[33],"MessagingReceipt":[28],"OApp":[766],"OAppCore":[896],"OAppReceiver":[1048],"OAppSender":[1234],"OmnichainIdentityLinker":[2858],"Origin":[40]},"id":2859,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:18"},{"absolutePath":"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol","file":"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol","id":2284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2859,"sourceUnit":767,"src":"61:57:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2286,"name":"OApp","nameLocations":["350:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":766,"src":"350:4:18"},"id":2287,"nodeType":"InheritanceSpecifier","src":"350:4:18"}],"canonicalName":"OmnichainIdentityLinker","contractDependencies":[],"contractKind":"contract","documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"122:190:18","text":" @title OmnichainIdentityLinker\n @dev Contract for linking EVM addresses to Solana addresses via LayerZero V2\n This contract sends messages from EVM chains to a Solana OApp"},"fullyImplemented":true,"id":2858,"linearizedBaseContracts":[2858,766,1048,1234,896,1431,2281,1297,1318,238],"name":"OmnichainIdentityLinker","nameLocation":"323:23:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"067bd07a","id":2290,"mutability":"constant","name":"SOLANA_CHAIN_ID","nameLocation":"425:15:18","nodeType":"VariableDeclaration","scope":2858,"src":"402:46:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2288,"name":"uint32","nodeType":"ElementaryTypeName","src":"402:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"3430313638","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"443:5:18","typeDescriptions":{"typeIdentifier":"t_rational_40168_by_1","typeString":"int_const 40168"},"value":"40168"},"visibility":"public"},{"constant":false,"functionSelector":"f68016b7","id":2293,"mutability":"mutable","name":"gasLimit","nameLocation":"547:8:18","nodeType":"VariableDeclaration","scope":2858,"src":"532:32:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"532:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030303030","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"558:6:18","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200000"},"visibility":"public"},{"constant":false,"functionSelector":"7954c58f","id":2298,"mutability":"mutable","name":"linkedSolanaAddresses","nameLocation":"661:21:18","nodeType":"VariableDeclaration","scope":2858,"src":"626:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes_storage_$dyn_storage_$","typeString":"mapping(address => bytes[])"},"typeName":{"id":2297,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"626:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes_storage_$dyn_storage_$","typeString":"mapping(address => bytes[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":2295,"name":"bytes","nodeType":"ElementaryTypeName","src":"645:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2296,"nodeType":"ArrayTypeName","src":"645:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"15b1a221748794744cd2960e23ab851c4e6b2b22fbabe81f3404e15eebf0af16","id":2306,"name":"IdentityLinked","nameLocation":"742:14:18","nodeType":"EventDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"indexed":false,"mutability":"mutable","name":"evmAddress","nameLocation":"765:10:18","nodeType":"VariableDeclaration","scope":2306,"src":"757:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2302,"indexed":false,"mutability":"mutable","name":"solanaAddress","nameLocation":"783:13:18","nodeType":"VariableDeclaration","scope":2306,"src":"777:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2301,"name":"bytes","nodeType":"ElementaryTypeName","src":"777:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2304,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"806:9:18","nodeType":"VariableDeclaration","scope":2306,"src":"798:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"798:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"756:60:18"},"src":"736:81:18"},{"body":{"id":2317,"nodeType":"Block","src":"906:2:18","statements":[]},"id":2318,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2313,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"882:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2314,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"895:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2315,"kind":"baseConstructorSpecifier","modifierName":{"id":2312,"name":"OApp","nameLocations":["877:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":766,"src":"877:4:18"},"nodeType":"ModifierInvocation","src":"877:28:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"_lzEndpoint","nameLocation":"845:11:18","nodeType":"VariableDeclaration","scope":2318,"src":"837:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"_delegate","nameLocation":"866:9:18","nodeType":"VariableDeclaration","scope":2318,"src":"858:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"836:40:18"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[],"src":"906:0:18"},"scope":2858,"src":"825:83:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2423,"nodeType":"Block","src":"1120:1420:18","statements":[{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"evmAddressStr","nameLocation":"1274:13:18","nodeType":"VariableDeclaration","scope":2423,"src":"1260:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2324,"name":"string","nodeType":"ElementaryTypeName","src":"1260:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2330,"initialValue":{"arguments":[{"expression":{"id":2327,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1306:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1310:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1306:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2326,"name":"addressToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1290:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1290:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1260:57:18"},{"assignments":[2332],"declarations":[{"constant":false,"id":2332,"mutability":"mutable","name":"timestampStr","nameLocation":"1342:12:18","nodeType":"VariableDeclaration","scope":2423,"src":"1328:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2331,"name":"string","nodeType":"ElementaryTypeName","src":"1328:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2337,"initialValue":{"arguments":[{"expression":{"id":2334,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1373:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1379:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"1373:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2333,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"1357:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1357:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1328:61:18"},{"assignments":[2339],"declarations":[{"constant":false,"id":2339,"mutability":"mutable","name":"message","nameLocation":"1414:7:18","nodeType":"VariableDeclaration","scope":2423,"src":"1400:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"1400:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2351,"initialValue":{"arguments":[{"arguments":[{"id":2344,"name":"evmAddressStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"1462:13:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1477:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"id":2346,"name":"_solanaAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"1496:14:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1512:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"id":2348,"name":"timestampStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"1531:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2342,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1431:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1435:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"1431:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1431:123:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1424:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2340,"name":"string","nodeType":"ElementaryTypeName","src":"1424:6:18","typeDescriptions":{}}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1424:131:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1400:155:18"},{"assignments":[2353],"declarations":[{"constant":false,"id":2353,"mutability":"mutable","name":"payload","nameLocation":"1637:7:18","nodeType":"VariableDeclaration","scope":2423,"src":"1624:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2352,"name":"bytes","nodeType":"ElementaryTypeName","src":"1624:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2358,"initialValue":{"arguments":[{"id":2356,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1653:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1647:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2354,"name":"bytes","nodeType":"ElementaryTypeName","src":"1647:5:18","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1647:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1624:37:18"},{"expression":{"arguments":[{"arguments":[{"id":2366,"name":"_solanaAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"1767:14:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1761:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2364,"name":"bytes","nodeType":"ElementaryTypeName","src":"1761:5:18","typeDescriptions":{}}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1761:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"baseExpression":{"id":2359,"name":"linkedSolanaAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"1722:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes_storage_$dyn_storage_$","typeString":"mapping(address => bytes storage ref[] storage ref)"}},"id":2362,"indexExpression":{"expression":{"id":2360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1744:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1748:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1744:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1722:33:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage","typeString":"bytes storage ref[] storage ref"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1756:4:18","memberName":"push","nodeType":"MemberAccess","src":"1722:38:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes_storage_$dyn_storage_ptr_$_t_bytes_storage_$returns$__$attached_to$_t_array$_t_bytes_storage_$dyn_storage_ptr_$","typeString":"function (bytes storage ref[] storage pointer,bytes storage ref)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2369,"nodeType":"ExpressionStatement","src":"1722:61:18"},{"eventCall":{"arguments":[{"expression":{"id":2371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1839:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1843:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1839:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2375,"name":"_solanaAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"1857:14:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1851:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2373,"name":"bytes","nodeType":"ElementaryTypeName","src":"1851:5:18","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1851:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2377,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1874:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1880:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"1874:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2370,"name":"IdentityLinked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"1824:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,bytes memory,uint256)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1824:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"EmitStatement","src":"1819:71:18"},{"assignments":[2382],"declarations":[{"constant":false,"id":2382,"mutability":"mutable","name":"options","nameLocation":"1974:7:18","nodeType":"VariableDeclaration","scope":2423,"src":"1961:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2381,"name":"bytes","nodeType":"ElementaryTypeName","src":"1961:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2387,"initialValue":{"arguments":[{"hexValue":"","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1990:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1984:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2383,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:18","typeDescriptions":{}}},"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1984:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1961:32:18"},{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"fee","nameLocation":"2115:3:18","nodeType":"VariableDeclaration","scope":2423,"src":"2095:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":2389,"nodeType":"UserDefinedTypeName","pathNode":{"id":2388,"name":"MessagingFee","nameLocations":["2095:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"2095:12:18"},"referencedDeclaration":33,"src":"2095:12:18","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"id":2397,"initialValue":{"arguments":[{"id":2392,"name":"SOLANA_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2128:15:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2393,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2145:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2394,"name":"options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"2154:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2163:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2391,"name":"_quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2121:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$_t_struct$_MessagingFee_$33_memory_ptr_$","typeString":"function (uint32,bytes memory,bytes memory,bool) view returns (struct MessagingFee memory)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"nodeType":"VariableDeclarationStatement","src":"2095:74:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2399,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2188:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2192:5:18","memberName":"value","nodeType":"MemberAccess","src":"2188:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2401,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2201:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"id":2402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2205:9:18","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":30,"src":"2201:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2188:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420666565","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2216:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","typeString":"literal_string \"Insufficient fee\""},"value":"Insufficient fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","typeString":"literal_string \"Insufficient fee\""}],"id":2398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2180:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2406,"nodeType":"ExpressionStatement","src":"2180:55:18"},{"expression":{"arguments":[{"id":2408,"name":"SOLANA_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2278:15:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2409,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2345:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2410,"name":"options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"2390:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"expression":{"id":2412,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2448:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:5:18","memberName":"value","nodeType":"MemberAccess","src":"2448:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2459:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2411,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2435:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MessagingFee_$33_storage_ptr_$","typeString":"type(struct MessagingFee storage pointer)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2435:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},{"arguments":[{"expression":{"id":2418,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2491:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2495:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2491:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2483:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"2483:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2483:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2407,"name":"_lzSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"2256:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_MessagingFee_$33_memory_ptr_$_t_address_$returns$_t_struct$_MessagingReceipt_$28_memory_ptr_$","typeString":"function (uint32,bytes memory,bytes memory,struct MessagingFee memory,address) returns (struct MessagingReceipt memory)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2256:276:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$28_memory_ptr","typeString":"struct MessagingReceipt memory"}},"id":2422,"nodeType":"ExpressionStatement","src":"2256:276:18"}]},"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"916:130:18","text":" @dev Link the sender's EVM address to a Solana address\n @param _solanaAddress Solana address as string"},"functionSelector":"306fed73","id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"linkAddress","nameLocation":"1061:11:18","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"_solanaAddress","nameLocation":"1087:14:18","nodeType":"VariableDeclaration","scope":2424,"src":"1073:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2320,"name":"string","nodeType":"ElementaryTypeName","src":"1073:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1072:30:18"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[],"src":"1120:0:18"},"scope":2858,"src":"1052:1488:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2527,"nodeType":"Block","src":"2789:459:18","statements":[{"assignments":[2433],"declarations":[{"constant":false,"id":2433,"mutability":"mutable","name":"value","nameLocation":"2808:5:18","nodeType":"VariableDeclaration","scope":2527,"src":"2800:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2800:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2444,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2440,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"2840:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2832:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2438,"name":"uint160","nodeType":"ElementaryTypeName","src":"2832:7:18","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2832:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2824:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:18","typeDescriptions":{}}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2816:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2816:7:18","typeDescriptions":{}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2816:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2800:48:18"},{"assignments":[2446],"declarations":[{"constant":false,"id":2446,"mutability":"mutable","name":"alphabet","nameLocation":"2872:8:18","nodeType":"VariableDeclaration","scope":2527,"src":"2859:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2445,"name":"bytes","nodeType":"ElementaryTypeName","src":"2859:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2448,"initialValue":{"hexValue":"30313233343536373839616263646566","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2883:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"nodeType":"VariableDeclarationStatement","src":"2859:42:18"},{"assignments":[2450],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"str","nameLocation":"2935:3:18","nodeType":"VariableDeclaration","scope":2527,"src":"2922:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2449,"name":"bytes","nodeType":"ElementaryTypeName","src":"2922:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2455,"initialValue":{"arguments":[{"hexValue":"3432","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2951:2:18","typeDescriptions":{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"},"value":"42"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2941:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2451,"name":"bytes","nodeType":"ElementaryTypeName","src":"2945:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2941:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2922:32:18"},{"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2456,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"2965:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2458,"indexExpression":{"hexValue":"30","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2965:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2974:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2965:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2461,"nodeType":"ExpressionStatement","src":"2965:12:18"},{"expression":{"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2462,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"2988:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2464,"indexExpression":{"hexValue":"31","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2992:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2988:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2997:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2988:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2467,"nodeType":"ExpressionStatement","src":"2988:12:18"},{"body":{"id":2520,"nodeType":"Block","src":"3054:148:18","statements":[{"expression":{"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2478,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"3069:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2484,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3073:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3077:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3081:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3077:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3073:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3069:14:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2485,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"3086:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2496,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3101:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2492,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3107:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3111:2:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"3107:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3101:13:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3118:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3101:18:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3095:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2486,"name":"uint8","nodeType":"ElementaryTypeName","src":"3095:5:18","typeDescriptions":{}}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3095:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3086:35:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3069:52:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2498,"nodeType":"ExpressionStatement","src":"3069:52:18"},{"expression":{"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2499,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"3136:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2505,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3140:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3144:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3148:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3144:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3140:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3136:14:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2506,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"3153:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2517,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3168:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2513,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3174:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3178:2:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"3174:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3168:13:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783066","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3184:4:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0x0f"},"src":"3168:20:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3162:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2507,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:18","typeDescriptions":{}}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3162:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3153:37:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3136:54:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2519,"nodeType":"ExpressionStatement","src":"3136:54:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3041:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3230","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3045:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"3041:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2521,"initializationExpression":{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"i","nameLocation":"3034:1:18","nodeType":"VariableDeclaration","scope":2521,"src":"3026:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3026:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2471,"initialValue":{"hexValue":"30","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3038:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3026:13:18"},"loopExpression":{"expression":{"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3049:3:18","subExpression":{"id":2475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3049:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2477,"nodeType":"ExpressionStatement","src":"3049:3:18"},"nodeType":"ForStatement","src":"3021:181:18"},{"expression":{"arguments":[{"id":2524,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"3236:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3229:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2522,"name":"string","nodeType":"ElementaryTypeName","src":"3229:6:18","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3229:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2431,"id":2526,"nodeType":"Return","src":"3222:18:18"}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"2552:153:18","text":" @dev Convert an address to a string\n @param _addr The address to convert\n @return String representation of the address"},"id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"addressToString","nameLocation":"2720:15:18","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"_addr","nameLocation":"2744:5:18","nodeType":"VariableDeclaration","scope":2528,"src":"2736:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2735:15:18"},"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2528,"src":"2774:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2429,"name":"string","nodeType":"ElementaryTypeName","src":"2774:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2773:15:18"},"scope":2858,"src":"2711:537:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2606,"nodeType":"Block","src":"3498:506:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"3513:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3523:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3513:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2542,"nodeType":"IfStatement","src":"3509:54:18","trueBody":{"id":2541,"nodeType":"Block","src":"3526:37:18","statements":[{"expression":{"hexValue":"30","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3548:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2535,"id":2540,"nodeType":"Return","src":"3541:10:18"}]}},{"assignments":[2544],"declarations":[{"constant":false,"id":2544,"mutability":"mutable","name":"temp","nameLocation":"3591:4:18","nodeType":"VariableDeclaration","scope":2606,"src":"3583:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"3583:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2546,"initialValue":{"id":2545,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"3598:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3583:21:18"},{"assignments":[2548],"declarations":[{"constant":false,"id":2548,"mutability":"mutable","name":"digits","nameLocation":"3623:6:18","nodeType":"VariableDeclaration","scope":2606,"src":"3615:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3615:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2549,"nodeType":"VariableDeclarationStatement","src":"3615:14:18"},{"body":{"id":2560,"nodeType":"Block","src":"3668:60:18","statements":[{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3683:8:18","subExpression":{"id":2553,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"3683:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ExpressionStatement","src":"3683:8:18"},{"expression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2556,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3706:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3714:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3706:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ExpressionStatement","src":"3706:10:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3657:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3665:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3657:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2561,"nodeType":"WhileStatement","src":"3650:78:18"},{"assignments":[2563],"declarations":[{"constant":false,"id":2563,"mutability":"mutable","name":"buffer","nameLocation":"3761:6:18","nodeType":"VariableDeclaration","scope":2606,"src":"3748:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2562,"name":"bytes","nodeType":"ElementaryTypeName","src":"3748:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2568,"initialValue":{"arguments":[{"id":2566,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"3780:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3770:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2564,"name":"bytes","nodeType":"ElementaryTypeName","src":"3774:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3770:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3748:39:18"},{"body":{"id":2599,"nodeType":"Block","src":"3818:137:18","statements":[{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"3833:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3833:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"3833:11:18"},{"expression":{"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2576,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"3859:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2578,"indexExpression":{"id":2577,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"3866:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3859:14:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3889:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2586,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"3902:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3911:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3902:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3894:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3894:7:18","typeDescriptions":{}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3889:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3883:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2581,"name":"uint8","nodeType":"ElementaryTypeName","src":"3883:5:18","typeDescriptions":{}}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3883:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3876:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2579,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3876:6:18","typeDescriptions":{}}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3876:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3859:57:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2594,"nodeType":"ExpressionStatement","src":"3859:57:18"},{"expression":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2595,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"3931:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3941:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3931:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2598,"nodeType":"ExpressionStatement","src":"3931:12:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2569,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"3805:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3815:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3805:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2600,"nodeType":"WhileStatement","src":"3798:157:18"},{"expression":{"arguments":[{"id":2603,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"3989:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3982:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2601,"name":"string","nodeType":"ElementaryTypeName","src":"3982:6:18","typeDescriptions":{}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3982:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2535,"id":2605,"nodeType":"Return","src":"3975:21:18"}]},"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"3260:153:18","text":" @dev Convert a uint256 to a string\n @param _value The uint256 to convert\n @return String representation of the uint256"},"id":2607,"implemented":true,"kind":"function","modifiers":[],"name":"uint256ToString","nameLocation":"3428:15:18","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"_value","nameLocation":"3452:6:18","nodeType":"VariableDeclaration","scope":2607,"src":"3444:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3443:16:18"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2607,"src":"3483:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2533,"name":"string","nodeType":"ElementaryTypeName","src":"3483:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3482:15:18"},"scope":2858,"src":"3419:585:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"4288:60:18","statements":[{"expression":{"baseExpression":{"id":2616,"name":"linkedSolanaAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"4306:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes_storage_$dyn_storage_$","typeString":"mapping(address => bytes storage ref[] storage ref)"}},"id":2618,"indexExpression":{"id":2617,"name":"_evmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"4328:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4306:34:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage","typeString":"bytes storage ref[] storage ref"}},"functionReturnParameters":2615,"id":2619,"nodeType":"Return","src":"4299:41:18"}]},"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"4012:182:18","text":" @dev Get linked Solana addresses for an EVM address\n @param _evmAddress The EVM address to check\n @return Array of linked Solana addresses as bytes"},"functionSelector":"9541618c","id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"getLinkedAddresses","nameLocation":"4209:18:18","nodeType":"FunctionDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"_evmAddress","nameLocation":"4236:11:18","nodeType":"VariableDeclaration","scope":2621,"src":"4228:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"4228:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4227:21:18"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2621,"src":"4272:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2612,"name":"bytes","nodeType":"ElementaryTypeName","src":"4272:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2613,"nodeType":"ArrayTypeName","src":"4272:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4271:16:18"},"scope":2858,"src":"4200:148:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2677,"nodeType":"Block","src":"4659:341:18","statements":[{"assignments":[2634],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"bytesAddresses","nameLocation":"4685:14:18","nodeType":"VariableDeclaration","scope":2677,"src":"4670:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2632,"name":"bytes","nodeType":"ElementaryTypeName","src":"4670:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2633,"nodeType":"ArrayTypeName","src":"4670:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":2638,"initialValue":{"baseExpression":{"id":2635,"name":"linkedSolanaAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"4702:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes_storage_$dyn_storage_$","typeString":"mapping(address => bytes storage ref[] storage ref)"}},"id":2637,"indexExpression":{"id":2636,"name":"_evmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"4724:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4702:34:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage","typeString":"bytes storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4670:66:18"},{"assignments":[2643],"declarations":[{"constant":false,"id":2643,"mutability":"mutable","name":"strAddresses","nameLocation":"4763:12:18","nodeType":"VariableDeclaration","scope":2677,"src":"4747:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2641,"name":"string","nodeType":"ElementaryTypeName","src":"4747:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2642,"nodeType":"ArrayTypeName","src":"4747:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2650,"initialValue":{"arguments":[{"expression":{"id":2647,"name":"bytesAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"4791:14:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4806:6:18","memberName":"length","nodeType":"MemberAccess","src":"4791:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4778:12:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2644,"name":"string","nodeType":"ElementaryTypeName","src":"4782:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2645,"nodeType":"ArrayTypeName","src":"4782:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4778:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4747:66:18"},{"body":{"id":2673,"nodeType":"Block","src":"4883:70:18","statements":[{"expression":{"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2662,"name":"strAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"4898:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2664,"indexExpression":{"id":2663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4911:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4898:15:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2667,"name":"bytesAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"4923:14:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2669,"indexExpression":{"id":2668,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4938:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4923:17:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4916:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2665,"name":"string","nodeType":"ElementaryTypeName","src":"4916:6:18","typeDescriptions":{}}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4898:43:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2672,"nodeType":"ExpressionStatement","src":"4898:43:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4851:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2656,"name":"bytesAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"4855:14:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4870:6:18","memberName":"length","nodeType":"MemberAccess","src":"4855:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4851:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2674,"initializationExpression":{"assignments":[2652],"declarations":[{"constant":false,"id":2652,"mutability":"mutable","name":"i","nameLocation":"4844:1:18","nodeType":"VariableDeclaration","scope":2674,"src":"4839:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint","nodeType":"ElementaryTypeName","src":"4839:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2654,"initialValue":{"hexValue":"30","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4848:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4839:10:18"},"loopExpression":{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4878:3:18","subExpression":{"id":2659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4878:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"4878:3:18"},"nodeType":"ForStatement","src":"4834:119:18"},{"expression":{"id":2675,"name":"strAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"4980:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2629,"id":2676,"nodeType":"Return","src":"4973:19:18"}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"4360:195:18","text":" @dev Get linked Solana addresses for an EVM address as strings\n @param _evmAddress The EVM address to check\n @return Array of linked Solana addresses as strings"},"functionSelector":"a6451163","id":2678,"implemented":true,"kind":"function","modifiers":[],"name":"getLinkedAddressesAsStrings","nameLocation":"4570:27:18","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"_evmAddress","nameLocation":"4606:11:18","nodeType":"VariableDeclaration","scope":2678,"src":"4598:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"4598:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4597:21:18"},"returnParameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2678,"src":"4642:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2626,"name":"string","nodeType":"ElementaryTypeName","src":"4642:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2627,"nodeType":"ArrayTypeName","src":"4642:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4641:17:18"},"scope":2858,"src":"4561:439:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2736,"nodeType":"Block","src":"5290:574:18","statements":[{"assignments":[2688],"declarations":[{"constant":false,"id":2688,"mutability":"mutable","name":"evmAddressStr","nameLocation":"5379:13:18","nodeType":"VariableDeclaration","scope":2736,"src":"5365:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2687,"name":"string","nodeType":"ElementaryTypeName","src":"5365:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2693,"initialValue":{"arguments":[{"expression":{"id":2690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5411:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5415:6:18","memberName":"sender","nodeType":"MemberAccess","src":"5411:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2689,"name":"addressToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5395:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5395:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"5365:57:18"},{"assignments":[2695],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"timestampStr","nameLocation":"5447:12:18","nodeType":"VariableDeclaration","scope":2736,"src":"5433:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2694,"name":"string","nodeType":"ElementaryTypeName","src":"5433:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2700,"initialValue":{"arguments":[{"expression":{"id":2697,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5478:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5484:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"5478:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2696,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5462:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5462:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"5433:61:18"},{"assignments":[2702],"declarations":[{"constant":false,"id":2702,"mutability":"mutable","name":"message","nameLocation":"5519:7:18","nodeType":"VariableDeclaration","scope":2736,"src":"5505:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2701,"name":"string","nodeType":"ElementaryTypeName","src":"5505:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2714,"initialValue":{"arguments":[{"arguments":[{"id":2707,"name":"evmAddressStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"5567:13:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5582:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"id":2709,"name":"_solanaAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"5601:14:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5617:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"id":2711,"name":"timestampStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5636:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2705,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5536:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5540:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"5536:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:123:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5529:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2703,"name":"string","nodeType":"ElementaryTypeName","src":"5529:6:18","typeDescriptions":{}}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:131:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"5505:155:18"},{"assignments":[2716],"declarations":[{"constant":false,"id":2716,"mutability":"mutable","name":"payload","nameLocation":"5694:7:18","nodeType":"VariableDeclaration","scope":2736,"src":"5681:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2715,"name":"bytes","nodeType":"ElementaryTypeName","src":"5681:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2721,"initialValue":{"arguments":[{"id":2719,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"5710:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5704:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2717,"name":"bytes","nodeType":"ElementaryTypeName","src":"5704:5:18","typeDescriptions":{}}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5704:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5681:37:18"},{"assignments":[2723],"declarations":[{"constant":false,"id":2723,"mutability":"mutable","name":"options","nameLocation":"5742:7:18","nodeType":"VariableDeclaration","scope":2736,"src":"5729:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2722,"name":"bytes","nodeType":"ElementaryTypeName","src":"5729:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2728,"initialValue":{"arguments":[{"hexValue":"","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5758:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5752:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2724,"name":"bytes","nodeType":"ElementaryTypeName","src":"5752:5:18","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5729:32:18"},{"expression":{"arguments":[{"id":2730,"name":"SOLANA_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"5815:15:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2731,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5832:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2732,"name":"options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"5841:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5850:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2729,"name":"_quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5808:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$_t_struct$_MessagingFee_$33_memory_ptr_$","typeString":"function (uint32,bytes memory,bytes memory,bool) view returns (struct MessagingFee memory)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5808:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"functionReturnParameters":2686,"id":2735,"nodeType":"Return","src":"5801:55:18"}]},"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"5008:176:18","text":" @dev Quote the fee for sending a message to Solana\n @param _solanaAddress The Solana address to link\n @return fee The estimated messaging fee"},"functionSelector":"56368126","id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"quoteLinkFee","nameLocation":"5199:12:18","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"_solanaAddress","nameLocation":"5226:14:18","nodeType":"VariableDeclaration","scope":2737,"src":"5212:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2680,"name":"string","nodeType":"ElementaryTypeName","src":"5212:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5211:30:18"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"fee","nameLocation":"5285:3:18","nodeType":"VariableDeclaration","scope":2737,"src":"5265:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":2684,"nodeType":"UserDefinedTypeName","pathNode":{"id":2683,"name":"MessagingFee","nameLocations":["5265:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"5265:12:18"},"referencedDeclaration":33,"src":"5265:12:18","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"5264:25:18"},"scope":2858,"src":"5190:674:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2800,"nodeType":"Block","src":"6140:653:18","statements":[{"assignments":[2746],"declarations":[{"constant":false,"id":2746,"mutability":"mutable","name":"evmAddressStr","nameLocation":"6219:13:18","nodeType":"VariableDeclaration","scope":2800,"src":"6205:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2745,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2751,"initialValue":{"arguments":[{"expression":{"id":2748,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6251:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6255:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6251:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2747,"name":"addressToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6235:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6235:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6205:57:18"},{"assignments":[2753],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"timestampStr","nameLocation":"6287:12:18","nodeType":"VariableDeclaration","scope":2800,"src":"6273:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2752,"name":"string","nodeType":"ElementaryTypeName","src":"6273:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2758,"initialValue":{"arguments":[{"expression":{"id":2755,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6318:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6324:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"6318:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2754,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"6302:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6302:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6273:61:18"},{"assignments":[2760],"declarations":[{"constant":false,"id":2760,"mutability":"mutable","name":"message","nameLocation":"6359:7:18","nodeType":"VariableDeclaration","scope":2800,"src":"6345:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2759,"name":"string","nodeType":"ElementaryTypeName","src":"6345:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2772,"initialValue":{"arguments":[{"arguments":[{"id":2765,"name":"evmAddressStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"6407:13:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6422:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"id":2767,"name":"_solanaAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6441:14:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6457:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"id":2769,"name":"timestampStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"6476:12:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2763,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6376:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6380:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"6376:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6376:123:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6369:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2761,"name":"string","nodeType":"ElementaryTypeName","src":"6369:6:18","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6369:131:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6345:155:18"},{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"payload","nameLocation":"6534:7:18","nodeType":"VariableDeclaration","scope":2800,"src":"6521:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"6521:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2779,"initialValue":{"arguments":[{"id":2777,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"6550:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6544:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2775,"name":"bytes","nodeType":"ElementaryTypeName","src":"6544:5:18","typeDescriptions":{}}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6544:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6521:37:18"},{"assignments":[2781],"declarations":[{"constant":false,"id":2781,"mutability":"mutable","name":"options","nameLocation":"6640:7:18","nodeType":"VariableDeclaration","scope":2800,"src":"6627:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2780,"name":"bytes","nodeType":"ElementaryTypeName","src":"6627:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2786,"initialValue":{"arguments":[{"hexValue":"","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6656:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6650:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2782,"name":"bytes","nodeType":"ElementaryTypeName","src":"6650:5:18","typeDescriptions":{}}},"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6650:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6627:32:18"},{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"fee","nameLocation":"6700:3:18","nodeType":"VariableDeclaration","scope":2800,"src":"6680:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":2788,"nodeType":"UserDefinedTypeName","pathNode":{"id":2787,"name":"MessagingFee","nameLocations":["6680:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"6680:12:18"},"referencedDeclaration":33,"src":"6680:12:18","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"id":2796,"initialValue":{"arguments":[{"id":2791,"name":"SOLANA_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"6713:15:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2792,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"6730:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2793,"name":"options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6739:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6748:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2790,"name":"_quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6706:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$_t_struct$_MessagingFee_$33_memory_ptr_$","typeString":"function (uint32,bytes memory,bytes memory,bool) view returns (struct MessagingFee memory)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6706:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"nodeType":"VariableDeclarationStatement","src":"6680:74:18"},{"expression":{"expression":{"id":2797,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6772:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$33_memory_ptr","typeString":"struct MessagingFee memory"}},"id":2798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6776:9:18","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6772:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2744,"id":2799,"nodeType":"Return","src":"6765:20:18"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"5872:174:18","text":" @dev Quote the fee for linking an address\n @param _solanaAddress Solana address as string\n @return Fee required for the cross-chain message"},"functionSelector":"bf3f3de9","id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"quoteLinkAddress","nameLocation":"6061:16:18","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"_solanaAddress","nameLocation":"6092:14:18","nodeType":"VariableDeclaration","scope":2801,"src":"6078:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2739,"name":"string","nodeType":"ElementaryTypeName","src":"6078:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6077:30:18"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2801,"src":"6131:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"6131:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6130:9:18"},"scope":2858,"src":"6052:741:18","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1047],"body":{"id":2817,"nodeType":"Block","src":"7189:120:18","statements":[]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"6801:181:18","text":" @dev Override the _lzReceive function to handle incoming messages (if needed)\n This would be used if you want to receive messages from Solana back to EVM"},"id":2818,"implemented":true,"kind":"function","modifiers":[],"name":"_lzReceive","nameLocation":"6997:10:18","nodeType":"FunctionDefinition","overrides":{"id":2815,"nodeType":"OverrideSpecifier","overrides":[],"src":"7180:8:18"},"parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"_origin","nameLocation":"7034:7:18","nodeType":"VariableDeclaration","scope":2818,"src":"7018:23:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":2804,"nodeType":"UserDefinedTypeName","pathNode":{"id":2803,"name":"Origin","nameLocations":["7018:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"7018:6:18"},"referencedDeclaration":40,"src":"7018:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$40_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"_guid","nameLocation":"7060:5:18","nodeType":"VariableDeclaration","scope":2818,"src":"7052:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7052:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2809,"mutability":"mutable","name":"_payload","nameLocation":"7091:8:18","nodeType":"VariableDeclaration","scope":2818,"src":"7076:23:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2808,"name":"bytes","nodeType":"ElementaryTypeName","src":"7076:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2811,"mutability":"mutable","name":"_executor","nameLocation":"7118:9:18","nodeType":"VariableDeclaration","scope":2818,"src":"7110:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"7110:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"_extraData","nameLocation":"7153:10:18","nodeType":"VariableDeclaration","scope":2818,"src":"7138:25:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2812,"name":"bytes","nodeType":"ElementaryTypeName","src":"7138:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7007:163:18"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[],"src":"7189:0:18"},"scope":2858,"src":"6988:321:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2830,"nodeType":"Block","src":"7489:39:18","statements":[{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2826,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"7500:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2827,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"7511:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7500:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"nodeType":"ExpressionStatement","src":"7500:20:18"}]},"documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"7317:107:18","text":" @dev Update the gas limit for cross-chain calls\n @param _gasLimit New gas limit"},"functionSelector":"ee7d72b4","id":2831,"implemented":true,"kind":"function","modifiers":[{"id":2824,"kind":"modifierInvocation","modifierName":{"id":2823,"name":"onlyOwner","nameLocations":["7479:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":1350,"src":"7479:9:18"},"nodeType":"ModifierInvocation","src":"7479:9:18"}],"name":"setGasLimit","nameLocation":"7439:11:18","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"_gasLimit","nameLocation":"7459:9:18","nodeType":"VariableDeclaration","scope":2831,"src":"7451:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"7451:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7450:19:18"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[],"src":"7489:0:18"},"scope":2858,"src":"7430:98:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2856,"nodeType":"Block","src":"7648:130:18","statements":[{"assignments":[2838,null],"declarations":[{"constant":false,"id":2838,"mutability":"mutable","name":"success","nameLocation":"7665:7:18","nodeType":"VariableDeclaration","scope":2856,"src":"7660:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2837,"name":"bool","nodeType":"ElementaryTypeName","src":"7660:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2850,"initialValue":{"arguments":[{"hexValue":"","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7721:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2839,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"7678:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7678:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7686:4:18","memberName":"call","nodeType":"MemberAccess","src":"7678:12:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":2844,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7706:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_OmnichainIdentityLinker_$2858","typeString":"contract OmnichainIdentityLinker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OmnichainIdentityLinker_$2858","typeString":"contract OmnichainIdentityLinker"}],"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7698:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2842,"name":"address","nodeType":"ElementaryTypeName","src":"7698:7:18","typeDescriptions":{}}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7698:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:7:18","memberName":"balance","nodeType":"MemberAccess","src":"7698:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7678:42:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7678:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7659:65:18"},{"expression":{"arguments":[{"id":2852,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"7743:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7752:17:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":2851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7735:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2855,"nodeType":"ExpressionStatement","src":"7735:35:18"}]},"documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"7536:67:18","text":" @dev Withdraw any stuck funds (admin function)"},"functionSelector":"3ccfd60b","id":2857,"implemented":true,"kind":"function","modifiers":[{"id":2835,"kind":"modifierInvocation","modifierName":{"id":2834,"name":"onlyOwner","nameLocations":["7638:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":1350,"src":"7638:9:18"},"nodeType":"ModifierInvocation","src":"7638:9:18"}],"name":"withdraw","nameLocation":"7618:8:18","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[],"src":"7626:2:18"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[],"src":"7648:0:18"},"scope":2858,"src":"7609:169:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2859,"src":"314:7467:18","usedErrors":[912,1070,1072,1245,1249,1251,1253],"usedEvents":[1259,1332,2306]}],"src":"33:7750:18"},"id":18}},"contracts":{"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"ILayerZeroEndpointV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"}],"name":"ComposeDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"ComposeSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"DefaultReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultSendLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"delegate","type":"address"}],"name":"DelegateSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"}],"name":"InboundNonceSkipped","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"LibraryRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzComposeAlert","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzReceiveAlert","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"LzTokenSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketBurnt","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"}],"name":"PacketDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketNilified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"encodedPayload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"options","type":"bytes"},{"indexed":false,"internalType":"address","name":"sendLibrary","type":"address"}],"name":"PacketSent","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"ReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"timeout","type":"uint256"}],"name":"ReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"SendLibrarySet","type":"event"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"clear","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"}],"name":"composeQueue","outputs":[{"internalType":"bytes32","name":"messageHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultSendLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eid","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"uint32","name":"_configType","type":"uint32"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"config","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getReceiveLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"bool","name":"isDefault","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRegisteredLibraries","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSendContext","outputs":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getSendLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"inboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"inboundPayloadHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"initializable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isDefaultSendLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"isRegisteredLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isSupportedEid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"}],"name":"isValidReceiveLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"lazyInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"lzToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nativeToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"nextGuid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"nilify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"outboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"receiver","type":"bytes32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"options","type":"bytes"},{"internalType":"bool","name":"payInLzToken","type":"bool"}],"internalType":"struct MessagingParams","name":"_params","type":"tuple"},{"internalType":"address","name":"_sender","type":"address"}],"name":"quote","outputs":[{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"receiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"registerLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"receiver","type":"bytes32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"options","type":"bytes"},{"internalType":"bool","name":"payInLzToken","type":"bool"}],"internalType":"struct MessagingParams","name":"_params","type":"tuple"},{"internalType":"address","name":"_refundAddress","type":"address"}],"name":"send","outputs":[{"components":[{"internalType":"bytes32","name":"guid","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"fee","type":"tuple"}],"internalType":"struct MessagingReceipt","name":"","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"sendCompose","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"components":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint32","name":"configType","type":"uint32"},{"internalType":"bytes","name":"config","type":"bytes"}],"internalType":"struct SetConfigParam[]","name":"_params","type":"tuple[]"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setDefaultReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setDefaultReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setDefaultSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_lzToken","type":"address"}],"name":"setLzToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"skip","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"verifiable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"verify","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint32,bytes32,uint64,bytes32)":"40f80683","clear(address,(uint32,bytes32,uint64),bytes32,bytes)":"2a56c1b0","composeQueue(address,address,bytes32,uint16)":"35d330b0","defaultReceiveLibrary(uint32)":"6f50a803","defaultReceiveLibraryTimeout(uint32)":"6e83f5bb","defaultSendLibrary(uint32)":"f64be4c7","eid()":"416ecebf","getConfig(address,address,uint32,uint32)":"2b3197b9","getReceiveLibrary(address,uint32)":"402f8468","getRegisteredLibraries()":"9132e5c3","getSendContext()":"14f651a9","getSendLibrary(address,uint32)":"b96a277f","inboundNonce(address,uint32,bytes32)":"a0dd43fc","inboundPayloadHash(address,uint32,bytes32,uint64)":"c9fc7bcd","initializable((uint32,bytes32,uint64),address)":"861e1ca5","isDefaultSendLibrary(address,uint32)":"dc93c8a2","isRegisteredLibrary(address)":"dc706a62","isSendingMessage()":"79624ca9","isSupportedEid(uint32)":"6750cd4c","isValidReceiveLibrary(address,uint32,address)":"9d7f9775","lazyInboundNonce(address,uint32,bytes32)":"5b17bb70","lzCompose(address,address,bytes32,uint16,bytes,bytes)":"91d20fa1","lzReceive((uint32,bytes32,uint64),address,bytes32,bytes,bytes)":"0c0c389e","lzToken()":"e4fe1d94","nativeToken()":"e1758bd8","nextGuid(address,uint32,bytes32)":"aafe5e07","nilify(address,uint32,bytes32,uint64,bytes32)":"2e80fbf3","outboundNonce(address,uint32,bytes32)":"9c6d7340","quote((uint32,bytes32,bytes,bytes,bool),address)":"ddc28c58","receiveLibraryTimeout(address,uint32)":"ef667aa1","registerLibrary(address)":"e8964e81","send((uint32,bytes32,bytes,bytes,bool),address)":"2637a450","sendCompose(address,bytes32,uint16,bytes)":"7cb59012","setConfig(address,address,(uint32,uint32,bytes)[])":"6dbd9f90","setDefaultReceiveLibrary(uint32,address,uint256)":"a718531b","setDefaultReceiveLibraryTimeout(uint32,address,uint256)":"d4b4ec8f","setDefaultSendLibrary(uint32,address)":"aafea312","setDelegate(address)":"ca5eb5e1","setLzToken(address)":"c28e0eed","setReceiveLibrary(address,uint32,address,uint256)":"6a14d715","setReceiveLibraryTimeout(address,uint32,address,uint256)":"183c834f","setSendLibrary(address,uint32,address)":"9535ff30","skip(address,uint32,bytes32,uint64)":"d70b8902","verifiable((uint32,bytes32,uint64),address)":"c9a54a99","verify((uint32,bytes32,uint64),address,bytes32)":"a825d747"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"}],\"name\":\"ComposeDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposeSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"DelegateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeAlert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzReceiveAlert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LzTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketBurnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"PacketDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketNilified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendLibrary\",\"type\":\"address\"}],\"name\":\"PacketSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"}],\"name\":\"composeQueue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"inboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"initializable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isDefaultSendLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isSupportedEid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isValidReceiveLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"lazyInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"nextGuid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"nilify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"payInLzToken\",\"type\":\"bool\"}],\"internalType\":\"struct MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"payInLzToken\",\"type\":\"bool\"}],\"internalType\":\"struct MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"sendCompose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"internalType\":\"struct SetConfigParam[]\",\"name\":\"_params\",\"type\":\"tuple[]\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzToken\",\"type\":\"address\"}],\"name\":\"setLzToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"verifiable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setSendLibrary(address,uint32,address)\":{\"notice\":\"------------------- OApp interfaces -------------------\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":\"ILayerZeroEndpointV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setSendLibrary(address,uint32,address)":{"notice":"------------------- OApp interfaces -------------------"}},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol":{"ILayerZeroReceiver":{"abi":[{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":\"ILayerZeroReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"IMessageLibManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"DefaultReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultSendLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"LibraryRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"ReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"timeout","type":"uint256"}],"name":"ReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"SendLibrarySet","type":"event"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultSendLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"uint32","name":"_configType","type":"uint32"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"config","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getReceiveLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"bool","name":"isDefault","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRegisteredLibraries","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getSendLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isDefaultSendLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"isRegisteredLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isSupportedEid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"}],"name":"isValidReceiveLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"receiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"registerLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"components":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint32","name":"configType","type":"uint32"},{"internalType":"bytes","name":"config","type":"bytes"}],"internalType":"struct SetConfigParam[]","name":"_params","type":"tuple[]"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setDefaultReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setDefaultReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setDefaultSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"defaultReceiveLibrary(uint32)":"6f50a803","defaultReceiveLibraryTimeout(uint32)":"6e83f5bb","defaultSendLibrary(uint32)":"f64be4c7","getConfig(address,address,uint32,uint32)":"2b3197b9","getReceiveLibrary(address,uint32)":"402f8468","getRegisteredLibraries()":"9132e5c3","getSendLibrary(address,uint32)":"b96a277f","isDefaultSendLibrary(address,uint32)":"dc93c8a2","isRegisteredLibrary(address)":"dc706a62","isSupportedEid(uint32)":"6750cd4c","isValidReceiveLibrary(address,uint32,address)":"9d7f9775","receiveLibraryTimeout(address,uint32)":"ef667aa1","registerLibrary(address)":"e8964e81","setConfig(address,address,(uint32,uint32,bytes)[])":"6dbd9f90","setDefaultReceiveLibrary(uint32,address,uint256)":"a718531b","setDefaultReceiveLibraryTimeout(uint32,address,uint256)":"d4b4ec8f","setDefaultSendLibrary(uint32,address)":"aafea312","setReceiveLibrary(address,uint32,address,uint256)":"6a14d715","setReceiveLibraryTimeout(address,uint32,address,uint256)":"183c834f","setSendLibrary(address,uint32,address)":"9535ff30"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isDefaultSendLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isSupportedEid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isValidReceiveLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"internalType\":\"struct SetConfigParam[]\",\"name\":\"_params\",\"type\":\"tuple[]\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setSendLibrary(address,uint32,address)\":{\"notice\":\"------------------- OApp interfaces -------------------\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":\"IMessageLibManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setSendLibrary(address,uint32,address)":{"notice":"------------------- OApp interfaces -------------------"}},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"IMessagingChannel":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"}],"name":"InboundNonceSkipped","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketBurnt","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketNilified","type":"event"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eid","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"inboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"inboundPayloadHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"lazyInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"nextGuid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"nilify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"outboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"skip","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint32,bytes32,uint64,bytes32)":"40f80683","eid()":"416ecebf","inboundNonce(address,uint32,bytes32)":"a0dd43fc","inboundPayloadHash(address,uint32,bytes32,uint64)":"c9fc7bcd","lazyInboundNonce(address,uint32,bytes32)":"5b17bb70","nextGuid(address,uint32,bytes32)":"aafe5e07","nilify(address,uint32,bytes32,uint64,bytes32)":"2e80fbf3","outboundNonce(address,uint32,bytes32)":"9c6d7340","skip(address,uint32,bytes32,uint64)":"d70b8902"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketBurnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketNilified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"inboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"lazyInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"nextGuid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"nilify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":\"IMessagingChannel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"IMessagingComposer":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"}],"name":"ComposeDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"ComposeSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzComposeAlert","type":"event"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"}],"name":"composeQueue","outputs":[{"internalType":"bytes32","name":"messageHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"sendCompose","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"composeQueue(address,address,bytes32,uint16)":"35d330b0","lzCompose(address,address,bytes32,uint16,bytes,bytes)":"91d20fa1","sendCompose(address,bytes32,uint16,bytes)":"7cb59012"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"}],\"name\":\"ComposeDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposeSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeAlert\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"}],\"name\":\"composeQueue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"sendCompose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":\"IMessagingComposer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"IMessagingContext":{"abi":[{"inputs":[],"name":"getSendContext","outputs":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getSendContext()":"14f651a9","isSendingMessage()":"79624ca9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":\"IMessagingContext\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol":{"OApp":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[],"name":"LzTokenUnavailable","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"NotEnoughNative","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"OnlyEndpoint","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"name":"isComposeMsgSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.","kind":"dev","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"details":"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.","params":{"origin":"The origin information containing the source endpoint and sender address."},"returns":{"_0":"Whether the path has been initialized."}},"constructor":{"details":"Constructor to initialize the OApp with the provided endpoint and owner.","params":{"_delegate":"The delegate capable of making OApp configurations inside of the endpoint.","_endpoint":"The address of the LOCAL LayerZero endpoint."}},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"details":"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.","params":{"_sender":"The sender address."},"returns":{"_0":"isSender Is a valid sender."}},"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":{"details":"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.","params":{"_executor":"The address of the executor for the received message.","_extraData":"Additional arbitrary data provided by the corresponding executor.","_guid":"The unique identifier for the received LayerZero message.","_message":"The payload of the received message.","_origin":"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message."}},"nextNonce(uint32,bytes32)":{"details":"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.","returns":{"nonce":"The next nonce."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol implementation.","senderVersion":"The version of the OAppSender.sol implementation."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"OApp","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","endpoint()":"5e280f11","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"82413eac","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LzTokenUnavailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"NotEnoughNative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OnlyEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isComposeMsgSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.\",\"kind\":\"dev\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"details\":\"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.\",\"params\":{\"origin\":\"The origin information containing the source endpoint and sender address.\"},\"returns\":{\"_0\":\"Whether the path has been initialized.\"}},\"constructor\":{\"details\":\"Constructor to initialize the OApp with the provided endpoint and owner.\",\"params\":{\"_delegate\":\"The delegate capable of making OApp configurations inside of the endpoint.\",\"_endpoint\":\"The address of the LOCAL LayerZero endpoint.\"}},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"details\":\"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.\",\"params\":{\"_sender\":\"The sender address.\"},\"returns\":{\"_0\":\"isSender Is a valid sender.\"}},\"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)\":{\"details\":\"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.\",\"params\":{\"_executor\":\"The address of the executor for the received message.\",\"_extraData\":\"Additional arbitrary data provided by the corresponding executor.\",\"_guid\":\"The unique identifier for the received LayerZero message.\",\"_message\":\"The payload of the received message.\",\"_origin\":\"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.\"}},\"nextNonce(uint32,bytes32)\":{\"details\":\"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\",\"returns\":{\"nonce\":\"The next nonce.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol implementation.\",\"senderVersion\":\"The version of the OAppSender.sol implementation.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OApp\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"notice\":\"Checks if the path initialization is allowed based on the provided origin.\"},\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"notice\":\"Indicates whether an address is an approved composeMsg sender to the Endpoint.\"},\"nextNonce(uint32,bytes32)\":{\"notice\":\"Retrieves the next nonce for a given source endpoint and sender address.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol\":\"OApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\n// @dev Import the 'MessagingFee' and 'MessagingReceipt' so it's exposed to OApp implementers\\n// solhint-disable-next-line no-unused-import\\nimport { OAppSender, MessagingFee, MessagingReceipt } from \\\"./OAppSender.sol\\\";\\n// @dev Import the 'Origin' so it's exposed to OApp implementers\\n// solhint-disable-next-line no-unused-import\\nimport { OAppReceiver, Origin } from \\\"./OAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OApp\\n * @dev Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.\\n */\\nabstract contract OApp is OAppSender, OAppReceiver {\\n    /**\\n     * @dev Constructor to initialize the OApp with the provided endpoint and owner.\\n     * @param _endpoint The address of the LOCAL LayerZero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     */\\n    constructor(address _endpoint, address _delegate) OAppCore(_endpoint, _delegate) {}\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol implementation.\\n     * @return receiverVersion The version of the OAppReceiver.sol implementation.\\n     */\\n    function oAppVersion()\\n        public\\n        pure\\n        virtual\\n        override(OAppSender, OAppReceiver)\\n        returns (uint64 senderVersion, uint64 receiverVersion)\\n    {\\n        return (SENDER_VERSION, RECEIVER_VERSION);\\n    }\\n}\\n\",\"keccak256\":\"0xac362c4c291fad2f1511a968424b2e78a5ad502d1c867bd31da04be742aca8c5\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { IOAppReceiver, Origin } from \\\"./interfaces/IOAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppReceiver\\n * @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\\n */\\nabstract contract OAppReceiver is IOAppReceiver, OAppCore {\\n    // Custom error message for when the caller is not the registered endpoint/\\n    error OnlyEndpoint(address addr);\\n\\n    // @dev The version of the OAppReceiver implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant RECEIVER_VERSION = 2;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\\n     * ie. this is a RECEIVE only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (0, RECEIVER_VERSION);\\n    }\\n\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @dev _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @dev _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata /*_origin*/,\\n        bytes calldata /*_message*/,\\n        address _sender\\n    ) public view virtual returns (bool) {\\n        return _sender == address(this);\\n    }\\n\\n    /**\\n     * @notice Checks if the path initialization is allowed based on the provided origin.\\n     * @param origin The origin information containing the source endpoint and sender address.\\n     * @return Whether the path has been initialized.\\n     *\\n     * @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\\n     * @dev This defaults to assuming if a peer has been set, its initialized.\\n     * Can be overridden by the OApp if there is other logic to determine this.\\n     */\\n    function allowInitializePath(Origin calldata origin) public view virtual returns (bool) {\\n        return peers[origin.srcEid] == origin.sender;\\n    }\\n\\n    /**\\n     * @notice Retrieves the next nonce for a given source endpoint and sender address.\\n     * @dev _srcEid The source endpoint ID.\\n     * @dev _sender The sender address.\\n     * @return nonce The next nonce.\\n     *\\n     * @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\\n     * @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\\n     * @dev This is also enforced by the OApp.\\n     * @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\\n     */\\n    function nextNonce(uint32 /*_srcEid*/, bytes32 /*_sender*/) public view virtual returns (uint64 nonce) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Entry point for receiving messages or packets from the endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _guid The unique identifier for the received LayerZero message.\\n     * @param _message The payload of the received message.\\n     * @param _executor The address of the executor for the received message.\\n     * @param _extraData Additional arbitrary data provided by the corresponding executor.\\n     *\\n     * @dev Entry point for receiving msg/packet from the LayerZero endpoint.\\n     */\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) public payable virtual {\\n        // Ensures that only the endpoint can attempt to lzReceive() messages to this OApp.\\n        if (address(endpoint) != msg.sender) revert OnlyEndpoint(msg.sender);\\n\\n        // Ensure that the sender matches the expected peer for the source endpoint.\\n        if (_getPeerOrRevert(_origin.srcEid) != _origin.sender) revert OnlyPeer(_origin.srcEid, _origin.sender);\\n\\n        // Call the internal OApp implementation of lzReceive.\\n        _lzReceive(_origin, _guid, _message, _executor, _extraData);\\n    }\\n\\n    /**\\n     * @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation.\\n     */\\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal virtual;\\n}\\n\",\"keccak256\":\"0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroReceiver, Origin } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\n\\ninterface IOAppReceiver is ILayerZeroReceiver {\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata _origin,\\n        bytes calldata _message,\\n        address _sender\\n    ) external view returns (bool isSender);\\n}\\n\",\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol:OApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":785,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol:OApp","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"notice":"Checks if the path initialization is allowed based on the provided origin."},"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"notice":"Indicates whether an address is an approved composeMsg sender to the Endpoint."},"nextNonce(uint32,bytes32)":{"notice":"Retrieves the next nonce for a given source endpoint and sender address."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol":{"OAppCore":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract implementing the IOAppCore interface with basic OApp configurations.","kind":"dev","methods":{"constructor":{"details":"Constructor to initialize the OAppCore with the provided endpoint and delegate.The delegate typically should be set as the owner of the contract.","params":{"_delegate":"The delegate capable of making OApp configurations inside of the endpoint.","_endpoint":"The address of the LOCAL Layer Zero endpoint."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"endpoint":{"return":"The LayerZero endpoint as an interface.","returns":{"_0":"The LayerZero endpoint as an interface."}},"peers":{"params":{"_eid":"The endpoint ID."},"return":"peer The peer address (OApp instance) associated with the corresponding endpoint.","returns":{"peer":"The peer address (OApp instance) associated with the corresponding endpoint."}}},"title":"OAppCore","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the IOAppCore interface with basic OApp configurations.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to initialize the OAppCore with the provided endpoint and delegate.The delegate typically should be set as the owner of the contract.\",\"params\":{\"_delegate\":\"The delegate capable of making OApp configurations inside of the endpoint.\",\"_endpoint\":\"The address of the LOCAL Layer Zero endpoint.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"endpoint\":{\"return\":\"The LayerZero endpoint as an interface.\",\"returns\":{\"_0\":\"The LayerZero endpoint as an interface.\"}},\"peers\":{\"params\":{\"_eid\":\"The endpoint ID.\"},\"return\":\"peer The peer address (OApp instance) associated with the corresponding endpoint.\",\"returns\":{\"peer\":\"The peer address (OApp instance) associated with the corresponding endpoint.\"}}},\"title\":\"OAppCore\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":\"OAppCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol:OAppCore","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":785,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol:OAppCore","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol":{"OAppReceiver":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"OnlyEndpoint","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"name":"isComposeMsgSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.","kind":"dev","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"details":"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.","params":{"origin":"The origin information containing the source endpoint and sender address."},"returns":{"_0":"Whether the path has been initialized."}},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"details":"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.","params":{"_sender":"The sender address."},"returns":{"_0":"isSender Is a valid sender."}},"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":{"details":"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.","params":{"_executor":"The address of the executor for the received message.","_extraData":"Additional arbitrary data provided by the corresponding executor.","_guid":"The unique identifier for the received LayerZero message.","_message":"The payload of the received message.","_origin":"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message."}},"nextNonce(uint32,bytes32)":{"details":"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.","returns":{"nonce":"The next nonce."}},"oAppVersion()":{"details":"Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented. ie. this is a RECEIVE only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.","returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"OAppReceiver","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","endpoint()":"5e280f11","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"82413eac","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OnlyEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isComposeMsgSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\",\"kind\":\"dev\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"details\":\"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.\",\"params\":{\"origin\":\"The origin information containing the source endpoint and sender address.\"},\"returns\":{\"_0\":\"Whether the path has been initialized.\"}},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"details\":\"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.\",\"params\":{\"_sender\":\"The sender address.\"},\"returns\":{\"_0\":\"isSender Is a valid sender.\"}},\"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)\":{\"details\":\"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.\",\"params\":{\"_executor\":\"The address of the executor for the received message.\",\"_extraData\":\"Additional arbitrary data provided by the corresponding executor.\",\"_guid\":\"The unique identifier for the received LayerZero message.\",\"_message\":\"The payload of the received message.\",\"_origin\":\"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.\"}},\"nextNonce(uint32,bytes32)\":{\"details\":\"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\",\"returns\":{\"nonce\":\"The next nonce.\"}},\"oAppVersion()\":{\"details\":\"Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented. ie. this is a RECEIVE only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\",\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OAppReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"notice\":\"Checks if the path initialization is allowed based on the provided origin.\"},\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"notice\":\"Indicates whether an address is an approved composeMsg sender to the Endpoint.\"},\"nextNonce(uint32,bytes32)\":{\"notice\":\"Retrieves the next nonce for a given source endpoint and sender address.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol\":\"OAppReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { IOAppReceiver, Origin } from \\\"./interfaces/IOAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppReceiver\\n * @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\\n */\\nabstract contract OAppReceiver is IOAppReceiver, OAppCore {\\n    // Custom error message for when the caller is not the registered endpoint/\\n    error OnlyEndpoint(address addr);\\n\\n    // @dev The version of the OAppReceiver implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant RECEIVER_VERSION = 2;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\\n     * ie. this is a RECEIVE only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (0, RECEIVER_VERSION);\\n    }\\n\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @dev _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @dev _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata /*_origin*/,\\n        bytes calldata /*_message*/,\\n        address _sender\\n    ) public view virtual returns (bool) {\\n        return _sender == address(this);\\n    }\\n\\n    /**\\n     * @notice Checks if the path initialization is allowed based on the provided origin.\\n     * @param origin The origin information containing the source endpoint and sender address.\\n     * @return Whether the path has been initialized.\\n     *\\n     * @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\\n     * @dev This defaults to assuming if a peer has been set, its initialized.\\n     * Can be overridden by the OApp if there is other logic to determine this.\\n     */\\n    function allowInitializePath(Origin calldata origin) public view virtual returns (bool) {\\n        return peers[origin.srcEid] == origin.sender;\\n    }\\n\\n    /**\\n     * @notice Retrieves the next nonce for a given source endpoint and sender address.\\n     * @dev _srcEid The source endpoint ID.\\n     * @dev _sender The sender address.\\n     * @return nonce The next nonce.\\n     *\\n     * @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\\n     * @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\\n     * @dev This is also enforced by the OApp.\\n     * @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\\n     */\\n    function nextNonce(uint32 /*_srcEid*/, bytes32 /*_sender*/) public view virtual returns (uint64 nonce) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Entry point for receiving messages or packets from the endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _guid The unique identifier for the received LayerZero message.\\n     * @param _message The payload of the received message.\\n     * @param _executor The address of the executor for the received message.\\n     * @param _extraData Additional arbitrary data provided by the corresponding executor.\\n     *\\n     * @dev Entry point for receiving msg/packet from the LayerZero endpoint.\\n     */\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) public payable virtual {\\n        // Ensures that only the endpoint can attempt to lzReceive() messages to this OApp.\\n        if (address(endpoint) != msg.sender) revert OnlyEndpoint(msg.sender);\\n\\n        // Ensure that the sender matches the expected peer for the source endpoint.\\n        if (_getPeerOrRevert(_origin.srcEid) != _origin.sender) revert OnlyPeer(_origin.srcEid, _origin.sender);\\n\\n        // Call the internal OApp implementation of lzReceive.\\n        _lzReceive(_origin, _guid, _message, _executor, _extraData);\\n    }\\n\\n    /**\\n     * @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation.\\n     */\\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal virtual;\\n}\\n\",\"keccak256\":\"0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroReceiver, Origin } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\n\\ninterface IOAppReceiver is ILayerZeroReceiver {\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata _origin,\\n        bytes calldata _message,\\n        address _sender\\n    ) external view returns (bool isSender);\\n}\\n\",\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol:OAppReceiver","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":785,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol:OAppReceiver","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"notice":"Checks if the path initialization is allowed based on the provided origin."},"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"notice":"Indicates whether an address is an approved composeMsg sender to the Endpoint."},"nextNonce(uint32,bytes32)":{"notice":"Retrieves the next nonce for a given source endpoint and sender address."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol":{"OAppSender":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[],"name":"LzTokenUnavailable","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"NotEnoughNative","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.","kind":"dev","methods":{"oAppVersion()":{"details":"Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented. ie. this is a SEND only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions","returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"OAppSender","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LzTokenUnavailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"NotEnoughNative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\",\"kind\":\"dev\",\"methods\":{\"oAppVersion()\":{\"details\":\"Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented. ie. this is a SEND only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\",\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OAppSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":\"OAppSender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol:OAppSender","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":785,"contract":"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol:OAppSender","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol":{"IOAppCore":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"iEndpoint","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"endpoint()":{"returns":{"iEndpoint":"The LayerZero endpoint as an interface."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"peers(uint32)":{"params":{"_eid":"The endpoint ID."},"returns":{"peer":"The peer address (OApp instance) associated with the corresponding endpoint."}},"setDelegate(address)":{"params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}}},"title":"IOAppCore","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","peers(uint32)":"bb0b6a53","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"iEndpoint\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"endpoint()\":{\"returns\":{\"iEndpoint\":\"The LayerZero endpoint as an interface.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"peers(uint32)\":{\"params\":{\"_eid\":\"The endpoint ID.\"},\"returns\":{\"peer\":\"The peer address (OApp instance) associated with the corresponding endpoint.\"}},\"setDelegate(address)\":{\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}}},\"title\":\"IOAppCore\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp Core.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":\"IOAppCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp Core."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol":{"IOAppReceiver":{"abi":[{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"name":"isComposeMsgSender","outputs":[{"internalType":"bool","name":"isSender","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"details":"Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.The default sender IS the OAppReceiver implementer.","params":{"_message":"The lzReceive payload.","_origin":"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.","_sender":"The sender address."},"returns":{"isSender":"Is a valid sender."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"82413eac","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isComposeMsgSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSender\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"details\":\"Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.The default sender IS the OAppReceiver implementer.\",\"params\":{\"_message\":\"The lzReceive payload.\",\"_origin\":\"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.\",\"_sender\":\"The sender address.\"},\"returns\":{\"isSender\":\"Is a valid sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"notice\":\"Indicates whether an address is an approved composeMsg sender to the Endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol\":\"IOAppReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroReceiver, Origin } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\n\\ninterface IOAppReceiver is ILayerZeroReceiver {\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata _origin,\\n        bytes calldata _message,\\n        address _sender\\n    ) external view returns (bool isSender);\\n}\\n\",\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"notice":"Indicates whether an address is an approved composeMsg sender to the Endpoint."}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220022d0084c9ba718a0ed0f2caf86e9f1bfa259486a270af0e08944857faf1439b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0x2D STOP DUP5 0xC9 0xBA PUSH18 0x8A0ED0F2CAF86E9F1BFA259486A270AF0E08 SWAP5 BASEFEE JUMPI STATICCALL CALL NUMBER SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220022d0084c9ba718a0ed0f2caf86e9f1bfa259486a270af0e08944857faf1439b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0x2D STOP DUP5 0xC9 0xBA PUSH18 0x8A0ED0F2CAF86E9F1BFA259486A270AF0E08 SWAP5 BASEFEE JUMPI STATICCALL CALL NUMBER SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dccd36f0ab30c0cc09a4b2234e978c3f655a6786fefe4c06228c31b5c85ca3664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xCC 0xD3 PUSH16 0xAB30C0CC09A4B2234E978C3F655A678 PUSH16 0xEFE4C06228C31B5C85CA3664736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dccd36f0ab30c0cc09a4b2234e978c3f655a6786fefe4c06228c31b5c85ca3664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xCC 0xD3 PUSH16 0xAB30C0CC09A4B2234E978C3F655A678 PUSH16 0xEFE4C06228C31B5C85CA3664736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/OmnichainIdentityLinker.sol":{"OmnichainIdentityLinker":{"abi":[{"inputs":[{"internalType":"address","name":"_lzEndpoint","type":"address"},{"internalType":"address","name":"_delegate","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[],"name":"LzTokenUnavailable","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"NotEnoughNative","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"OnlyEndpoint","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"evmAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"solanaAddress","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"IdentityLinked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"SOLANA_CHAIN_ID","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gasLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_evmAddress","type":"address"}],"name":"getLinkedAddresses","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_evmAddress","type":"address"}],"name":"getLinkedAddressesAsStrings","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"name":"isComposeMsgSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_solanaAddress","type":"string"}],"name":"linkAddress","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"linkedSolanaAddresses","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_solanaAddress","type":"string"}],"name":"quoteLinkAddress","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_solanaAddress","type":"string"}],"name":"quoteLinkFee","outputs":[{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"fee","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasLimit","type":"uint256"}],"name":"setGasLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract for linking EVM addresses to Solana addresses via LayerZero V2 This contract sends messages from EVM chains to a Solana OApp","kind":"dev","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"details":"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.","params":{"origin":"The origin information containing the source endpoint and sender address."},"returns":{"_0":"Whether the path has been initialized."}},"getLinkedAddresses(address)":{"details":"Get linked Solana addresses for an EVM address","params":{"_evmAddress":"The EVM address to check"},"returns":{"_0":"Array of linked Solana addresses as bytes"}},"getLinkedAddressesAsStrings(address)":{"details":"Get linked Solana addresses for an EVM address as strings","params":{"_evmAddress":"The EVM address to check"},"returns":{"_0":"Array of linked Solana addresses as strings"}},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"details":"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.","params":{"_sender":"The sender address."},"returns":{"_0":"isSender Is a valid sender."}},"linkAddress(string)":{"details":"Link the sender's EVM address to a Solana address","params":{"_solanaAddress":"Solana address as string"}},"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":{"details":"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.","params":{"_executor":"The address of the executor for the received message.","_extraData":"Additional arbitrary data provided by the corresponding executor.","_guid":"The unique identifier for the received LayerZero message.","_message":"The payload of the received message.","_origin":"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message."}},"nextNonce(uint32,bytes32)":{"details":"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.","returns":{"nonce":"The next nonce."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol implementation.","senderVersion":"The version of the OAppSender.sol implementation."}},"owner()":{"details":"Returns the address of the current owner."},"quoteLinkAddress(string)":{"details":"Quote the fee for linking an address","params":{"_solanaAddress":"Solana address as string"},"returns":{"_0":"Fee required for the cross-chain message"}},"quoteLinkFee(string)":{"details":"Quote the fee for sending a message to Solana","params":{"_solanaAddress":"The Solana address to link"},"returns":{"fee":"The estimated messaging fee"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setGasLimit(uint256)":{"details":"Update the gas limit for cross-chain calls","params":{"_gasLimit":"New gas limit"}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdraw()":{"details":"Withdraw any stuck funds (admin function)"}},"title":"OmnichainIdentityLinker","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1342":{"entryPoint":null,"id":1342,"parameterSlots":0,"returnSlots":0},"@_2318":{"entryPoint":null,"id":2318,"parameterSlots":2,"returnSlots":0},"@_749":{"entryPoint":null,"id":749,"parameterSlots":2,"returnSlots":0},"@_816":{"entryPoint":null,"id":816,"parameterSlots":2,"returnSlots":0},"@_msgSender_2263":{"entryPoint":378,"id":2263,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1430":{"entryPoint":386,"id":1430,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":665,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":688,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":759,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":776,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":619,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":587,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":582,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":639,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1707:19","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:19","statements":[{"nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:19"},"nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:19"},"nodeType":"YulFunctionCall","src":"187:12:19"},"nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:19"},"nodeType":"YulFunctionCall","src":"310:12:19"},"nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nodeType":"YulBlock","src":"379:81:19","statements":[{"nodeType":"YulAssignment","src":"389:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:19"},"nodeType":"YulFunctionCall","src":"400:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:19","type":""}],"src":"334:126:19"},{"body":{"nodeType":"YulBlock","src":"511:51:19","statements":[{"nodeType":"YulAssignment","src":"521:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:19"},"nodeType":"YulFunctionCall","src":"532:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:19","type":""}],"src":"466:96:19"},{"body":{"nodeType":"YulBlock","src":"611:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:19"},"nodeType":"YulFunctionCall","src":"670:12:19"},"nodeType":"YulExpressionStatement","src":"670:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:19"},"nodeType":"YulFunctionCall","src":"641:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:19"},"nodeType":"YulFunctionCall","src":"631:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:19"},"nodeType":"YulFunctionCall","src":"624:43:19"},"nodeType":"YulIf","src":"621:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:19","type":""}],"src":"568:122:19"},{"body":{"nodeType":"YulBlock","src":"759:80:19","statements":[{"nodeType":"YulAssignment","src":"769:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:19"},"nodeType":"YulFunctionCall","src":"778:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:19"},"nodeType":"YulFunctionCall","src":"800:33:19"},"nodeType":"YulExpressionStatement","src":"800:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:19","type":""}],"src":"696:143:19"},{"body":{"nodeType":"YulBlock","src":"939:413:19","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:19"},"nodeType":"YulFunctionCall","src":"987:79:19"},"nodeType":"YulExpressionStatement","src":"987:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:19"},"nodeType":"YulFunctionCall","src":"956:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:19"},"nodeType":"YulFunctionCall","src":"952:32:19"},"nodeType":"YulIf","src":"949:119:19"},{"nodeType":"YulBlock","src":"1078:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:19"},"nodeType":"YulFunctionCall","src":"1164:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:19"},"nodeType":"YulFunctionCall","src":"1132:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:19"}]}]},{"nodeType":"YulBlock","src":"1216:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:19"},"nodeType":"YulFunctionCall","src":"1303:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:19"},"nodeType":"YulFunctionCall","src":"1271:64:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:19","type":""}],"src":"845:507:19"},{"body":{"nodeType":"YulBlock","src":"1423:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1440:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1463:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1445:17:19"},"nodeType":"YulFunctionCall","src":"1445:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1433:6:19"},"nodeType":"YulFunctionCall","src":"1433:37:19"},"nodeType":"YulExpressionStatement","src":"1433:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1411:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1418:3:19","type":""}],"src":"1358:118:19"},{"body":{"nodeType":"YulBlock","src":"1580:124:19","statements":[{"nodeType":"YulAssignment","src":"1590:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1602:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1613:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1598:3:19"},"nodeType":"YulFunctionCall","src":"1598:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1590:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1670:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1694:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:19"},"nodeType":"YulFunctionCall","src":"1679:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1626:43:19"},"nodeType":"YulFunctionCall","src":"1626:71:19"},"nodeType":"YulExpressionStatement","src":"1626:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1552:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1564:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1575:4:19","type":""}],"src":"1482:222:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH3 0x30D40 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x38EE CODESIZE SUB DUP1 PUSH3 0x38EE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3E SWAP2 SWAP1 PUSH3 0x2B0 JUMP JUMPDEST DUP2 DUP2 DUP2 DUP2 PUSH3 0x62 PUSH3 0x56 PUSH3 0x17A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x182 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xFD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB586360400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCA5EB5E1 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13A SWAP2 SWAP1 PUSH3 0x308 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x16A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH3 0x325 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x278 DUP3 PUSH3 0x24B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x28A DUP2 PUSH3 0x26B JUMP JUMPDEST DUP2 EQ PUSH3 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2AA DUP2 PUSH3 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2CA JUMPI PUSH3 0x2C9 PUSH3 0x246 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2DA DUP6 DUP3 DUP7 ADD PUSH3 0x299 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2ED DUP6 DUP3 DUP7 ADD PUSH3 0x299 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x302 DUP2 PUSH3 0x26B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x31F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3583 PUSH3 0x36B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x560 ADD MSTORE DUP2 DUP2 PUSH2 0x95C ADD MSTORE DUP2 DUP2 PUSH2 0xE3D ADD MSTORE DUP2 DUP2 PUSH2 0x1498 ADD MSTORE DUP2 DUP2 PUSH2 0x15A7 ADD MSTORE DUP2 DUP2 PUSH2 0x1882 ADD MSTORE PUSH2 0x197D ADD MSTORE PUSH2 0x3583 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82413EAC GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBF3F3DE9 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBF3F3DE9 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xCA5EB5E1 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xEE7D72B4 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xF68016B7 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xFF7BD03D EQ PUSH2 0x504 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x82413EAC EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x9541618C EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xA6451163 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xBB0B6A53 EQ PUSH2 0x3E4 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x56368126 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x7954C58F EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x7D25A05E EQ PUSH2 0x2C5 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x67BD07A EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x13137D65 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x17442B70 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x306FED73 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x3400288B EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x81E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x21ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x97E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x23AA JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x26F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x274E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST PUSH2 0xEDB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x27C0 JUMP JUMPDEST PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9CE8 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D7 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x91AC5E4F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F7 DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST EQ PUSH2 0x651 JUMPI DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP8 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH32 0xC26BEBCC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x648 SWAP3 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x660 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x101A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x2 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 CALLER PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x690 TIMESTAMP PUSH2 0x132E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP2 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST POP PUSH32 0x15B1A221748794744CD2960E23AB851C4E6B2B22FBABE81F3404E15EEBF0AF16 CALLER DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x764 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x791 PUSH2 0x9CE8 DUP5 DUP5 PUSH1 0x0 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FE PUSH2 0x9CE8 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP CALLER PUSH2 0x1571 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x810 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x81A DUP3 DUP3 PUSH2 0x170B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x826 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x830 PUSH2 0xA8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x853 SWAP1 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x895 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D0 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E4 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF CALLER PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FC TIMESTAMP PUSH2 0x132E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x915 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x94E PUSH2 0x9CE8 DUP4 DUP4 PUSH1 0x0 PUSH2 0x148E JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x986 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x990 PUSH1 0x0 PUSH2 0x176C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x9CA SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F6 SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA43 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA18 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA43 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA26 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xBC4 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xB37 SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB63 SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB85 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB93 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB18 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCDE JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xC51 SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC7D SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCCA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC9F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCCA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCAD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC32 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD00 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD34 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD1F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xD8F JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH2 0xD70 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xD87 SWAP1 PUSH2 0x2D84 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3A JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDBE CALLER PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDCB TIMESTAMP PUSH2 0x132E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xE1F PUSH2 0x9CE8 DUP5 DUP5 PUSH1 0x0 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3B PUSH2 0x168D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCA5EB5E1 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE94 SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xED1 PUSH2 0x168D JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xEE3 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP1 PUSH2 0x2E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5B DUP2 PUSH2 0x176C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x1011 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xF6FF4FB700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x2A PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109A JUMPI PUSH2 0x1099 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10CC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1104 JUMPI PUSH2 0x1103 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1168 JUMPI PUSH2 0x1167 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0x1322 JUMPI DUP3 PUSH1 0x4 DUP6 PUSH1 0xC DUP5 PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x11C5 JUMPI PUSH2 0x11C4 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 PUSH1 0xF PUSH1 0xF8 SHL DUP6 PUSH1 0xC DUP5 PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x128E JUMPI PUSH2 0x128D PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL AND PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x12AA JUMPI PUSH2 0x12A9 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0x12C3 SWAP2 SWAP1 PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x12CF SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x12E0 JUMPI PUSH2 0x12DF PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x131A SWAP1 PUSH2 0x2D84 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x119A JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x13A7 JUMPI DUP1 DUP1 PUSH2 0x1390 SWAP1 PUSH2 0x2D84 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST SWAP2 POP PUSH2 0x137D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13C3 JUMPI PUSH2 0x13C2 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13F5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1482 JUMPI PUSH1 0x1 DUP3 PUSH2 0x140E SWAP2 SWAP1 PUSH2 0x2F34 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x141D SWAP2 SWAP1 PUSH2 0x2F68 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1429 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST SWAP5 POP PUSH2 0x13F9 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1496 PUSH2 0x1CEE JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDC28C58 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F2 DUP10 PUSH2 0xFA5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1527 SWAP3 SWAP2 SWAP1 PUSH2 0x3043 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1543 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1579 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1588 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x187E JUMP JUMPDEST JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2637A450 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1602 DUP13 PUSH2 0xFA5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD GT ISZERO ISZERO DUP2 MSTORE POP DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163E SWAP3 SWAP2 SWAP1 PUSH2 0x3043 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x165C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1681 SWAP2 SWAP1 PUSH2 0x31AF JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1695 PUSH2 0x19C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16B3 PUSH2 0xA8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1700 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x238399D427B947898EDB290F5FF0F9109849B1C3BA196A42E35F00C50A54B98B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1760 SWAP3 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLVALUE EQ PUSH2 0x1876 JUMPI CALLVALUE PUSH1 0x40 MLOAD PUSH32 0x9F70412000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4FE1D94 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x325D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1977 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5373352A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C4 CALLER PUSH32 0x0 DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A53 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x328A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A59 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B21 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1ADD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1ADC SWAP2 SWAP1 PUSH2 0x32ED JUMP JUMPDEST JUMPDEST PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B13 SWAP1 PUSH2 0x338C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B30 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1B39 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1B7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B75 SWAP1 PUSH2 0x341E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1BA7 SWAP2 SWAP1 PUSH2 0x346F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1BFA DUP8 DUP4 DUP4 DUP8 PUSH2 0x1C06 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1C68 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1C60 JUMPI PUSH2 0x1C20 DUP6 PUSH2 0x1C7B JUMP JUMPDEST PUSH2 0x1C5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C56 SWAP1 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x1C72 DUP4 DUP4 PUSH2 0x1C9E JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1CB1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE5 SWAP2 SWAP1 PUSH2 0x352B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D36 PUSH2 0x1CEE JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D55 DUP2 PUSH2 0x1D3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA5 JUMPI PUSH2 0x1DA4 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC1 DUP2 PUSH2 0x1DAE JUMP JUMPDEST DUP2 EQ PUSH2 0x1DCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DDE DUP2 PUSH2 0x1DB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E09 JUMPI PUSH2 0x1E08 PUSH2 0x1DE4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E41 PUSH2 0x1DEE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E74 DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E84 DUP2 PUSH2 0x1E69 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA1 DUP2 PUSH2 0x1E7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED4 DUP11 DUP3 DUP12 ADD PUSH2 0x1D8F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x1EE5 DUP11 DUP3 DUP12 ADD PUSH2 0x1DCF JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1D85 JUMP JUMPDEST JUMPDEST PUSH2 0x1F12 DUP11 DUP3 DUP12 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0xA0 PUSH2 0x1F25 DUP11 DUP3 DUP12 ADD PUSH2 0x1E92 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F46 JUMPI PUSH2 0x1F45 PUSH2 0x1D85 JUMP JUMPDEST JUMPDEST PUSH2 0x1F52 DUP11 DUP3 DUP12 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F80 DUP2 PUSH2 0x1F63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F9B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x1FA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FFD DUP3 PUSH2 0x1FB4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x201C JUMPI PUSH2 0x201B PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F PUSH2 0x1D76 JUMP JUMPDEST SWAP1 POP PUSH2 0x203B DUP3 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x205B JUMPI PUSH2 0x205A PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH2 0x2064 DUP3 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2093 PUSH2 0x208E DUP5 PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x20AF JUMPI PUSH2 0x20AE PUSH2 0x1FAF JUMP JUMPDEST JUMPDEST PUSH2 0x20BA DUP5 DUP3 DUP6 PUSH2 0x2071 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20D7 JUMPI PUSH2 0x20D6 PUSH2 0x1DE4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2080 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2106 JUMPI PUSH2 0x2105 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2124 JUMPI PUSH2 0x2123 PUSH2 0x1D85 JUMP JUMPDEST JUMPDEST PUSH2 0x2130 DUP5 DUP3 DUP6 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2142 DUP2 PUSH2 0x1D3C JUMP JUMPDEST DUP2 EQ PUSH2 0x214D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x215F DUP2 PUSH2 0x2139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x217C JUMPI PUSH2 0x217B PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP6 DUP3 DUP7 ADD PUSH2 0x2150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x219B DUP6 DUP3 DUP7 ADD PUSH2 0x1DCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B8 DUP2 PUSH2 0x21A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x21D4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x21AF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x21E7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x21AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2202 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222D PUSH2 0x2228 PUSH2 0x2223 DUP5 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223F DUP3 PUSH2 0x2212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2251 DUP3 PUSH2 0x2234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2261 DUP2 PUSH2 0x2246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2258 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x228B DUP2 PUSH2 0x21A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22A8 DUP2 PUSH2 0x2282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C5 JUMPI PUSH2 0x22C4 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E4 DUP6 DUP3 DUP7 ADD PUSH2 0x2299 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2328 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x230D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233F DUP3 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x2349 DUP2 DUP6 PUSH2 0x22F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2359 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST PUSH2 0x2362 DUP2 PUSH2 0x1FB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2387 DUP2 DUP5 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23C4 JUMPI PUSH2 0x23C3 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D2 DUP8 DUP3 DUP9 ADD PUSH2 0x1D8F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23F3 JUMPI PUSH2 0x23F2 PUSH2 0x1D85 JUMP JUMPDEST JUMPDEST PUSH2 0x23FF DUP8 DUP3 DUP9 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x80 PUSH2 0x2412 DUP8 DUP3 DUP9 ADD PUSH2 0x1E92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2433 DUP2 PUSH2 0x241E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x244E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x242A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x245D DUP2 PUSH2 0x1E69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2478 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2454 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2494 JUMPI PUSH2 0x2493 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24A2 DUP5 DUP3 DUP6 ADD PUSH2 0x1E92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x24FD DUP2 DUP6 PUSH2 0x24D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x250D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST PUSH2 0x2516 DUP2 PUSH2 0x1FB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252D DUP4 DUP4 PUSH2 0x24E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x254D DUP3 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x2557 DUP2 DUP6 PUSH2 0x24B6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2569 DUP6 PUSH2 0x24C7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x25A5 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2586 DUP6 DUP3 PUSH2 0x2521 JUMP JUMPDEST SWAP5 POP PUSH2 0x2591 DUP4 PUSH2 0x2535 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x256D JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25D1 DUP2 DUP5 PUSH2 0x2542 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262C DUP3 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x2636 DUP2 DUP6 PUSH2 0x2610 JUMP JUMPDEST SWAP4 POP PUSH2 0x2646 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST PUSH2 0x264F DUP2 PUSH2 0x1FB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2666 DUP4 DUP4 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2686 DUP3 PUSH2 0x25D9 JUMP JUMPDEST PUSH2 0x2690 DUP2 DUP6 PUSH2 0x25E4 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x26A2 DUP6 PUSH2 0x25F5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x26DE JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x26BF DUP6 DUP3 PUSH2 0x265A JUMP JUMPDEST SWAP5 POP PUSH2 0x26CA DUP4 PUSH2 0x266E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26A6 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x270A DUP2 DUP5 PUSH2 0x267B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2728 JUMPI PUSH2 0x2727 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2736 DUP5 DUP3 DUP6 ADD PUSH2 0x2150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2748 DUP2 PUSH2 0x1DAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2763 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x273F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2772 DUP2 PUSH2 0x21A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x278D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2769 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A9 JUMPI PUSH2 0x27A8 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27B7 DUP5 DUP3 DUP6 ADD PUSH2 0x2299 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D6 JUMPI PUSH2 0x27D5 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27E4 DUP5 DUP3 DUP6 ADD PUSH2 0x1D8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2802 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x280F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x273F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282C DUP3 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x2836 DUP2 DUP6 PUSH2 0x2816 JUMP JUMPDEST SWAP4 POP PUSH2 0x2846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2888 PUSH1 0x1 DUP4 PUSH2 0x2816 JUMP JUMPDEST SWAP2 POP PUSH2 0x2893 DUP3 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28AA DUP3 DUP7 PUSH2 0x2821 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B5 DUP3 PUSH2 0x287B JUMP JUMPDEST SWAP2 POP PUSH2 0x28C1 DUP3 DUP6 PUSH2 0x2821 JUMP JUMPDEST SWAP2 POP PUSH2 0x28CC DUP3 PUSH2 0x287B JUMP JUMPDEST SWAP2 POP PUSH2 0x28D8 DUP3 DUP5 PUSH2 0x2821 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x292C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x293F JUMPI PUSH2 0x293E PUSH2 0x28E5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x29A7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x296A JUMP JUMPDEST PUSH2 0x29B1 DUP7 DUP4 PUSH2 0x296A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E4 PUSH2 0x29DF PUSH2 0x29DA DUP5 PUSH2 0x21A5 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29FE DUP4 PUSH2 0x29C9 JUMP JUMPDEST PUSH2 0x2A12 PUSH2 0x2A0A DUP3 PUSH2 0x29EB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2977 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2A27 PUSH2 0x2A1A JUMP JUMPDEST PUSH2 0x2A32 DUP2 DUP5 DUP5 PUSH2 0x29F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A56 JUMPI PUSH2 0x2A4B PUSH1 0x0 DUP3 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A38 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A9B JUMPI PUSH2 0x2A6C DUP2 PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2A75 DUP5 PUSH2 0x295A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2A84 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2A98 PUSH2 0x2A90 DUP6 PUSH2 0x295A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2A37 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2AA0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD7 DUP4 DUP4 PUSH2 0x2AAD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AF0 DUP3 PUSH2 0x22EE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B09 JUMPI PUSH2 0x2B08 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH2 0x2B13 DUP3 SLOAD PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x2B1E DUP3 DUP3 DUP6 PUSH2 0x2A5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B51 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B3F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2B49 DUP6 DUP3 PUSH2 0x2ACB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2BB1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2B5F DUP7 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B87 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B62 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2BA4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2BA0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AAD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BCE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2454 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2BE0 DUP2 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BEF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2769 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066656500000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3E PUSH1 0x10 DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C49 DUP3 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C6D DUP2 PUSH2 0x2C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8F PUSH1 0x0 DUP4 PUSH2 0x2C74 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C9A DUP3 PUSH2 0x2C7F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB0 DUP3 PUSH2 0x2C82 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF0 PUSH1 0xF DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFB DUP3 PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D1F DUP2 PUSH2 0x2CE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D8F DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DC1 JUMPI PUSH2 0x2DC0 PUSH2 0x2D55 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E28 PUSH1 0x26 DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E33 DUP3 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E57 DUP2 PUSH2 0x2E1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E69 DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E74 DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E8C JUMPI PUSH2 0x2E8B PUSH2 0x2D55 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9D DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA8 DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2EB6 DUP2 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2ECD JUMPI PUSH2 0x2ECC PUSH2 0x2D55 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F0E DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F19 DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F29 JUMPI PUSH2 0x2F28 PUSH2 0x2ED4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3F DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4A DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2F62 JUMPI PUSH2 0x2F61 PUSH2 0x2D55 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F73 DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F7E DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F8E JUMPI PUSH2 0x2F8D PUSH2 0x2ED4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FA2 DUP2 PUSH2 0x1D3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FB1 DUP2 PUSH2 0x1DAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FC0 DUP2 PUSH2 0x241E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2FDE PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2F99 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2FF1 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2FA8 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x3009 DUP3 DUP3 PUSH2 0x24E8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x3023 DUP3 DUP3 PUSH2 0x24E8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x3038 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2FB7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x305D DUP2 DUP6 PUSH2 0x2FC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x306C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2454 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3087 DUP2 PUSH2 0x2282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30A3 JUMPI PUSH2 0x30A2 PUSH2 0x3073 JUMP JUMPDEST JUMPDEST PUSH2 0x30AD PUSH1 0x40 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30BD DUP5 DUP3 DUP6 ADD PUSH2 0x3078 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x30D1 DUP5 DUP3 DUP6 ADD PUSH2 0x3078 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30F3 JUMPI PUSH2 0x30F2 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3101 DUP5 DUP3 DUP6 ADD PUSH2 0x308D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3119 DUP2 PUSH2 0x1DB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3128 DUP2 PUSH2 0x1F63 JUMP JUMPDEST DUP2 EQ PUSH2 0x3133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3145 DUP2 PUSH2 0x311F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3161 JUMPI PUSH2 0x3160 PUSH2 0x3073 JUMP JUMPDEST JUMPDEST PUSH2 0x316B PUSH1 0x60 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x317B DUP5 DUP3 DUP6 ADD PUSH2 0x310A JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x318F DUP5 DUP3 DUP6 ADD PUSH2 0x3136 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x31A3 DUP5 DUP3 DUP6 ADD PUSH2 0x308D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C5 JUMPI PUSH2 0x31C4 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31D3 DUP5 DUP3 DUP6 ADD PUSH2 0x314B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3212 PUSH1 0x20 DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x321D DUP3 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3241 DUP2 PUSH2 0x3205 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3257 DUP2 PUSH2 0x1E7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3273 JUMPI PUSH2 0x3272 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3281 DUP5 DUP3 DUP6 ADD PUSH2 0x3248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x329F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x32AC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x32B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2769 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x32CA DUP2 PUSH2 0x241E JUMP JUMPDEST DUP2 EQ PUSH2 0x32D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32E7 DUP2 PUSH2 0x32C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3303 JUMPI PUSH2 0x3302 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3311 DUP5 DUP3 DUP6 ADD PUSH2 0x32D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3376 PUSH1 0x2A DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3381 DUP3 PUSH2 0x331A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A5 DUP2 PUSH2 0x3369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3408 PUSH1 0x26 DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3413 DUP3 PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3437 DUP2 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3449 DUP3 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x3453 DUP2 DUP6 PUSH2 0x2C74 JUMP JUMPDEST SWAP4 POP PUSH2 0x3463 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347B DUP3 DUP5 PUSH2 0x343E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34BC PUSH1 0x1D DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x34C7 DUP3 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34EB DUP2 PUSH2 0x34AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FD DUP3 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x3507 DUP2 DUP6 PUSH2 0x2BF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x3517 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST PUSH2 0x3520 DUP2 PUSH2 0x1FB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3545 DUP2 DUP5 PUSH2 0x34F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC ADDMOD ADD MSTORE ADDMOD 0xC3 SELFBALANCE LOG2 0xDE RETURN PUSH21 0xE4A6062AB7CA70869E11AADBFD65F401E0BD98CD48 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"314:7467:18:-:0;;;558:6;532:32;;825:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;882:11;895:9;1024::6;1035;936:32:12;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1079:9:7;1047:42;;;;;;;;;;1125:1;1104:23;;:9;:23;;;1100:53;;1136:17;;;;;;;;;;;;;;1100:53;1163:8;;:20;;;1184:9;1163:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:214;;965:83:6;;825::18;;314:7467;;655:96:17;708:7;734:10;727:17;;655:96;:::o;2426:187:12:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:19:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;314:7467:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@SOLANA_CHAIN_ID_2290":{"entryPoint":1345,"id":2290,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_1872":{"entryPoint":6745,"id":1872,"parameterSlots":2,"returnSlots":0},"@_checkOwner_1373":{"entryPoint":5773,"id":1373,"parameterSlots":0,"returnSlots":0},"@_getPeerOrRevert_880":{"entryPoint":4005,"id":880,"parameterSlots":1,"returnSlots":1},"@_lzReceive_2818":{"entryPoint":4122,"id":2818,"parameterSlots":7,"returnSlots":0},"@_lzSend_1176":{"entryPoint":5489,"id":1176,"parameterSlots":5,"returnSlots":1},"@_msgSender_2263":{"entryPoint":6600,"id":2263,"parameterSlots":0,"returnSlots":1},"@_payLzToken_1233":{"entryPoint":6270,"id":1233,"parameterSlots":1,"returnSlots":0},"@_payNative_1197":{"entryPoint":6192,"id":1197,"parameterSlots":1,"returnSlots":1},"@_quote_1121":{"entryPoint":5262,"id":1121,"parameterSlots":4,"returnSlots":1},"@_revert_2250":{"entryPoint":7326,"id":2250,"parameterSlots":2,"returnSlots":0},"@_setPeer_852":{"entryPoint":5899,"id":852,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_1430":{"entryPoint":5996,"id":1430,"parameterSlots":1,"returnSlots":0},"@addressToString_2528":{"entryPoint":4131,"id":2528,"parameterSlots":1,"returnSlots":1},"@allowInitializePath_967":{"entryPoint":3940,"id":967,"parameterSlots":1,"returnSlots":1},"@endpoint_781":{"entryPoint":2394,"id":781,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_2075":{"entryPoint":6969,"id":2075,"parameterSlots":4,"returnSlots":1},"@functionCall_2011":{"entryPoint":6945,"id":2011,"parameterSlots":3,"returnSlots":1},"@gasLimit_2293":{"entryPoint":3934,"id":2293,"parameterSlots":0,"returnSlots":0},"@getLinkedAddressesAsStrings_2678":{"entryPoint":3023,"id":2678,"parameterSlots":1,"returnSlots":1},"@getLinkedAddresses_2621":{"entryPoint":2743,"id":2621,"parameterSlots":1,"returnSlots":1},"@isComposeMsgSender_949":{"entryPoint":2643,"id":949,"parameterSlots":4,"returnSlots":1},"@isContract_1939":{"entryPoint":7291,"id":1939,"parameterSlots":1,"returnSlots":1},"@linkAddress_2424":{"entryPoint":1656,"id":2424,"parameterSlots":1,"returnSlots":0},"@linkedSolanaAddresses_2298":{"entryPoint":2450,"id":2298,"parameterSlots":0,"returnSlots":0},"@lzReceive_1032":{"entryPoint":1351,"id":1032,"parameterSlots":7,"returnSlots":0},"@nextNonce_980":{"entryPoint":2635,"id":980,"parameterSlots":2,"returnSlots":1},"@oAppVersion_765":{"entryPoint":1641,"id":765,"parameterSlots":0,"returnSlots":2},"@owner_1359":{"entryPoint":2702,"id":1359,"parameterSlots":0,"returnSlots":1},"@peers_785":{"entryPoint":3482,"id":785,"parameterSlots":0,"returnSlots":0},"@quoteLinkAddress_2801":{"entryPoint":3506,"id":2801,"parameterSlots":1,"returnSlots":1},"@quoteLinkFee_2737":{"entryPoint":2268,"id":2737,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_1387":{"entryPoint":2430,"id":1387,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1605":{"entryPoint":6608,"id":1605,"parameterSlots":4,"returnSlots":0},"@setDelegate_895":{"entryPoint":3635,"id":895,"parameterSlots":1,"returnSlots":0},"@setGasLimit_2831":{"entryPoint":3785,"id":2831,"parameterSlots":1,"returnSlots":0},"@setPeer_832":{"entryPoint":2056,"id":832,"parameterSlots":2,"returnSlots":0},"@transferOwnership_1410":{"entryPoint":3803,"id":1410,"parameterSlots":1,"returnSlots":0},"@uint256ToString_2607":{"entryPoint":4910,"id":2607,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_2206":{"entryPoint":7174,"id":2206,"parameterSlots":4,"returnSlots":1},"@withdraw_2857":{"entryPoint":2078,"id":2857,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8320,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":12872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":13016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":12554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":7667,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_string_memory_ptr":{"entryPoint":8386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_MessagingFee_$33_memory_ptr_fromMemory":{"entryPoint":12429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_MessagingReceipt_$28_memory_ptr_fromMemory":{"entryPoint":12619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Origin_$40_calldata_ptr":{"entryPoint":7567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8857,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":12408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":8528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":12598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9342,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":12893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8878,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":8432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_MessagingFee_$33_memory_ptr_fromMemory":{"entryPoint":12509,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_MessagingReceipt_$28_memory_ptr_fromMemory":{"entryPoint":12719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Origin_$40_calldata_ptr":{"entryPoint":10176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Origin_$40_calldata_ptrt_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":7847,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_struct$_Origin_$40_calldata_ptrt_bytes_calldata_ptrt_address":{"entryPoint":9130,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":10131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":10002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_bytes32":{"entryPoint":8549,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":9505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":9818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9300,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9851,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":12215,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9258,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":12200,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":10047,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":9448,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":9012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ILayerZeroEndpointV2_$202_to_t_address_fromStack":{"entryPoint":8792,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":9761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":13554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":11803,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack":{"entryPoint":11491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10363,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":13307,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af_to_t_string_memory_ptr_fromStack":{"entryPoint":11313,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":12805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11394,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":13487,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":13161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_MessagingFee_$33_memory_ptr_to_t_struct$_MessagingFee_$33_memory_ptr_fromStack":{"entryPoint":8638,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_MessagingParams_$20_memory_ptr_to_t_struct$_MessagingParams_$20_memory_ptr_fromStack":{"entryPoint":12230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8623,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10089,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":12185,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":7500,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":8055,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13423,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10398,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11429,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":12938,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":11193,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9655,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":10062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayerZeroEndpointV2_$202__to_t_address__fromStack_reversed":{"entryPoint":8807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11838,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11526,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13342,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11348,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13196,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_MessagingFee_$33_memory_ptr__to_t_struct$_MessagingFee_$33_memory_ptr__fromStack_reversed":{"entryPoint":8685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_MessagingParams_$20_memory_ptr_t_address__to_t_struct$_MessagingParams_$20_memory_ptr_t_address__fromStack_reversed":{"entryPoint":12355,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":7515,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed":{"entryPoint":10221,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":9103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":8070,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":8229,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7542,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8256,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":9415,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9717,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":10565,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":9387,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9689,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8942,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9733,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":9525,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9838,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9398,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9700,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":9431,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8953,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11380,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":9744,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11255,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10262,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11870,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":12035,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11922,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12084,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":10842,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":7785,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9246,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7598,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7753,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8613,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":7484,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":8035,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10807,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_ILayerZeroEndpointV2_$202_to_t_address":{"entryPoint":8774,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8756,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8722,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":10697,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":10983,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8305,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8970,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":10586,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10516,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10955,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8180,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":8712,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11652,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10925,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":12136,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11605,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11988,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10469,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11558,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8133,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10731,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":7657,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7652,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":7562,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":12403,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":7662,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8111,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7557,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7552,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8116,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":10602,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10912,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10783,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":11724,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51":{"entryPoint":11450,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb":{"entryPoint":10322,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":13228,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af":{"entryPoint":11272,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":12764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":11391,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":13446,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":13082,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":10615,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10741,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7803,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12993,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7608,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8834,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":8505,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":12575,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10778,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:48245:19","statements":[{"body":{"nodeType":"YulBlock","src":"51:49:19","statements":[{"nodeType":"YulAssignment","src":"61:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"83:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:19"},"nodeType":"YulFunctionCall","src":"72:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:19","type":""}],"src":"7:93:19"},{"body":{"nodeType":"YulBlock","src":"169:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"186:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"208:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"191:16:19"},"nodeType":"YulFunctionCall","src":"191:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"179:6:19"},"nodeType":"YulFunctionCall","src":"179:36:19"},"nodeType":"YulExpressionStatement","src":"179:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"164:3:19","type":""}],"src":"106:115:19"},{"body":{"nodeType":"YulBlock","src":"323:122:19","statements":[{"nodeType":"YulAssignment","src":"333:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"345:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"356:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"341:3:19"},"nodeType":"YulFunctionCall","src":"341:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"333:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"411:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"424:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"435:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"420:3:19"},"nodeType":"YulFunctionCall","src":"420:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"369:41:19"},"nodeType":"YulFunctionCall","src":"369:69:19"},"nodeType":"YulExpressionStatement","src":"369:69:19"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"295:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"307:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"318:4:19","type":""}],"src":"227:218:19"},{"body":{"nodeType":"YulBlock","src":"491:35:19","statements":[{"nodeType":"YulAssignment","src":"501:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"517:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"511:5:19"},"nodeType":"YulFunctionCall","src":"511:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"501:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"484:6:19","type":""}],"src":"451:75:19"},{"body":{"nodeType":"YulBlock","src":"621:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"631:6:19"},"nodeType":"YulFunctionCall","src":"631:12:19"},"nodeType":"YulExpressionStatement","src":"631:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"532:117:19"},{"body":{"nodeType":"YulBlock","src":"744:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"761:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"764:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"754:6:19"},"nodeType":"YulFunctionCall","src":"754:12:19"},"nodeType":"YulExpressionStatement","src":"754:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"655:117:19"},{"body":{"nodeType":"YulBlock","src":"867:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"884:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"887:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"877:6:19"},"nodeType":"YulFunctionCall","src":"877:12:19"},"nodeType":"YulExpressionStatement","src":"877:12:19"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"778:117:19"},{"body":{"nodeType":"YulBlock","src":"998:152:19","statements":[{"body":{"nodeType":"YulBlock","src":"1037:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"1039:77:19"},"nodeType":"YulFunctionCall","src":"1039:79:19"},"nodeType":"YulExpressionStatement","src":"1039:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1019:3:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1024:6:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1015:3:19"},"nodeType":"YulFunctionCall","src":"1015:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"1033:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1011:3:19"},"nodeType":"YulFunctionCall","src":"1011:25:19"},"nodeType":"YulIf","src":"1008:112:19"},{"nodeType":"YulAssignment","src":"1129:15:19","value":{"name":"offset","nodeType":"YulIdentifier","src":"1138:6:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:19"}]}]},"name":"abi_decode_t_struct$_Origin_$40_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"976:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"984:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"992:5:19","type":""}],"src":"922:228:19"},{"body":{"nodeType":"YulBlock","src":"1201:32:19","statements":[{"nodeType":"YulAssignment","src":"1211:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"1222:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1211:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1183:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1193:7:19","type":""}],"src":"1156:77:19"},{"body":{"nodeType":"YulBlock","src":"1282:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"1339:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1351:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1341:6:19"},"nodeType":"YulFunctionCall","src":"1341:12:19"},"nodeType":"YulExpressionStatement","src":"1341:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1305:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1330:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1312:17:19"},"nodeType":"YulFunctionCall","src":"1312:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1302:2:19"},"nodeType":"YulFunctionCall","src":"1302:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1295:6:19"},"nodeType":"YulFunctionCall","src":"1295:43:19"},"nodeType":"YulIf","src":"1292:63:19"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1275:5:19","type":""}],"src":"1239:122:19"},{"body":{"nodeType":"YulBlock","src":"1419:87:19","statements":[{"nodeType":"YulAssignment","src":"1429:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1451:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1438:12:19"},"nodeType":"YulFunctionCall","src":"1438:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1429:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1494:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1467:26:19"},"nodeType":"YulFunctionCall","src":"1467:33:19"},"nodeType":"YulExpressionStatement","src":"1467:33:19"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1397:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1405:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1413:5:19","type":""}],"src":"1367:139:19"},{"body":{"nodeType":"YulBlock","src":"1601:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1618:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1621:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1611:6:19"},"nodeType":"YulFunctionCall","src":"1611:12:19"},"nodeType":"YulExpressionStatement","src":"1611:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1512:117:19"},{"body":{"nodeType":"YulBlock","src":"1724:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1741:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1744:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1734:6:19"},"nodeType":"YulFunctionCall","src":"1734:12:19"},"nodeType":"YulExpressionStatement","src":"1734:12:19"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1635:117:19"},{"body":{"nodeType":"YulBlock","src":"1847:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1864:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1867:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1857:6:19"},"nodeType":"YulFunctionCall","src":"1857:12:19"},"nodeType":"YulExpressionStatement","src":"1857:12:19"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1758:117:19"},{"body":{"nodeType":"YulBlock","src":"1968:478:19","statements":[{"body":{"nodeType":"YulBlock","src":"2017:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2019:77:19"},"nodeType":"YulFunctionCall","src":"2019:79:19"},"nodeType":"YulExpressionStatement","src":"2019:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1996:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2004:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1992:3:19"},"nodeType":"YulFunctionCall","src":"1992:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"2011:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1988:3:19"},"nodeType":"YulFunctionCall","src":"1988:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1981:6:19"},"nodeType":"YulFunctionCall","src":"1981:35:19"},"nodeType":"YulIf","src":"1978:122:19"},{"nodeType":"YulAssignment","src":"2109:30:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2132:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2119:12:19"},"nodeType":"YulFunctionCall","src":"2119:20:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2109:6:19"}]},{"body":{"nodeType":"YulBlock","src":"2182:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2184:77:19"},"nodeType":"YulFunctionCall","src":"2184:79:19"},"nodeType":"YulExpressionStatement","src":"2184:79:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2154:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2162:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2151:2:19"},"nodeType":"YulFunctionCall","src":"2151:30:19"},"nodeType":"YulIf","src":"2148:117:19"},{"nodeType":"YulAssignment","src":"2274:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2290:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2298:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2286:3:19"},"nodeType":"YulFunctionCall","src":"2286:17:19"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2274:8:19"}]},{"body":{"nodeType":"YulBlock","src":"2357:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2359:77:19"},"nodeType":"YulFunctionCall","src":"2359:79:19"},"nodeType":"YulExpressionStatement","src":"2359:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2322:8:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2336:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2344:4:19","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2332:3:19"},"nodeType":"YulFunctionCall","src":"2332:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2318:3:19"},"nodeType":"YulFunctionCall","src":"2318:32:19"},{"name":"end","nodeType":"YulIdentifier","src":"2352:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2315:2:19"},"nodeType":"YulFunctionCall","src":"2315:41:19"},"nodeType":"YulIf","src":"2312:128:19"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1935:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:19","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1951:8:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"1961:6:19","type":""}],"src":"1894:552:19"},{"body":{"nodeType":"YulBlock","src":"2497:81:19","statements":[{"nodeType":"YulAssignment","src":"2507:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2522:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2529:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2518:3:19"},"nodeType":"YulFunctionCall","src":"2518:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2507:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2479:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2489:7:19","type":""}],"src":"2452:126:19"},{"body":{"nodeType":"YulBlock","src":"2629:51:19","statements":[{"nodeType":"YulAssignment","src":"2639:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2668:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2650:17:19"},"nodeType":"YulFunctionCall","src":"2650:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2639:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2611:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2621:7:19","type":""}],"src":"2584:96:19"},{"body":{"nodeType":"YulBlock","src":"2729:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"2786:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2795:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2798:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2788:6:19"},"nodeType":"YulFunctionCall","src":"2788:12:19"},"nodeType":"YulExpressionStatement","src":"2788:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2752:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2777:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2759:17:19"},"nodeType":"YulFunctionCall","src":"2759:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2749:2:19"},"nodeType":"YulFunctionCall","src":"2749:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2742:6:19"},"nodeType":"YulFunctionCall","src":"2742:43:19"},"nodeType":"YulIf","src":"2739:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2722:5:19","type":""}],"src":"2686:122:19"},{"body":{"nodeType":"YulBlock","src":"2866:87:19","statements":[{"nodeType":"YulAssignment","src":"2876:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2898:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2885:12:19"},"nodeType":"YulFunctionCall","src":"2885:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2876:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2941:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2914:26:19"},"nodeType":"YulFunctionCall","src":"2914:33:19"},"nodeType":"YulExpressionStatement","src":"2914:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2844:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2852:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2860:5:19","type":""}],"src":"2814:139:19"},{"body":{"nodeType":"YulBlock","src":"3155:1161:19","statements":[{"body":{"nodeType":"YulBlock","src":"3202:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3204:77:19"},"nodeType":"YulFunctionCall","src":"3204:79:19"},"nodeType":"YulExpressionStatement","src":"3204:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3176:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3185:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3172:3:19"},"nodeType":"YulFunctionCall","src":"3172:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3197:3:19","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3168:3:19"},"nodeType":"YulFunctionCall","src":"3168:33:19"},"nodeType":"YulIf","src":"3165:120:19"},{"nodeType":"YulBlock","src":"3295:141:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3310:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3324:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3314:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3339:87:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3398:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3409:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3394:3:19"},"nodeType":"YulFunctionCall","src":"3394:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3418:7:19"}],"functionName":{"name":"abi_decode_t_struct$_Origin_$40_calldata_ptr","nodeType":"YulIdentifier","src":"3349:44:19"},"nodeType":"YulFunctionCall","src":"3349:77:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3339:6:19"}]}]},{"nodeType":"YulBlock","src":"3446:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3461:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3475:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3465:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3491:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3526:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3537:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3522:3:19"},"nodeType":"YulFunctionCall","src":"3522:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3546:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3501:20:19"},"nodeType":"YulFunctionCall","src":"3501:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3491:6:19"}]}]},{"nodeType":"YulBlock","src":"3574:298:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3589:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3620:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3631:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:19"},"nodeType":"YulFunctionCall","src":"3616:19:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3603:12:19"},"nodeType":"YulFunctionCall","src":"3603:33:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3593:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3683:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3685:77:19"},"nodeType":"YulFunctionCall","src":"3685:79:19"},"nodeType":"YulExpressionStatement","src":"3685:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3655:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3663:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3652:2:19"},"nodeType":"YulFunctionCall","src":"3652:30:19"},"nodeType":"YulIf","src":"3649:117:19"},{"nodeType":"YulAssignment","src":"3780:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3834:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3845:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3830:3:19"},"nodeType":"YulFunctionCall","src":"3830:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3854:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3798:31:19"},"nodeType":"YulFunctionCall","src":"3798:64:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3780:6:19"},{"name":"value3","nodeType":"YulIdentifier","src":"3788:6:19"}]}]},{"nodeType":"YulBlock","src":"3882:119:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3897:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3911:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3901:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3928:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3963:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3974:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3959:3:19"},"nodeType":"YulFunctionCall","src":"3959:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3983:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3938:20:19"},"nodeType":"YulFunctionCall","src":"3938:53:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3928:6:19"}]}]},{"nodeType":"YulBlock","src":"4011:298:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4026:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4057:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4068:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4053:3:19"},"nodeType":"YulFunctionCall","src":"4053:19:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4040:12:19"},"nodeType":"YulFunctionCall","src":"4040:33:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4030:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4120:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4122:77:19"},"nodeType":"YulFunctionCall","src":"4122:79:19"},"nodeType":"YulExpressionStatement","src":"4122:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4092:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4100:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4089:2:19"},"nodeType":"YulFunctionCall","src":"4089:30:19"},"nodeType":"YulIf","src":"4086:117:19"},{"nodeType":"YulAssignment","src":"4217:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4271:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4282:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4267:3:19"},"nodeType":"YulFunctionCall","src":"4267:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4291:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"4235:31:19"},"nodeType":"YulFunctionCall","src":"4235:64:19"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4217:6:19"},{"name":"value6","nodeType":"YulIdentifier","src":"4225:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_Origin_$40_calldata_ptrt_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3077:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3088:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3100:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3108:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3116:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3124:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3132:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3140:6:19","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3148:6:19","type":""}],"src":"2959:1357:19"},{"body":{"nodeType":"YulBlock","src":"4366:57:19","statements":[{"nodeType":"YulAssignment","src":"4376:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4391:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4398:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4387:3:19"},"nodeType":"YulFunctionCall","src":"4387:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4376:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4348:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4358:7:19","type":""}],"src":"4322:101:19"},{"body":{"nodeType":"YulBlock","src":"4492:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4509:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4531:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"4514:16:19"},"nodeType":"YulFunctionCall","src":"4514:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4502:6:19"},"nodeType":"YulFunctionCall","src":"4502:36:19"},"nodeType":"YulExpressionStatement","src":"4502:36:19"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4480:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4487:3:19","type":""}],"src":"4429:115:19"},{"body":{"nodeType":"YulBlock","src":"4672:202:19","statements":[{"nodeType":"YulAssignment","src":"4682:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4694:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4705:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4690:3:19"},"nodeType":"YulFunctionCall","src":"4690:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4682:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4760:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4773:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4784:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4769:3:19"},"nodeType":"YulFunctionCall","src":"4769:17:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"4718:41:19"},"nodeType":"YulFunctionCall","src":"4718:69:19"},"nodeType":"YulExpressionStatement","src":"4718:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4839:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4852:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4863:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4848:3:19"},"nodeType":"YulFunctionCall","src":"4848:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"4797:41:19"},"nodeType":"YulFunctionCall","src":"4797:70:19"},"nodeType":"YulExpressionStatement","src":"4797:70:19"}]},"name":"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4636:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4648:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4656:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4667:4:19","type":""}],"src":"4550:324:19"},{"body":{"nodeType":"YulBlock","src":"4969:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4986:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4989:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4979:6:19"},"nodeType":"YulFunctionCall","src":"4979:12:19"},"nodeType":"YulExpressionStatement","src":"4979:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"4880:117:19"},{"body":{"nodeType":"YulBlock","src":"5051:54:19","statements":[{"nodeType":"YulAssignment","src":"5061:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5079:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5086:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5075:3:19"},"nodeType":"YulFunctionCall","src":"5075:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5095:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5091:3:19"},"nodeType":"YulFunctionCall","src":"5091:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5071:3:19"},"nodeType":"YulFunctionCall","src":"5071:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5061:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5034:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5044:6:19","type":""}],"src":"5003:102:19"},{"body":{"nodeType":"YulBlock","src":"5139:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5156:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5159:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5149:6:19"},"nodeType":"YulFunctionCall","src":"5149:88:19"},"nodeType":"YulExpressionStatement","src":"5149:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5253:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5256:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5246:6:19"},"nodeType":"YulFunctionCall","src":"5246:15:19"},"nodeType":"YulExpressionStatement","src":"5246:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5277:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5280:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5270:6:19"},"nodeType":"YulFunctionCall","src":"5270:15:19"},"nodeType":"YulExpressionStatement","src":"5270:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5111:180:19"},{"body":{"nodeType":"YulBlock","src":"5340:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5350:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5372:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5402:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5380:21:19"},"nodeType":"YulFunctionCall","src":"5380:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5368:3:19"},"nodeType":"YulFunctionCall","src":"5368:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5354:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"5519:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5521:16:19"},"nodeType":"YulFunctionCall","src":"5521:18:19"},"nodeType":"YulExpressionStatement","src":"5521:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5462:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"5474:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5459:2:19"},"nodeType":"YulFunctionCall","src":"5459:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5498:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5510:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5495:2:19"},"nodeType":"YulFunctionCall","src":"5495:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5456:2:19"},"nodeType":"YulFunctionCall","src":"5456:62:19"},"nodeType":"YulIf","src":"5453:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5557:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5561:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5550:6:19"},"nodeType":"YulFunctionCall","src":"5550:22:19"},"nodeType":"YulExpressionStatement","src":"5550:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5326:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"5334:4:19","type":""}],"src":"5297:281:19"},{"body":{"nodeType":"YulBlock","src":"5625:88:19","statements":[{"nodeType":"YulAssignment","src":"5635:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5645:18:19"},"nodeType":"YulFunctionCall","src":"5645:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5635:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5694:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"5702:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5674:19:19"},"nodeType":"YulFunctionCall","src":"5674:33:19"},"nodeType":"YulExpressionStatement","src":"5674:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5609:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5618:6:19","type":""}],"src":"5584:129:19"},{"body":{"nodeType":"YulBlock","src":"5786:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"5891:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5893:16:19"},"nodeType":"YulFunctionCall","src":"5893:18:19"},"nodeType":"YulExpressionStatement","src":"5893:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5863:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5871:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5860:2:19"},"nodeType":"YulFunctionCall","src":"5860:30:19"},"nodeType":"YulIf","src":"5857:56:19"},{"nodeType":"YulAssignment","src":"5923:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5953:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5931:21:19"},"nodeType":"YulFunctionCall","src":"5931:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5923:4:19"}]},{"nodeType":"YulAssignment","src":"5997:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6009:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"6015:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6005:3:19"},"nodeType":"YulFunctionCall","src":"6005:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5997:4:19"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5770:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5781:4:19","type":""}],"src":"5719:308:19"},{"body":{"nodeType":"YulBlock","src":"6097:82:19","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6120:3:19"},{"name":"src","nodeType":"YulIdentifier","src":"6125:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6130:6:19"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6107:12:19"},"nodeType":"YulFunctionCall","src":"6107:30:19"},"nodeType":"YulExpressionStatement","src":"6107:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6157:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6162:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6153:3:19"},"nodeType":"YulFunctionCall","src":"6153:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"6171:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6146:6:19"},"nodeType":"YulFunctionCall","src":"6146:27:19"},"nodeType":"YulExpressionStatement","src":"6146:27:19"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6079:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6084:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"6089:6:19","type":""}],"src":"6033:146:19"},{"body":{"nodeType":"YulBlock","src":"6269:341:19","statements":[{"nodeType":"YulAssignment","src":"6279:75:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6346:6:19"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6304:41:19"},"nodeType":"YulFunctionCall","src":"6304:49:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6288:15:19"},"nodeType":"YulFunctionCall","src":"6288:66:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6279:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6370:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"6377:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:19"},"nodeType":"YulFunctionCall","src":"6363:21:19"},"nodeType":"YulExpressionStatement","src":"6363:21:19"},{"nodeType":"YulVariableDeclaration","src":"6393:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6408:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6415:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6404:3:19"},"nodeType":"YulFunctionCall","src":"6404:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6397:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6458:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"6460:77:19"},"nodeType":"YulFunctionCall","src":"6460:79:19"},"nodeType":"YulExpressionStatement","src":"6460:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6439:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6444:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6435:3:19"},"nodeType":"YulFunctionCall","src":"6435:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"6453:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6432:2:19"},"nodeType":"YulFunctionCall","src":"6432:25:19"},"nodeType":"YulIf","src":"6429:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6587:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"6592:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6597:6:19"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6550:36:19"},"nodeType":"YulFunctionCall","src":"6550:54:19"},"nodeType":"YulExpressionStatement","src":"6550:54:19"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6242:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"6247:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"6255:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6263:5:19","type":""}],"src":"6185:425:19"},{"body":{"nodeType":"YulBlock","src":"6692:278:19","statements":[{"body":{"nodeType":"YulBlock","src":"6741:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6743:77:19"},"nodeType":"YulFunctionCall","src":"6743:79:19"},"nodeType":"YulExpressionStatement","src":"6743:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6720:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6728:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6716:3:19"},"nodeType":"YulFunctionCall","src":"6716:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"6735:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6712:3:19"},"nodeType":"YulFunctionCall","src":"6712:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6705:6:19"},"nodeType":"YulFunctionCall","src":"6705:35:19"},"nodeType":"YulIf","src":"6702:122:19"},{"nodeType":"YulVariableDeclaration","src":"6833:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6860:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6847:12:19"},"nodeType":"YulFunctionCall","src":"6847:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6837:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6876:88:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6937:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6945:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6933:3:19"},"nodeType":"YulFunctionCall","src":"6933:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"6952:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"6960:3:19"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6885:47:19"},"nodeType":"YulFunctionCall","src":"6885:79:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6876:5:19"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6670:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"6678:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6686:5:19","type":""}],"src":"6630:340:19"},{"body":{"nodeType":"YulBlock","src":"7052:433:19","statements":[{"body":{"nodeType":"YulBlock","src":"7098:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7100:77:19"},"nodeType":"YulFunctionCall","src":"7100:79:19"},"nodeType":"YulExpressionStatement","src":"7100:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7073:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7082:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7069:3:19"},"nodeType":"YulFunctionCall","src":"7069:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"7094:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7065:3:19"},"nodeType":"YulFunctionCall","src":"7065:32:19"},"nodeType":"YulIf","src":"7062:119:19"},{"nodeType":"YulBlock","src":"7191:287:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7206:45:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7237:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7248:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7233:3:19"},"nodeType":"YulFunctionCall","src":"7233:17:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7220:12:19"},"nodeType":"YulFunctionCall","src":"7220:31:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7210:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7298:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7300:77:19"},"nodeType":"YulFunctionCall","src":"7300:79:19"},"nodeType":"YulExpressionStatement","src":"7300:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7270:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"7278:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7267:2:19"},"nodeType":"YulFunctionCall","src":"7267:30:19"},"nodeType":"YulIf","src":"7264:117:19"},{"nodeType":"YulAssignment","src":"7395:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7440:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7451:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7436:3:19"},"nodeType":"YulFunctionCall","src":"7436:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7460:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7405:30:19"},"nodeType":"YulFunctionCall","src":"7405:63:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7395:6:19"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7022:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7033:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7045:6:19","type":""}],"src":"6976:509:19"},{"body":{"nodeType":"YulBlock","src":"7533:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"7589:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7598:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7601:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7591:6:19"},"nodeType":"YulFunctionCall","src":"7591:12:19"},"nodeType":"YulExpressionStatement","src":"7591:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7556:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7580:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"7563:16:19"},"nodeType":"YulFunctionCall","src":"7563:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7553:2:19"},"nodeType":"YulFunctionCall","src":"7553:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7546:6:19"},"nodeType":"YulFunctionCall","src":"7546:42:19"},"nodeType":"YulIf","src":"7543:62:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7526:5:19","type":""}],"src":"7491:120:19"},{"body":{"nodeType":"YulBlock","src":"7668:86:19","statements":[{"nodeType":"YulAssignment","src":"7678:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7700:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7687:12:19"},"nodeType":"YulFunctionCall","src":"7687:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7678:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7742:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"7716:25:19"},"nodeType":"YulFunctionCall","src":"7716:32:19"},"nodeType":"YulExpressionStatement","src":"7716:32:19"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7646:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"7654:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7662:5:19","type":""}],"src":"7617:137:19"},{"body":{"nodeType":"YulBlock","src":"7842:390:19","statements":[{"body":{"nodeType":"YulBlock","src":"7888:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7890:77:19"},"nodeType":"YulFunctionCall","src":"7890:79:19"},"nodeType":"YulExpressionStatement","src":"7890:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7863:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7872:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7859:3:19"},"nodeType":"YulFunctionCall","src":"7859:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"7884:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7855:3:19"},"nodeType":"YulFunctionCall","src":"7855:32:19"},"nodeType":"YulIf","src":"7852:119:19"},{"nodeType":"YulBlock","src":"7981:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7996:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8010:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8000:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8025:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8059:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8070:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8055:3:19"},"nodeType":"YulFunctionCall","src":"8055:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8079:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"8035:19:19"},"nodeType":"YulFunctionCall","src":"8035:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8025:6:19"}]}]},{"nodeType":"YulBlock","src":"8107:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8122:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8136:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8126:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8152:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8187:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8198:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8183:3:19"},"nodeType":"YulFunctionCall","src":"8183:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8207:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8162:20:19"},"nodeType":"YulFunctionCall","src":"8162:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8152:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7804:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7815:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7827:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7835:6:19","type":""}],"src":"7760:472:19"},{"body":{"nodeType":"YulBlock","src":"8283:32:19","statements":[{"nodeType":"YulAssignment","src":"8293:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"8304:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8293:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8265:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8275:7:19","type":""}],"src":"8238:77:19"},{"body":{"nodeType":"YulBlock","src":"8376:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8393:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8416:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8398:17:19"},"nodeType":"YulFunctionCall","src":"8398:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8386:6:19"},"nodeType":"YulFunctionCall","src":"8386:37:19"},"nodeType":"YulExpressionStatement","src":"8386:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8364:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8371:3:19","type":""}],"src":"8321:108:19"},{"body":{"nodeType":"YulBlock","src":"8607:402:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8617:26:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8633:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8638:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8629:3:19"},"nodeType":"YulFunctionCall","src":"8629:14:19"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8621:4:19","type":""}]},{"nodeType":"YulBlock","src":"8653:169:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8693:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8723:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8730:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8719:3:19"},"nodeType":"YulFunctionCall","src":"8719:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8713:5:19"},"nodeType":"YulFunctionCall","src":"8713:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8697:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8783:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8801:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8806:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8797:3:19"},"nodeType":"YulFunctionCall","src":"8797:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8749:33:19"},"nodeType":"YulFunctionCall","src":"8749:63:19"},"nodeType":"YulExpressionStatement","src":"8749:63:19"}]},{"nodeType":"YulBlock","src":"8832:170:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8873:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8903:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8910:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8899:3:19"},"nodeType":"YulFunctionCall","src":"8899:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8893:5:19"},"nodeType":"YulFunctionCall","src":"8893:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8877:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8963:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8981:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8986:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8977:3:19"},"nodeType":"YulFunctionCall","src":"8977:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8929:33:19"},"nodeType":"YulFunctionCall","src":"8929:63:19"},"nodeType":"YulExpressionStatement","src":"8929:63:19"}]}]},"name":"abi_encode_t_struct$_MessagingFee_$33_memory_ptr_to_t_struct$_MessagingFee_$33_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8594:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8601:3:19","type":""}],"src":"8485:524:19"},{"body":{"nodeType":"YulBlock","src":"9169:180:19","statements":[{"nodeType":"YulAssignment","src":"9179:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9191:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9202:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9187:3:19"},"nodeType":"YulFunctionCall","src":"9187:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9179:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9315:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9328:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9339:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9324:3:19"},"nodeType":"YulFunctionCall","src":"9324:17:19"}],"functionName":{"name":"abi_encode_t_struct$_MessagingFee_$33_memory_ptr_to_t_struct$_MessagingFee_$33_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9215:99:19"},"nodeType":"YulFunctionCall","src":"9215:127:19"},"nodeType":"YulExpressionStatement","src":"9215:127:19"}]},"name":"abi_encode_tuple_t_struct$_MessagingFee_$33_memory_ptr__to_t_struct$_MessagingFee_$33_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9141:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9153:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9164:4:19","type":""}],"src":"9015:334:19"},{"body":{"nodeType":"YulBlock","src":"9387:28:19","statements":[{"nodeType":"YulAssignment","src":"9397:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"9404:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9397:3:19"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9373:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9383:3:19","type":""}],"src":"9355:60:19"},{"body":{"nodeType":"YulBlock","src":"9481:82:19","statements":[{"nodeType":"YulAssignment","src":"9491:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9549:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9531:17:19"},"nodeType":"YulFunctionCall","src":"9531:24:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9522:8:19"},"nodeType":"YulFunctionCall","src":"9522:34:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9504:17:19"},"nodeType":"YulFunctionCall","src":"9504:53:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9491:9:19"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9461:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9471:9:19","type":""}],"src":"9421:142:19"},{"body":{"nodeType":"YulBlock","src":"9629:66:19","statements":[{"nodeType":"YulAssignment","src":"9639:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9683:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"9652:30:19"},"nodeType":"YulFunctionCall","src":"9652:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9639:9:19"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9609:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9619:9:19","type":""}],"src":"9569:126:19"},{"body":{"nodeType":"YulBlock","src":"9789:66:19","statements":[{"nodeType":"YulAssignment","src":"9799:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9843:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"9812:30:19"},"nodeType":"YulFunctionCall","src":"9812:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9799:9:19"}]}]},"name":"convert_t_contract$_ILayerZeroEndpointV2_$202_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9769:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9779:9:19","type":""}],"src":"9701:154:19"},{"body":{"nodeType":"YulBlock","src":"9954:94:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9971:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10035:5:19"}],"functionName":{"name":"convert_t_contract$_ILayerZeroEndpointV2_$202_to_t_address","nodeType":"YulIdentifier","src":"9976:58:19"},"nodeType":"YulFunctionCall","src":"9976:65:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9964:6:19"},"nodeType":"YulFunctionCall","src":"9964:78:19"},"nodeType":"YulExpressionStatement","src":"9964:78:19"}]},"name":"abi_encode_t_contract$_ILayerZeroEndpointV2_$202_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9942:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9949:3:19","type":""}],"src":"9861:187:19"},{"body":{"nodeType":"YulBlock","src":"10180:152:19","statements":[{"nodeType":"YulAssignment","src":"10190:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10202:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10213:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10198:3:19"},"nodeType":"YulFunctionCall","src":"10198:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10190:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10298:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10311:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10322:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10307:3:19"},"nodeType":"YulFunctionCall","src":"10307:17:19"}],"functionName":{"name":"abi_encode_t_contract$_ILayerZeroEndpointV2_$202_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10226:71:19"},"nodeType":"YulFunctionCall","src":"10226:99:19"},"nodeType":"YulExpressionStatement","src":"10226:99:19"}]},"name":"abi_encode_tuple_t_contract$_ILayerZeroEndpointV2_$202__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10152:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10164:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10175:4:19","type":""}],"src":"10054:278:19"},{"body":{"nodeType":"YulBlock","src":"10381:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"10438:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10447:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10450:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10440:6:19"},"nodeType":"YulFunctionCall","src":"10440:12:19"},"nodeType":"YulExpressionStatement","src":"10440:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10404:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10429:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10411:17:19"},"nodeType":"YulFunctionCall","src":"10411:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10401:2:19"},"nodeType":"YulFunctionCall","src":"10401:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10394:6:19"},"nodeType":"YulFunctionCall","src":"10394:43:19"},"nodeType":"YulIf","src":"10391:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10374:5:19","type":""}],"src":"10338:122:19"},{"body":{"nodeType":"YulBlock","src":"10518:87:19","statements":[{"nodeType":"YulAssignment","src":"10528:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10550:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10537:12:19"},"nodeType":"YulFunctionCall","src":"10537:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10528:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10593:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"10566:26:19"},"nodeType":"YulFunctionCall","src":"10566:33:19"},"nodeType":"YulExpressionStatement","src":"10566:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10496:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"10504:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10512:5:19","type":""}],"src":"10466:139:19"},{"body":{"nodeType":"YulBlock","src":"10694:391:19","statements":[{"body":{"nodeType":"YulBlock","src":"10740:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10742:77:19"},"nodeType":"YulFunctionCall","src":"10742:79:19"},"nodeType":"YulExpressionStatement","src":"10742:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10715:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"10724:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10711:3:19"},"nodeType":"YulFunctionCall","src":"10711:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"10736:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10707:3:19"},"nodeType":"YulFunctionCall","src":"10707:32:19"},"nodeType":"YulIf","src":"10704:119:19"},{"nodeType":"YulBlock","src":"10833:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10848:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10862:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10852:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10877:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10912:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10923:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:19"},"nodeType":"YulFunctionCall","src":"10908:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10932:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10887:20:19"},"nodeType":"YulFunctionCall","src":"10887:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10877:6:19"}]}]},{"nodeType":"YulBlock","src":"10960:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10975:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10989:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10979:6:19","type":""}]},{"nodeType":"YulAssignment","src":"11005:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11040:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"11051:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11036:3:19"},"nodeType":"YulFunctionCall","src":"11036:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11060:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11015:20:19"},"nodeType":"YulFunctionCall","src":"11015:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11005:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10656:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10667:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10679:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10687:6:19","type":""}],"src":"10611:474:19"},{"body":{"nodeType":"YulBlock","src":"11149:40:19","statements":[{"nodeType":"YulAssignment","src":"11160:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11176:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11170:5:19"},"nodeType":"YulFunctionCall","src":"11170:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11160:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11132:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11142:6:19","type":""}],"src":"11091:98:19"},{"body":{"nodeType":"YulBlock","src":"11290:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11307:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"11312:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11300:6:19"},"nodeType":"YulFunctionCall","src":"11300:19:19"},"nodeType":"YulExpressionStatement","src":"11300:19:19"},{"nodeType":"YulAssignment","src":"11328:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11347:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11352:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11343:3:19"},"nodeType":"YulFunctionCall","src":"11343:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11328:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11262:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"11267:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11278:11:19","type":""}],"src":"11195:168:19"},{"body":{"nodeType":"YulBlock","src":"11431:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"11441:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"11450:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11445:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"11510:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11535:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"11540:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11531:3:19"},"nodeType":"YulFunctionCall","src":"11531:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11554:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"11559:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11550:3:19"},"nodeType":"YulFunctionCall","src":"11550:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11544:5:19"},"nodeType":"YulFunctionCall","src":"11544:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11524:6:19"},"nodeType":"YulFunctionCall","src":"11524:39:19"},"nodeType":"YulExpressionStatement","src":"11524:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11471:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"11474:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11468:2:19"},"nodeType":"YulFunctionCall","src":"11468:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11482:19:19","statements":[{"nodeType":"YulAssignment","src":"11484:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11493:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"11496:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11489:3:19"},"nodeType":"YulFunctionCall","src":"11489:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11484:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"11464:3:19","statements":[]},"src":"11460:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11593:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"11598:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11589:3:19"},"nodeType":"YulFunctionCall","src":"11589:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"11607:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11582:6:19"},"nodeType":"YulFunctionCall","src":"11582:27:19"},"nodeType":"YulExpressionStatement","src":"11582:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11413:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11418:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"11423:6:19","type":""}],"src":"11369:246:19"},{"body":{"nodeType":"YulBlock","src":"11711:283:19","statements":[{"nodeType":"YulVariableDeclaration","src":"11721:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11767:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11735:31:19"},"nodeType":"YulFunctionCall","src":"11735:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11725:6:19","type":""}]},{"nodeType":"YulAssignment","src":"11782:77:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11847:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"11852:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11789:57:19"},"nodeType":"YulFunctionCall","src":"11789:70:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11782:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11907:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"11914:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11903:3:19"},"nodeType":"YulFunctionCall","src":"11903:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"11921:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"11926:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11868:34:19"},"nodeType":"YulFunctionCall","src":"11868:65:19"},"nodeType":"YulExpressionStatement","src":"11868:65:19"},{"nodeType":"YulAssignment","src":"11942:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11953:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11980:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11958:21:19"},"nodeType":"YulFunctionCall","src":"11958:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11949:3:19"},"nodeType":"YulFunctionCall","src":"11949:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11942:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11692:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11699:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11707:3:19","type":""}],"src":"11621:373:19"},{"body":{"nodeType":"YulBlock","src":"12116:193:19","statements":[{"nodeType":"YulAssignment","src":"12126:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12138:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12149:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12134:3:19"},"nodeType":"YulFunctionCall","src":"12134:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12126:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12173:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12184:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12169:3:19"},"nodeType":"YulFunctionCall","src":"12169:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12192:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12198:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12188:3:19"},"nodeType":"YulFunctionCall","src":"12188:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12162:6:19"},"nodeType":"YulFunctionCall","src":"12162:47:19"},"nodeType":"YulExpressionStatement","src":"12162:47:19"},{"nodeType":"YulAssignment","src":"12218:84:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12288:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"12297:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12226:61:19"},"nodeType":"YulFunctionCall","src":"12226:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12218:4:19"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12088:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12100:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12111:4:19","type":""}],"src":"12000:309:19"},{"body":{"nodeType":"YulBlock","src":"12411:122:19","statements":[{"nodeType":"YulAssignment","src":"12421:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12433:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12444:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12429:3:19"},"nodeType":"YulFunctionCall","src":"12429:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12421:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12499:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12512:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12523:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12508:3:19"},"nodeType":"YulFunctionCall","src":"12508:17:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"12457:41:19"},"nodeType":"YulFunctionCall","src":"12457:69:19"},"nodeType":"YulExpressionStatement","src":"12457:69:19"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12383:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12395:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12406:4:19","type":""}],"src":"12315:218:19"},{"body":{"nodeType":"YulBlock","src":"12682:724:19","statements":[{"body":{"nodeType":"YulBlock","src":"12729:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12731:77:19"},"nodeType":"YulFunctionCall","src":"12731:79:19"},"nodeType":"YulExpressionStatement","src":"12731:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12703:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12712:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12699:3:19"},"nodeType":"YulFunctionCall","src":"12699:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"12724:3:19","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12695:3:19"},"nodeType":"YulFunctionCall","src":"12695:33:19"},"nodeType":"YulIf","src":"12692:120:19"},{"nodeType":"YulBlock","src":"12822:141:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12837:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12851:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12841:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12866:87:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12925:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12936:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12921:3:19"},"nodeType":"YulFunctionCall","src":"12921:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12945:7:19"}],"functionName":{"name":"abi_decode_t_struct$_Origin_$40_calldata_ptr","nodeType":"YulIdentifier","src":"12876:44:19"},"nodeType":"YulFunctionCall","src":"12876:77:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12866:6:19"}]}]},{"nodeType":"YulBlock","src":"12973:297:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12988:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13019:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13030:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13015:3:19"},"nodeType":"YulFunctionCall","src":"13015:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13002:12:19"},"nodeType":"YulFunctionCall","src":"13002:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12992:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"13081:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13083:77:19"},"nodeType":"YulFunctionCall","src":"13083:79:19"},"nodeType":"YulExpressionStatement","src":"13083:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13053:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"13061:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13050:2:19"},"nodeType":"YulFunctionCall","src":"13050:30:19"},"nodeType":"YulIf","src":"13047:117:19"},{"nodeType":"YulAssignment","src":"13178:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13232:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"13243:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13228:3:19"},"nodeType":"YulFunctionCall","src":"13228:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13252:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"13196:31:19"},"nodeType":"YulFunctionCall","src":"13196:64:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13178:6:19"},{"name":"value2","nodeType":"YulIdentifier","src":"13186:6:19"}]}]},{"nodeType":"YulBlock","src":"13280:119:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13295:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13309:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13299:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13326:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13361:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"13372:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13357:3:19"},"nodeType":"YulFunctionCall","src":"13357:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13381:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13336:20:19"},"nodeType":"YulFunctionCall","src":"13336:53:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13326:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_Origin_$40_calldata_ptrt_bytes_calldata_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12628:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12639:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12651:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12659:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12667:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12675:6:19","type":""}],"src":"12539:867:19"},{"body":{"nodeType":"YulBlock","src":"13454:48:19","statements":[{"nodeType":"YulAssignment","src":"13464:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13489:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13482:6:19"},"nodeType":"YulFunctionCall","src":"13482:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13475:6:19"},"nodeType":"YulFunctionCall","src":"13475:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13464:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13436:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13446:7:19","type":""}],"src":"13412:90:19"},{"body":{"nodeType":"YulBlock","src":"13567:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13584:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13604:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"13589:14:19"},"nodeType":"YulFunctionCall","src":"13589:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13577:6:19"},"nodeType":"YulFunctionCall","src":"13577:34:19"},"nodeType":"YulExpressionStatement","src":"13577:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13555:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13562:3:19","type":""}],"src":"13508:109:19"},{"body":{"nodeType":"YulBlock","src":"13715:118:19","statements":[{"nodeType":"YulAssignment","src":"13725:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13737:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13748:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13733:3:19"},"nodeType":"YulFunctionCall","src":"13733:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13725:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13799:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13812:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13823:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13808:3:19"},"nodeType":"YulFunctionCall","src":"13808:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13761:37:19"},"nodeType":"YulFunctionCall","src":"13761:65:19"},"nodeType":"YulExpressionStatement","src":"13761:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13687:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13699:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13710:4:19","type":""}],"src":"13623:210:19"},{"body":{"nodeType":"YulBlock","src":"13904:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13921:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13944:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13926:17:19"},"nodeType":"YulFunctionCall","src":"13926:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13914:6:19"},"nodeType":"YulFunctionCall","src":"13914:37:19"},"nodeType":"YulExpressionStatement","src":"13914:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13892:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13899:3:19","type":""}],"src":"13839:118:19"},{"body":{"nodeType":"YulBlock","src":"14061:124:19","statements":[{"nodeType":"YulAssignment","src":"14071:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14083:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14094:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14079:3:19"},"nodeType":"YulFunctionCall","src":"14079:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14071:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14151:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14164:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14175:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14160:3:19"},"nodeType":"YulFunctionCall","src":"14160:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14107:43:19"},"nodeType":"YulFunctionCall","src":"14107:71:19"},"nodeType":"YulExpressionStatement","src":"14107:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14033:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14045:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14056:4:19","type":""}],"src":"13963:222:19"},{"body":{"nodeType":"YulBlock","src":"14257:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"14303:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14305:77:19"},"nodeType":"YulFunctionCall","src":"14305:79:19"},"nodeType":"YulExpressionStatement","src":"14305:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14278:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14287:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14274:3:19"},"nodeType":"YulFunctionCall","src":"14274:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"14299:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14270:3:19"},"nodeType":"YulFunctionCall","src":"14270:32:19"},"nodeType":"YulIf","src":"14267:119:19"},{"nodeType":"YulBlock","src":"14396:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14411:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14425:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14415:6:19","type":""}]},{"nodeType":"YulAssignment","src":"14440:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14475:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"14486:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14471:3:19"},"nodeType":"YulFunctionCall","src":"14471:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14495:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14450:20:19"},"nodeType":"YulFunctionCall","src":"14450:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14440:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14227:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14238:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14250:6:19","type":""}],"src":"14191:329:19"},{"body":{"nodeType":"YulBlock","src":"14609:40:19","statements":[{"nodeType":"YulAssignment","src":"14620:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14636:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:19"},"nodeType":"YulFunctionCall","src":"14630:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14620:6:19"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14592:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14602:6:19","type":""}],"src":"14526:123:19"},{"body":{"nodeType":"YulBlock","src":"14775:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14792:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"14797:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14785:6:19"},"nodeType":"YulFunctionCall","src":"14785:19:19"},"nodeType":"YulExpressionStatement","src":"14785:19:19"},{"nodeType":"YulAssignment","src":"14813:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14832:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14837:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14828:3:19"},"nodeType":"YulFunctionCall","src":"14828:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14813:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14747:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"14752:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14763:11:19","type":""}],"src":"14655:193:19"},{"body":{"nodeType":"YulBlock","src":"14935:60:19","statements":[{"nodeType":"YulAssignment","src":"14945:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14953:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14945:4:19"}]},{"nodeType":"YulAssignment","src":"14966:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14978:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14983:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14974:3:19"},"nodeType":"YulFunctionCall","src":"14974:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14966:4:19"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14922:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14930:4:19","type":""}],"src":"14854:141:19"},{"body":{"nodeType":"YulBlock","src":"15086:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15103:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"15108:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15096:6:19"},"nodeType":"YulFunctionCall","src":"15096:19:19"},"nodeType":"YulExpressionStatement","src":"15096:19:19"},{"nodeType":"YulAssignment","src":"15124:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15143:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15148:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15139:3:19"},"nodeType":"YulFunctionCall","src":"15139:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15124:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15058:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"15063:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15074:11:19","type":""}],"src":"15001:158:19"},{"body":{"nodeType":"YulBlock","src":"15245:273:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15255:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15301:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15269:31:19"},"nodeType":"YulFunctionCall","src":"15269:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15259:6:19","type":""}]},{"nodeType":"YulAssignment","src":"15316:67:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15371:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"15376:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15323:47:19"},"nodeType":"YulFunctionCall","src":"15323:60:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15316:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15431:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"15438:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15427:3:19"},"nodeType":"YulFunctionCall","src":"15427:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"15445:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"15450:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15392:34:19"},"nodeType":"YulFunctionCall","src":"15392:65:19"},"nodeType":"YulExpressionStatement","src":"15392:65:19"},{"nodeType":"YulAssignment","src":"15466:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15477:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15504:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"15482:21:19"},"nodeType":"YulFunctionCall","src":"15482:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15473:3:19"},"nodeType":"YulFunctionCall","src":"15473:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15466:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15226:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15233:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15241:3:19","type":""}],"src":"15165:353:19"},{"body":{"nodeType":"YulBlock","src":"15622:94:19","statements":[{"nodeType":"YulAssignment","src":"15632:78:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15698:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"15706:3:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15646:51:19"},"nodeType":"YulFunctionCall","src":"15646:64:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"15632:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"15595:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15603:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"15611:10:19","type":""}],"src":"15524:192:19"},{"body":{"nodeType":"YulBlock","src":"15806:38:19","statements":[{"nodeType":"YulAssignment","src":"15816:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15828:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15833:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15824:3:19"},"nodeType":"YulFunctionCall","src":"15824:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"15816:4:19"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15793:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"15801:4:19","type":""}],"src":"15722:122:19"},{"body":{"nodeType":"YulBlock","src":"16018:841:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16028:77:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16099:5:19"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16042:56:19"},"nodeType":"YulFunctionCall","src":"16042:63:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16032:6:19","type":""}]},{"nodeType":"YulAssignment","src":"16114:102:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16204:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"16209:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16121:82:19"},"nodeType":"YulFunctionCall","src":"16121:95:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16114:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"16225:20:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"16242:3:19"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"16229:9:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16254:39:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16270:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16279:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"16287:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16275:3:19"},"nodeType":"YulFunctionCall","src":"16275:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16266:3:19"},"nodeType":"YulFunctionCall","src":"16266:27:19"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"16258:4:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16302:80:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16376:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16317:58:19"},"nodeType":"YulFunctionCall","src":"16317:65:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"16306:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16391:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"16405:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16395:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"16481:333:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16502:3:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16511:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16517:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16507:3:19"},"nodeType":"YulFunctionCall","src":"16507:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16495:6:19"},"nodeType":"YulFunctionCall","src":"16495:33:19"},"nodeType":"YulExpressionStatement","src":"16495:33:19"},{"nodeType":"YulVariableDeclaration","src":"16541:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16568:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16562:5:19"},"nodeType":"YulFunctionCall","src":"16562:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"16545:13:19","type":""}]},{"nodeType":"YulAssignment","src":"16588:90:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"16658:13:19"},{"name":"tail","nodeType":"YulIdentifier","src":"16673:4:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16596:61:19"},"nodeType":"YulFunctionCall","src":"16596:82:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16588:4:19"}]},{"nodeType":"YulAssignment","src":"16691:79:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16763:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16701:61:19"},"nodeType":"YulFunctionCall","src":"16701:69:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16691:6:19"}]},{"nodeType":"YulAssignment","src":"16783:21:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16794:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16799:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16790:3:19"},"nodeType":"YulFunctionCall","src":"16790:14:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16783:3:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16443:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"16446:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16440:2:19"},"nodeType":"YulFunctionCall","src":"16440:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16454:18:19","statements":[{"nodeType":"YulAssignment","src":"16456:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16465:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"16468:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16461:3:19"},"nodeType":"YulFunctionCall","src":"16461:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16456:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"16425:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16427:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16436:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16431:1:19","type":""}]}]},"src":"16421:393:19"},{"nodeType":"YulAssignment","src":"16823:11:19","value":{"name":"tail","nodeType":"YulIdentifier","src":"16830:4:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16823:3:19"}]},{"nodeType":"YulAssignment","src":"16843:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"16850:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16843:3:19"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15997:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16004:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16013:3:19","type":""}],"src":"15876:983:19"},{"body":{"nodeType":"YulBlock","src":"17031:243:19","statements":[{"nodeType":"YulAssignment","src":"17041:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17053:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17064:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17049:3:19"},"nodeType":"YulFunctionCall","src":"17049:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17041:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17088:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17099:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17084:3:19"},"nodeType":"YulFunctionCall","src":"17084:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17107:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"17113:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17103:3:19"},"nodeType":"YulFunctionCall","src":"17103:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17077:6:19"},"nodeType":"YulFunctionCall","src":"17077:47:19"},"nodeType":"YulExpressionStatement","src":"17077:47:19"},{"nodeType":"YulAssignment","src":"17133:134:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17253:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"17262:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17141:111:19"},"nodeType":"YulFunctionCall","src":"17141:126:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17133:4:19"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17003:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17015:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17026:4:19","type":""}],"src":"16865:409:19"},{"body":{"nodeType":"YulBlock","src":"17364:40:19","statements":[{"nodeType":"YulAssignment","src":"17375:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17391:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17385:5:19"},"nodeType":"YulFunctionCall","src":"17385:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17375:6:19"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17347:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17357:6:19","type":""}],"src":"17280:124:19"},{"body":{"nodeType":"YulBlock","src":"17531:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17548:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"17553:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17541:6:19"},"nodeType":"YulFunctionCall","src":"17541:19:19"},"nodeType":"YulExpressionStatement","src":"17541:19:19"},{"nodeType":"YulAssignment","src":"17569:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17588:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17593:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17584:3:19"},"nodeType":"YulFunctionCall","src":"17584:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17569:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17503:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"17508:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17519:11:19","type":""}],"src":"17410:194:19"},{"body":{"nodeType":"YulBlock","src":"17692:60:19","statements":[{"nodeType":"YulAssignment","src":"17702:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17710:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17702:4:19"}]},{"nodeType":"YulAssignment","src":"17723:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17735:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17740:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17731:3:19"},"nodeType":"YulFunctionCall","src":"17731:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17723:4:19"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17679:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17687:4:19","type":""}],"src":"17610:142:19"},{"body":{"nodeType":"YulBlock","src":"17817:40:19","statements":[{"nodeType":"YulAssignment","src":"17828:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17844:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17838:5:19"},"nodeType":"YulFunctionCall","src":"17838:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17828:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17800:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17810:6:19","type":""}],"src":"17758:99:19"},{"body":{"nodeType":"YulBlock","src":"17949:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17966:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"17971:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17959:6:19"},"nodeType":"YulFunctionCall","src":"17959:19:19"},"nodeType":"YulExpressionStatement","src":"17959:19:19"},{"nodeType":"YulAssignment","src":"17987:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18006:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18011:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18002:3:19"},"nodeType":"YulFunctionCall","src":"18002:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17987:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17921:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"17926:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17937:11:19","type":""}],"src":"17863:159:19"},{"body":{"nodeType":"YulBlock","src":"18110:275:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18120:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18167:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18134:32:19"},"nodeType":"YulFunctionCall","src":"18134:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18124:6:19","type":""}]},{"nodeType":"YulAssignment","src":"18182:68:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18238:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"18243:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18189:48:19"},"nodeType":"YulFunctionCall","src":"18189:61:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18182:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18298:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18305:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18294:3:19"},"nodeType":"YulFunctionCall","src":"18294:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"18312:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"18317:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"18259:34:19"},"nodeType":"YulFunctionCall","src":"18259:65:19"},"nodeType":"YulExpressionStatement","src":"18259:65:19"},{"nodeType":"YulAssignment","src":"18333:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18344:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18371:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18349:21:19"},"nodeType":"YulFunctionCall","src":"18349:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18340:3:19"},"nodeType":"YulFunctionCall","src":"18340:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18333:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18091:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18098:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18106:3:19","type":""}],"src":"18028:357:19"},{"body":{"nodeType":"YulBlock","src":"18491:96:19","statements":[{"nodeType":"YulAssignment","src":"18501:80:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18569:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"18577:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18515:53:19"},"nodeType":"YulFunctionCall","src":"18515:66:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"18501:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"18464:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18472:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"18480:10:19","type":""}],"src":"18391:196:19"},{"body":{"nodeType":"YulBlock","src":"18678:38:19","statements":[{"nodeType":"YulAssignment","src":"18688:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18700:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18705:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18696:3:19"},"nodeType":"YulFunctionCall","src":"18696:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"18688:4:19"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18665:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"18673:4:19","type":""}],"src":"18593:123:19"},{"body":{"nodeType":"YulBlock","src":"18894:847:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18904:78:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18976:5:19"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18918:57:19"},"nodeType":"YulFunctionCall","src":"18918:64:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18908:6:19","type":""}]},{"nodeType":"YulAssignment","src":"18991:103:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19082:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"19087:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18998:83:19"},"nodeType":"YulFunctionCall","src":"18998:96:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18991:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"19103:20:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"19120:3:19"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"19107:9:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19132:39:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19148:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19157:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19165:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19153:3:19"},"nodeType":"YulFunctionCall","src":"19153:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19144:3:19"},"nodeType":"YulFunctionCall","src":"19144:27:19"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"19136:4:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19180:81:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19255:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19195:59:19"},"nodeType":"YulFunctionCall","src":"19195:66:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"19184:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19270:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"19284:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"19274:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19360:336:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19381:3:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19390:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"19396:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19386:3:19"},"nodeType":"YulFunctionCall","src":"19386:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19374:6:19"},"nodeType":"YulFunctionCall","src":"19374:33:19"},"nodeType":"YulExpressionStatement","src":"19374:33:19"},{"nodeType":"YulVariableDeclaration","src":"19420:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19447:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19441:5:19"},"nodeType":"YulFunctionCall","src":"19441:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"19424:13:19","type":""}]},{"nodeType":"YulAssignment","src":"19467:92:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"19539:13:19"},{"name":"tail","nodeType":"YulIdentifier","src":"19554:4:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19475:63:19"},"nodeType":"YulFunctionCall","src":"19475:84:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19467:4:19"}]},{"nodeType":"YulAssignment","src":"19572:80:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19645:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19582:62:19"},"nodeType":"YulFunctionCall","src":"19582:70:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19572:6:19"}]},{"nodeType":"YulAssignment","src":"19665:21:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19676:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"19681:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19672:3:19"},"nodeType":"YulFunctionCall","src":"19672:14:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19665:3:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19322:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"19325:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19319:2:19"},"nodeType":"YulFunctionCall","src":"19319:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19333:18:19","statements":[{"nodeType":"YulAssignment","src":"19335:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19344:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"19347:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19340:3:19"},"nodeType":"YulFunctionCall","src":"19340:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19335:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"19304:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19306:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"19315:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19310:1:19","type":""}]}]},"src":"19300:396:19"},{"nodeType":"YulAssignment","src":"19705:11:19","value":{"name":"tail","nodeType":"YulIdentifier","src":"19712:4:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19705:3:19"}]},{"nodeType":"YulAssignment","src":"19725:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"19732:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19725:3:19"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18873:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18880:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18889:3:19","type":""}],"src":"18750:991:19"},{"body":{"nodeType":"YulBlock","src":"19915:245:19","statements":[{"nodeType":"YulAssignment","src":"19925:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19937:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19948:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19933:3:19"},"nodeType":"YulFunctionCall","src":"19933:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19925:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19972:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19983:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19968:3:19"},"nodeType":"YulFunctionCall","src":"19968:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19991:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"19997:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19987:3:19"},"nodeType":"YulFunctionCall","src":"19987:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19961:6:19"},"nodeType":"YulFunctionCall","src":"19961:47:19"},"nodeType":"YulExpressionStatement","src":"19961:47:19"},{"nodeType":"YulAssignment","src":"20017:136:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20139:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"20148:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20025:113:19"},"nodeType":"YulFunctionCall","src":"20025:128:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20017:4:19"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19887:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19899:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19910:4:19","type":""}],"src":"19747:413:19"},{"body":{"nodeType":"YulBlock","src":"20231:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"20277:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20279:77:19"},"nodeType":"YulFunctionCall","src":"20279:79:19"},"nodeType":"YulExpressionStatement","src":"20279:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20252:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"20261:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20248:3:19"},"nodeType":"YulFunctionCall","src":"20248:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"20273:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20244:3:19"},"nodeType":"YulFunctionCall","src":"20244:32:19"},"nodeType":"YulIf","src":"20241:119:19"},{"nodeType":"YulBlock","src":"20370:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"20385:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"20399:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20389:6:19","type":""}]},{"nodeType":"YulAssignment","src":"20414:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20448:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"20459:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20444:3:19"},"nodeType":"YulFunctionCall","src":"20444:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20468:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"20424:19:19"},"nodeType":"YulFunctionCall","src":"20424:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20414:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20201:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20212:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20224:6:19","type":""}],"src":"20166:327:19"},{"body":{"nodeType":"YulBlock","src":"20564:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20581:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20604:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"20586:17:19"},"nodeType":"YulFunctionCall","src":"20586:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20574:6:19"},"nodeType":"YulFunctionCall","src":"20574:37:19"},"nodeType":"YulExpressionStatement","src":"20574:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20552:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20559:3:19","type":""}],"src":"20499:118:19"},{"body":{"nodeType":"YulBlock","src":"20721:124:19","statements":[{"nodeType":"YulAssignment","src":"20731:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20743:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20754:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20739:3:19"},"nodeType":"YulFunctionCall","src":"20739:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20731:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20811:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20824:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20835:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20820:3:19"},"nodeType":"YulFunctionCall","src":"20820:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20767:43:19"},"nodeType":"YulFunctionCall","src":"20767:71:19"},"nodeType":"YulExpressionStatement","src":"20767:71:19"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20693:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20705:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20716:4:19","type":""}],"src":"20623:222:19"},{"body":{"nodeType":"YulBlock","src":"20916:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20933:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20956:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20938:17:19"},"nodeType":"YulFunctionCall","src":"20938:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20926:6:19"},"nodeType":"YulFunctionCall","src":"20926:37:19"},"nodeType":"YulExpressionStatement","src":"20926:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20904:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20911:3:19","type":""}],"src":"20851:118:19"},{"body":{"nodeType":"YulBlock","src":"21073:124:19","statements":[{"nodeType":"YulAssignment","src":"21083:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21095:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21106:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21091:3:19"},"nodeType":"YulFunctionCall","src":"21091:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21083:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21163:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21176:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21187:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21172:3:19"},"nodeType":"YulFunctionCall","src":"21172:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21119:43:19"},"nodeType":"YulFunctionCall","src":"21119:71:19"},"nodeType":"YulExpressionStatement","src":"21119:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21045:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21057:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21068:4:19","type":""}],"src":"20975:222:19"},{"body":{"nodeType":"YulBlock","src":"21269:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"21315:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21317:77:19"},"nodeType":"YulFunctionCall","src":"21317:79:19"},"nodeType":"YulExpressionStatement","src":"21317:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21290:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21299:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21286:3:19"},"nodeType":"YulFunctionCall","src":"21286:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"21311:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21282:3:19"},"nodeType":"YulFunctionCall","src":"21282:32:19"},"nodeType":"YulIf","src":"21279:119:19"},{"nodeType":"YulBlock","src":"21408:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"21423:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"21437:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21427:6:19","type":""}]},{"nodeType":"YulAssignment","src":"21452:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21487:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"21498:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21483:3:19"},"nodeType":"YulFunctionCall","src":"21483:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21507:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21462:20:19"},"nodeType":"YulFunctionCall","src":"21462:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21452:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21239:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21250:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21262:6:19","type":""}],"src":"21203:329:19"},{"body":{"nodeType":"YulBlock","src":"21628:287:19","statements":[{"body":{"nodeType":"YulBlock","src":"21674:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21676:77:19"},"nodeType":"YulFunctionCall","src":"21676:79:19"},"nodeType":"YulExpressionStatement","src":"21676:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21649:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21658:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21645:3:19"},"nodeType":"YulFunctionCall","src":"21645:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"21670:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21641:3:19"},"nodeType":"YulFunctionCall","src":"21641:32:19"},"nodeType":"YulIf","src":"21638:119:19"},{"nodeType":"YulBlock","src":"21767:141:19","statements":[{"nodeType":"YulVariableDeclaration","src":"21782:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"21796:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21786:6:19","type":""}]},{"nodeType":"YulAssignment","src":"21811:87:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21870:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"21881:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21866:3:19"},"nodeType":"YulFunctionCall","src":"21866:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21890:7:19"}],"functionName":{"name":"abi_decode_t_struct$_Origin_$40_calldata_ptr","nodeType":"YulIdentifier","src":"21821:44:19"},"nodeType":"YulFunctionCall","src":"21821:77:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21811:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_Origin_$40_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21598:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21609:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21621:6:19","type":""}],"src":"21538:377:19"},{"body":{"nodeType":"YulBlock","src":"22045:204:19","statements":[{"nodeType":"YulAssignment","src":"22055:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22067:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22078:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22063:3:19"},"nodeType":"YulFunctionCall","src":"22063:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22055:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22133:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22146:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22157:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22142:3:19"},"nodeType":"YulFunctionCall","src":"22142:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"22091:41:19"},"nodeType":"YulFunctionCall","src":"22091:69:19"},"nodeType":"YulExpressionStatement","src":"22091:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22214:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22227:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22238:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22223:3:19"},"nodeType":"YulFunctionCall","src":"22223:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"22170:43:19"},"nodeType":"YulFunctionCall","src":"22170:72:19"},"nodeType":"YulExpressionStatement","src":"22170:72:19"}]},"name":"abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22009:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22021:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22029:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22040:4:19","type":""}],"src":"21921:328:19"},{"body":{"nodeType":"YulBlock","src":"22369:34:19","statements":[{"nodeType":"YulAssignment","src":"22379:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"22394:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22379:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22341:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"22346:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22357:11:19","type":""}],"src":"22255:148:19"},{"body":{"nodeType":"YulBlock","src":"22519:280:19","statements":[{"nodeType":"YulVariableDeclaration","src":"22529:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22576:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"22543:32:19"},"nodeType":"YulFunctionCall","src":"22543:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22533:6:19","type":""}]},{"nodeType":"YulAssignment","src":"22591:96:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22675:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"22680:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22598:76:19"},"nodeType":"YulFunctionCall","src":"22598:89:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22591:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22735:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"22742:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22731:3:19"},"nodeType":"YulFunctionCall","src":"22731:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"22749:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"22754:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22696:34:19"},"nodeType":"YulFunctionCall","src":"22696:65:19"},"nodeType":"YulExpressionStatement","src":"22696:65:19"},{"nodeType":"YulAssignment","src":"22770:23:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22781:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"22786:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22777:3:19"},"nodeType":"YulFunctionCall","src":"22777:16:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22770:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22500:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22507:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22515:3:19","type":""}],"src":"22409:390:19"},{"body":{"nodeType":"YulBlock","src":"22911:45:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22933:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22941:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22929:3:19"},"nodeType":"YulFunctionCall","src":"22929:14:19"},{"hexValue":"2c","kind":"string","nodeType":"YulLiteral","src":"22945:3:19","type":"","value":","}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22922:6:19"},"nodeType":"YulFunctionCall","src":"22922:27:19"},"nodeType":"YulExpressionStatement","src":"22922:27:19"}]},"name":"store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22903:6:19","type":""}],"src":"22805:151:19"},{"body":{"nodeType":"YulBlock","src":"23126:236:19","statements":[{"nodeType":"YulAssignment","src":"23136:91:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23220:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"23225:1:19","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23143:76:19"},"nodeType":"YulFunctionCall","src":"23143:84:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23136:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23325:3:19"}],"functionName":{"name":"store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","nodeType":"YulIdentifier","src":"23236:88:19"},"nodeType":"YulFunctionCall","src":"23236:93:19"},"nodeType":"YulExpressionStatement","src":"23236:93:19"},{"nodeType":"YulAssignment","src":"23338:18:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23349:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"23354:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23345:3:19"},"nodeType":"YulFunctionCall","src":"23345:11:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23338:3:19"}]}]},"name":"abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23114:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23122:3:19","type":""}],"src":"22962:400:19"},{"body":{"nodeType":"YulBlock","src":"23802:693:19","statements":[{"nodeType":"YulAssignment","src":"23813:102:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23902:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"23911:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23820:81:19"},"nodeType":"YulFunctionCall","src":"23820:95:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23813:3:19"}]},{"nodeType":"YulAssignment","src":"23925:155:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24076:3:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23932:142:19"},"nodeType":"YulFunctionCall","src":"23932:148:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23925:3:19"}]},{"nodeType":"YulAssignment","src":"24090:102:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24179:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"24188:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24097:81:19"},"nodeType":"YulFunctionCall","src":"24097:95:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24090:3:19"}]},{"nodeType":"YulAssignment","src":"24202:155:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24353:3:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24209:142:19"},"nodeType":"YulFunctionCall","src":"24209:148:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24202:3:19"}]},{"nodeType":"YulAssignment","src":"24367:102:19","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24456:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"24465:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24374:81:19"},"nodeType":"YulFunctionCall","src":"24374:95:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24367:3:19"}]},{"nodeType":"YulAssignment","src":"24479:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"24486:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24479:3:19"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23765:3:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23771:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23779:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23787:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23798:3:19","type":""}],"src":"23368:1127:19"},{"body":{"nodeType":"YulBlock","src":"24529:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24546:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24549:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24539:6:19"},"nodeType":"YulFunctionCall","src":"24539:88:19"},"nodeType":"YulExpressionStatement","src":"24539:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24643:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24646:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24636:6:19"},"nodeType":"YulFunctionCall","src":"24636:15:19"},"nodeType":"YulExpressionStatement","src":"24636:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24667:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24670:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24660:6:19"},"nodeType":"YulFunctionCall","src":"24660:15:19"},"nodeType":"YulExpressionStatement","src":"24660:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"24501:180:19"},{"body":{"nodeType":"YulBlock","src":"24738:269:19","statements":[{"nodeType":"YulAssignment","src":"24748:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24762:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"24768:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24758:3:19"},"nodeType":"YulFunctionCall","src":"24758:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"24748:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"24779:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24809:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"24815:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24805:3:19"},"nodeType":"YulFunctionCall","src":"24805:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"24783:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"24856:51:19","statements":[{"nodeType":"YulAssignment","src":"24870:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24884:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"24892:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24880:3:19"},"nodeType":"YulFunctionCall","src":"24880:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"24870:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"24836:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24829:6:19"},"nodeType":"YulFunctionCall","src":"24829:26:19"},"nodeType":"YulIf","src":"24826:81:19"},{"body":{"nodeType":"YulBlock","src":"24959:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"24973:16:19"},"nodeType":"YulFunctionCall","src":"24973:18:19"},"nodeType":"YulExpressionStatement","src":"24973:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"24923:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24946:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"24954:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24943:2:19"},"nodeType":"YulFunctionCall","src":"24943:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24920:2:19"},"nodeType":"YulFunctionCall","src":"24920:38:19"},"nodeType":"YulIf","src":"24917:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"24722:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"24731:6:19","type":""}],"src":"24687:320:19"},{"body":{"nodeType":"YulBlock","src":"25066:87:19","statements":[{"nodeType":"YulAssignment","src":"25076:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"25084:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25076:4:19"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25104:1:19","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"25107:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25097:6:19"},"nodeType":"YulFunctionCall","src":"25097:14:19"},"nodeType":"YulExpressionStatement","src":"25097:14:19"},{"nodeType":"YulAssignment","src":"25120:26:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25138:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25141:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"25128:9:19"},"nodeType":"YulFunctionCall","src":"25128:18:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25120:4:19"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"25053:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"25061:4:19","type":""}],"src":"25013:140:19"},{"body":{"nodeType":"YulBlock","src":"25203:49:19","statements":[{"nodeType":"YulAssignment","src":"25213:33:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25231:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"25238:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25227:3:19"},"nodeType":"YulFunctionCall","src":"25227:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"25243:2:19","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25223:3:19"},"nodeType":"YulFunctionCall","src":"25223:23:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25213:6:19"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25186:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25196:6:19","type":""}],"src":"25159:93:19"},{"body":{"nodeType":"YulBlock","src":"25311:54:19","statements":[{"nodeType":"YulAssignment","src":"25321:37:19","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"25346:4:19"},{"name":"value","nodeType":"YulIdentifier","src":"25352:5:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25342:3:19"},"nodeType":"YulFunctionCall","src":"25342:16:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25321:8:19"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"25286:4:19","type":""},{"name":"value","nodeType":"YulTypedName","src":"25292:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25302:8:19","type":""}],"src":"25258:107:19"},{"body":{"nodeType":"YulBlock","src":"25447:317:19","statements":[{"nodeType":"YulVariableDeclaration","src":"25457:35:19","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"25478:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"25490:1:19","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25474:3:19"},"nodeType":"YulFunctionCall","src":"25474:18:19"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"25461:9:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25501:109:19","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25532:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25543:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25513:18:19"},"nodeType":"YulFunctionCall","src":"25513:97:19"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"25505:4:19","type":""}]},{"nodeType":"YulAssignment","src":"25619:51:19","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25650:9:19"},{"name":"toInsert","nodeType":"YulIdentifier","src":"25661:8:19"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25631:18:19"},"nodeType":"YulFunctionCall","src":"25631:39:19"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25619:8:19"}]},{"nodeType":"YulAssignment","src":"25679:30:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25692:5:19"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"25703:4:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25699:3:19"},"nodeType":"YulFunctionCall","src":"25699:9:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25688:3:19"},"nodeType":"YulFunctionCall","src":"25688:21:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25679:5:19"}]},{"nodeType":"YulAssignment","src":"25718:40:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25731:5:19"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25742:8:19"},{"name":"mask","nodeType":"YulIdentifier","src":"25752:4:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25738:3:19"},"nodeType":"YulFunctionCall","src":"25738:19:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25728:2:19"},"nodeType":"YulFunctionCall","src":"25728:30:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25718:6:19"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25408:5:19","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"25415:10:19","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"25427:8:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25440:6:19","type":""}],"src":"25371:393:19"},{"body":{"nodeType":"YulBlock","src":"25830:82:19","statements":[{"nodeType":"YulAssignment","src":"25840:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25898:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25880:17:19"},"nodeType":"YulFunctionCall","src":"25880:24:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"25871:8:19"},"nodeType":"YulFunctionCall","src":"25871:34:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25853:17:19"},"nodeType":"YulFunctionCall","src":"25853:53:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"25840:9:19"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25810:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"25820:9:19","type":""}],"src":"25770:142:19"},{"body":{"nodeType":"YulBlock","src":"25965:28:19","statements":[{"nodeType":"YulAssignment","src":"25975:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"25982:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25975:3:19"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25951:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25961:3:19","type":""}],"src":"25918:75:19"},{"body":{"nodeType":"YulBlock","src":"26075:193:19","statements":[{"nodeType":"YulVariableDeclaration","src":"26085:63:19","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"26140:7:19"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26109:30:19"},"nodeType":"YulFunctionCall","src":"26109:39:19"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"26089:16:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26164:4:19"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26204:4:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"26198:5:19"},"nodeType":"YulFunctionCall","src":"26198:11:19"},{"name":"offset","nodeType":"YulIdentifier","src":"26211:6:19"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"26243:16:19"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"26219:23:19"},"nodeType":"YulFunctionCall","src":"26219:41:19"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"26170:27:19"},"nodeType":"YulFunctionCall","src":"26170:91:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"26157:6:19"},"nodeType":"YulFunctionCall","src":"26157:105:19"},"nodeType":"YulExpressionStatement","src":"26157:105:19"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26052:4:19","type":""},{"name":"offset","nodeType":"YulTypedName","src":"26058:6:19","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"26066:7:19","type":""}],"src":"25999:269:19"},{"body":{"nodeType":"YulBlock","src":"26323:24:19","statements":[{"nodeType":"YulAssignment","src":"26333:8:19","value":{"kind":"number","nodeType":"YulLiteral","src":"26340:1:19","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26333:3:19"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26319:3:19","type":""}],"src":"26274:73:19"},{"body":{"nodeType":"YulBlock","src":"26406:136:19","statements":[{"nodeType":"YulVariableDeclaration","src":"26416:46:19","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"26430:30:19"},"nodeType":"YulFunctionCall","src":"26430:32:19"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"26420:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26515:4:19"},{"name":"offset","nodeType":"YulIdentifier","src":"26521:6:19"},{"name":"zero_0","nodeType":"YulIdentifier","src":"26529:6:19"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26471:43:19"},"nodeType":"YulFunctionCall","src":"26471:65:19"},"nodeType":"YulExpressionStatement","src":"26471:65:19"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26392:4:19","type":""},{"name":"offset","nodeType":"YulTypedName","src":"26398:6:19","type":""}],"src":"26353:189:19"},{"body":{"nodeType":"YulBlock","src":"26598:136:19","statements":[{"body":{"nodeType":"YulBlock","src":"26665:63:19","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26709:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"26716:1:19","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"26679:29:19"},"nodeType":"YulFunctionCall","src":"26679:39:19"},"nodeType":"YulExpressionStatement","src":"26679:39:19"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26618:5:19"},{"name":"end","nodeType":"YulIdentifier","src":"26625:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26615:2:19"},"nodeType":"YulFunctionCall","src":"26615:14:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"26630:26:19","statements":[{"nodeType":"YulAssignment","src":"26632:22:19","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26645:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"26652:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26641:3:19"},"nodeType":"YulFunctionCall","src":"26641:13:19"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"26632:5:19"}]}]},"pre":{"nodeType":"YulBlock","src":"26612:2:19","statements":[]},"src":"26608:120:19"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"26586:5:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"26593:3:19","type":""}],"src":"26548:186:19"},{"body":{"nodeType":"YulBlock","src":"26818:463:19","statements":[{"body":{"nodeType":"YulBlock","src":"26844:430:19","statements":[{"nodeType":"YulVariableDeclaration","src":"26858:53:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26905:5:19"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"26874:30:19"},"nodeType":"YulFunctionCall","src":"26874:37:19"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"26862:8:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"26924:63:19","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"26947:8:19"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"26975:10:19"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"26957:17:19"},"nodeType":"YulFunctionCall","src":"26957:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26943:3:19"},"nodeType":"YulFunctionCall","src":"26943:44:19"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"26928:11:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"27144:27:19","statements":[{"nodeType":"YulAssignment","src":"27146:23:19","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"27161:8:19"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27146:11:19"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"27128:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"27140:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27125:2:19"},"nodeType":"YulFunctionCall","src":"27125:18:19"},"nodeType":"YulIf","src":"27122:49:19"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27213:11:19"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"27230:8:19"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"27258:3:19"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"27240:17:19"},"nodeType":"YulFunctionCall","src":"27240:22:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27226:3:19"},"nodeType":"YulFunctionCall","src":"27226:37:19"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"27184:28:19"},"nodeType":"YulFunctionCall","src":"27184:80:19"},"nodeType":"YulExpressionStatement","src":"27184:80:19"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"26835:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26840:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26832:2:19"},"nodeType":"YulFunctionCall","src":"26832:11:19"},"nodeType":"YulIf","src":"26829:445:19"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"26794:5:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"26801:3:19","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"26806:10:19","type":""}],"src":"26740:541:19"},{"body":{"nodeType":"YulBlock","src":"27350:54:19","statements":[{"nodeType":"YulAssignment","src":"27360:37:19","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"27385:4:19"},{"name":"value","nodeType":"YulIdentifier","src":"27391:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"27381:3:19"},"nodeType":"YulFunctionCall","src":"27381:16:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"27360:8:19"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"27325:4:19","type":""},{"name":"value","nodeType":"YulTypedName","src":"27331:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"27341:8:19","type":""}],"src":"27287:117:19"},{"body":{"nodeType":"YulBlock","src":"27461:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"27471:68:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27520:1:19","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"27523:5:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27516:3:19"},"nodeType":"YulFunctionCall","src":"27516:13:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27535:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27531:3:19"},"nodeType":"YulFunctionCall","src":"27531:6:19"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"27487:28:19"},"nodeType":"YulFunctionCall","src":"27487:51:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27483:3:19"},"nodeType":"YulFunctionCall","src":"27483:56:19"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"27475:4:19","type":""}]},{"nodeType":"YulAssignment","src":"27548:25:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27562:4:19"},{"name":"mask","nodeType":"YulIdentifier","src":"27568:4:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27558:3:19"},"nodeType":"YulFunctionCall","src":"27558:15:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27548:6:19"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27438:4:19","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"27444:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27454:6:19","type":""}],"src":"27410:169:19"},{"body":{"nodeType":"YulBlock","src":"27665:214:19","statements":[{"nodeType":"YulAssignment","src":"27798:37:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27825:4:19"},{"name":"len","nodeType":"YulIdentifier","src":"27831:3:19"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"27806:18:19"},"nodeType":"YulFunctionCall","src":"27806:29:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27798:4:19"}]},{"nodeType":"YulAssignment","src":"27844:29:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27855:4:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27865:1:19","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"27868:3:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27861:3:19"},"nodeType":"YulFunctionCall","src":"27861:11:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27852:2:19"},"nodeType":"YulFunctionCall","src":"27852:21:19"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"27844:4:19"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27646:4:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"27652:3:19","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"27660:4:19","type":""}],"src":"27584:295:19"},{"body":{"nodeType":"YulBlock","src":"27974:1300:19","statements":[{"nodeType":"YulVariableDeclaration","src":"27985:50:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28031:3:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27999:31:19"},"nodeType":"YulFunctionCall","src":"27999:36:19"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"27989:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"28120:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28122:16:19"},"nodeType":"YulFunctionCall","src":"28122:18:19"},"nodeType":"YulExpressionStatement","src":"28122:18:19"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28092:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"28100:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28089:2:19"},"nodeType":"YulFunctionCall","src":"28089:30:19"},"nodeType":"YulIf","src":"28086:56:19"},{"nodeType":"YulVariableDeclaration","src":"28152:52:19","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28198:4:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28192:5:19"},"nodeType":"YulFunctionCall","src":"28192:11:19"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"28166:25:19"},"nodeType":"YulFunctionCall","src":"28166:38:19"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"28156:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28296:4:19"},{"name":"oldLen","nodeType":"YulIdentifier","src":"28302:6:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"28310:6:19"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"28251:44:19"},"nodeType":"YulFunctionCall","src":"28251:66:19"},"nodeType":"YulExpressionStatement","src":"28251:66:19"},{"nodeType":"YulVariableDeclaration","src":"28327:18:19","value":{"kind":"number","nodeType":"YulLiteral","src":"28344:1:19","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"28331:9:19","type":""}]},{"nodeType":"YulAssignment","src":"28355:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"28368:4:19","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28355:9:19"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"28419:610:19","statements":[{"nodeType":"YulVariableDeclaration","src":"28433:37:19","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28452:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28464:4:19","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28460:3:19"},"nodeType":"YulFunctionCall","src":"28460:9:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28448:3:19"},"nodeType":"YulFunctionCall","src":"28448:22:19"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"28437:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28484:50:19","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28529:4:19"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"28498:30:19"},"nodeType":"YulFunctionCall","src":"28498:36:19"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"28488:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28547:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"28556:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28551:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"28615:163:19","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28640:6:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28658:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"28663:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28654:3:19"},"nodeType":"YulFunctionCall","src":"28654:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28648:5:19"},"nodeType":"YulFunctionCall","src":"28648:26:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28633:6:19"},"nodeType":"YulFunctionCall","src":"28633:42:19"},"nodeType":"YulExpressionStatement","src":"28633:42:19"},{"nodeType":"YulAssignment","src":"28692:24:19","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28706:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"28714:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28702:3:19"},"nodeType":"YulFunctionCall","src":"28702:14:19"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28692:6:19"}]},{"nodeType":"YulAssignment","src":"28733:31:19","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28750:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28761:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28746:3:19"},"nodeType":"YulFunctionCall","src":"28746:18:19"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28733:9:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28581:1:19"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"28584:7:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28578:2:19"},"nodeType":"YulFunctionCall","src":"28578:14:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28593:21:19","statements":[{"nodeType":"YulAssignment","src":"28595:17:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28604:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"28607:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28600:3:19"},"nodeType":"YulFunctionCall","src":"28600:12:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28595:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"28574:3:19","statements":[]},"src":"28570:208:19"},{"body":{"nodeType":"YulBlock","src":"28814:156:19","statements":[{"nodeType":"YulVariableDeclaration","src":"28832:43:19","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28859:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"28864:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28855:3:19"},"nodeType":"YulFunctionCall","src":"28855:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28849:5:19"},"nodeType":"YulFunctionCall","src":"28849:26:19"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"28836:9:19","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28899:6:19"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"28926:9:19"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28941:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"28949:4:19","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28937:3:19"},"nodeType":"YulFunctionCall","src":"28937:17:19"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"28907:18:19"},"nodeType":"YulFunctionCall","src":"28907:48:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28892:6:19"},"nodeType":"YulFunctionCall","src":"28892:64:19"},"nodeType":"YulExpressionStatement","src":"28892:64:19"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"28797:7:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"28806:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28794:2:19"},"nodeType":"YulFunctionCall","src":"28794:19:19"},"nodeType":"YulIf","src":"28791:179:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28990:4:19"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29004:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"29012:1:19","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29000:3:19"},"nodeType":"YulFunctionCall","src":"29000:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"29016:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28996:3:19"},"nodeType":"YulFunctionCall","src":"28996:22:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28983:6:19"},"nodeType":"YulFunctionCall","src":"28983:36:19"},"nodeType":"YulExpressionStatement","src":"28983:36:19"}]},"nodeType":"YulCase","src":"28412:617:19","value":{"kind":"number","nodeType":"YulLiteral","src":"28417:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"29046:222:19","statements":[{"nodeType":"YulVariableDeclaration","src":"29060:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"29073:1:19","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"29064:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"29097:67:19","statements":[{"nodeType":"YulAssignment","src":"29115:35:19","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29134:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29139:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29130:3:19"},"nodeType":"YulFunctionCall","src":"29130:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29124:5:19"},"nodeType":"YulFunctionCall","src":"29124:26:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29115:5:19"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"29090:6:19"},"nodeType":"YulIf","src":"29087:77:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29184:4:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29243:5:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"29250:6:19"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"29190:52:19"},"nodeType":"YulFunctionCall","src":"29190:67:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29177:6:19"},"nodeType":"YulFunctionCall","src":"29177:81:19"},"nodeType":"YulExpressionStatement","src":"29177:81:19"}]},"nodeType":"YulCase","src":"29038:230:19","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28392:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"28400:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28389:2:19"},"nodeType":"YulFunctionCall","src":"28389:14:19"},"nodeType":"YulSwitch","src":"28382:886:19"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"27963:4:19","type":""},{"name":"src","nodeType":"YulTypedName","src":"27969:3:19","type":""}],"src":"27884:1390:19"},{"body":{"nodeType":"YulBlock","src":"29452:357:19","statements":[{"nodeType":"YulAssignment","src":"29462:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29474:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29485:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29470:3:19"},"nodeType":"YulFunctionCall","src":"29470:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29462:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29542:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29555:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29566:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29551:3:19"},"nodeType":"YulFunctionCall","src":"29551:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29498:43:19"},"nodeType":"YulFunctionCall","src":"29498:71:19"},"nodeType":"YulExpressionStatement","src":"29498:71:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29590:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29601:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29586:3:19"},"nodeType":"YulFunctionCall","src":"29586:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29610:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"29616:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29606:3:19"},"nodeType":"YulFunctionCall","src":"29606:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29579:6:19"},"nodeType":"YulFunctionCall","src":"29579:48:19"},"nodeType":"YulExpressionStatement","src":"29579:48:19"},{"nodeType":"YulAssignment","src":"29636:84:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29706:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"29715:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29644:61:19"},"nodeType":"YulFunctionCall","src":"29644:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29636:4:19"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"29774:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29787:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29798:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29783:3:19"},"nodeType":"YulFunctionCall","src":"29783:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29730:43:19"},"nodeType":"YulFunctionCall","src":"29730:72:19"},"nodeType":"YulExpressionStatement","src":"29730:72:19"}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29408:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29420:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29428:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29436:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29447:4:19","type":""}],"src":"29280:529:19"},{"body":{"nodeType":"YulBlock","src":"29911:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29928:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"29933:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29921:6:19"},"nodeType":"YulFunctionCall","src":"29921:19:19"},"nodeType":"YulExpressionStatement","src":"29921:19:19"},{"nodeType":"YulAssignment","src":"29949:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29968:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29973:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29964:3:19"},"nodeType":"YulFunctionCall","src":"29964:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29949:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29883:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"29888:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29899:11:19","type":""}],"src":"29815:169:19"},{"body":{"nodeType":"YulBlock","src":"30096:60:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30118:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"30126:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30114:3:19"},"nodeType":"YulFunctionCall","src":"30114:14:19"},{"hexValue":"496e73756666696369656e7420666565","kind":"string","nodeType":"YulLiteral","src":"30130:18:19","type":"","value":"Insufficient fee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30107:6:19"},"nodeType":"YulFunctionCall","src":"30107:42:19"},"nodeType":"YulExpressionStatement","src":"30107:42:19"}]},"name":"store_literal_in_memory_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30088:6:19","type":""}],"src":"29990:166:19"},{"body":{"nodeType":"YulBlock","src":"30308:220:19","statements":[{"nodeType":"YulAssignment","src":"30318:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30384:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30389:2:19","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30325:58:19"},"nodeType":"YulFunctionCall","src":"30325:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30318:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30490:3:19"}],"functionName":{"name":"store_literal_in_memory_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","nodeType":"YulIdentifier","src":"30401:88:19"},"nodeType":"YulFunctionCall","src":"30401:93:19"},"nodeType":"YulExpressionStatement","src":"30401:93:19"},{"nodeType":"YulAssignment","src":"30503:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30514:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30519:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30510:3:19"},"nodeType":"YulFunctionCall","src":"30510:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30503:3:19"}]}]},"name":"abi_encode_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30296:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30304:3:19","type":""}],"src":"30162:366:19"},{"body":{"nodeType":"YulBlock","src":"30705:248:19","statements":[{"nodeType":"YulAssignment","src":"30715:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30727:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"30738:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30723:3:19"},"nodeType":"YulFunctionCall","src":"30723:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30715:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30762:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"30773:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30758:3:19"},"nodeType":"YulFunctionCall","src":"30758:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30781:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"30787:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30777:3:19"},"nodeType":"YulFunctionCall","src":"30777:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30751:6:19"},"nodeType":"YulFunctionCall","src":"30751:47:19"},"nodeType":"YulExpressionStatement","src":"30751:47:19"},{"nodeType":"YulAssignment","src":"30807:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30941:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30815:124:19"},"nodeType":"YulFunctionCall","src":"30815:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30807:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30685:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30700:4:19","type":""}],"src":"30534:419:19"},{"body":{"nodeType":"YulBlock","src":"31072:34:19","statements":[{"nodeType":"YulAssignment","src":"31082:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"31097:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"31082:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31044:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"31049:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"31060:11:19","type":""}],"src":"30959:147:19"},{"body":{"nodeType":"YulBlock","src":"31218:8:19","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31210:6:19","type":""}],"src":"31112:114:19"},{"body":{"nodeType":"YulBlock","src":"31395:235:19","statements":[{"nodeType":"YulAssignment","src":"31405:90:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31488:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31493:1:19","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31412:75:19"},"nodeType":"YulFunctionCall","src":"31412:83:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31405:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31593:3:19"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"31504:88:19"},"nodeType":"YulFunctionCall","src":"31504:93:19"},"nodeType":"YulExpressionStatement","src":"31504:93:19"},{"nodeType":"YulAssignment","src":"31606:18:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31617:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31622:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31613:3:19"},"nodeType":"YulFunctionCall","src":"31613:11:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31606:3:19"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31383:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31391:3:19","type":""}],"src":"31232:398:19"},{"body":{"nodeType":"YulBlock","src":"31824:191:19","statements":[{"nodeType":"YulAssignment","src":"31835:154:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31985:3:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31842:141:19"},"nodeType":"YulFunctionCall","src":"31842:147:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31835:3:19"}]},{"nodeType":"YulAssignment","src":"31999:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"32006:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31999:3:19"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31811:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31820:3:19","type":""}],"src":"31636:379:19"},{"body":{"nodeType":"YulBlock","src":"32127:59:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32149:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"32157:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32145:3:19"},"nodeType":"YulFunctionCall","src":"32145:14:19"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"32161:17:19","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32138:6:19"},"nodeType":"YulFunctionCall","src":"32138:41:19"},"nodeType":"YulExpressionStatement","src":"32138:41:19"}]},"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32119:6:19","type":""}],"src":"32021:165:19"},{"body":{"nodeType":"YulBlock","src":"32338:220:19","statements":[{"nodeType":"YulAssignment","src":"32348:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32414:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"32419:2:19","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32355:58:19"},"nodeType":"YulFunctionCall","src":"32355:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32348:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32520:3:19"}],"functionName":{"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nodeType":"YulIdentifier","src":"32431:88:19"},"nodeType":"YulFunctionCall","src":"32431:93:19"},"nodeType":"YulExpressionStatement","src":"32431:93:19"},{"nodeType":"YulAssignment","src":"32533:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32544:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"32549:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32540:3:19"},"nodeType":"YulFunctionCall","src":"32540:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32533:3:19"}]}]},"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32326:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32334:3:19","type":""}],"src":"32192:366:19"},{"body":{"nodeType":"YulBlock","src":"32735:248:19","statements":[{"nodeType":"YulAssignment","src":"32745:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32757:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"32768:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32753:3:19"},"nodeType":"YulFunctionCall","src":"32753:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32745:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32792:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"32803:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32788:3:19"},"nodeType":"YulFunctionCall","src":"32788:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32811:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"32817:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32807:3:19"},"nodeType":"YulFunctionCall","src":"32807:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32781:6:19"},"nodeType":"YulFunctionCall","src":"32781:47:19"},"nodeType":"YulExpressionStatement","src":"32781:47:19"},{"nodeType":"YulAssignment","src":"32837:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32971:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32845:124:19"},"nodeType":"YulFunctionCall","src":"32845:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32837:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32715:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32730:4:19","type":""}],"src":"32564:419:19"},{"body":{"nodeType":"YulBlock","src":"33017:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33034:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33037:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33027:6:19"},"nodeType":"YulFunctionCall","src":"33027:88:19"},"nodeType":"YulExpressionStatement","src":"33027:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33131:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33134:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33124:6:19"},"nodeType":"YulFunctionCall","src":"33124:15:19"},"nodeType":"YulExpressionStatement","src":"33124:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33155:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33158:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33148:6:19"},"nodeType":"YulFunctionCall","src":"33148:15:19"},"nodeType":"YulExpressionStatement","src":"33148:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"32989:180:19"},{"body":{"nodeType":"YulBlock","src":"33203:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33220:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33223:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33213:6:19"},"nodeType":"YulFunctionCall","src":"33213:88:19"},"nodeType":"YulExpressionStatement","src":"33213:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33317:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33320:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33310:6:19"},"nodeType":"YulFunctionCall","src":"33310:15:19"},"nodeType":"YulExpressionStatement","src":"33310:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33341:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33344:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33334:6:19"},"nodeType":"YulFunctionCall","src":"33334:15:19"},"nodeType":"YulExpressionStatement","src":"33334:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"33175:180:19"},{"body":{"nodeType":"YulBlock","src":"33404:190:19","statements":[{"nodeType":"YulAssignment","src":"33414:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33441:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33423:17:19"},"nodeType":"YulFunctionCall","src":"33423:24:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33414:5:19"}]},{"body":{"nodeType":"YulBlock","src":"33537:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"33539:16:19"},"nodeType":"YulFunctionCall","src":"33539:18:19"},"nodeType":"YulExpressionStatement","src":"33539:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33462:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"33469:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33459:2:19"},"nodeType":"YulFunctionCall","src":"33459:77:19"},"nodeType":"YulIf","src":"33456:103:19"},{"nodeType":"YulAssignment","src":"33568:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33579:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"33586:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33575:3:19"},"nodeType":"YulFunctionCall","src":"33575:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33568:3:19"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33390:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33400:3:19","type":""}],"src":"33361:233:19"},{"body":{"nodeType":"YulBlock","src":"33706:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33728:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"33736:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33724:3:19"},"nodeType":"YulFunctionCall","src":"33724:14:19"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"33740:34:19","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33717:6:19"},"nodeType":"YulFunctionCall","src":"33717:58:19"},"nodeType":"YulExpressionStatement","src":"33717:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33796:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"33804:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33792:3:19"},"nodeType":"YulFunctionCall","src":"33792:15:19"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"33809:8:19","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33785:6:19"},"nodeType":"YulFunctionCall","src":"33785:33:19"},"nodeType":"YulExpressionStatement","src":"33785:33:19"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33698:6:19","type":""}],"src":"33600:225:19"},{"body":{"nodeType":"YulBlock","src":"33977:220:19","statements":[{"nodeType":"YulAssignment","src":"33987:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34053:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"34058:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33994:58:19"},"nodeType":"YulFunctionCall","src":"33994:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33987:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34159:3:19"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"34070:88:19"},"nodeType":"YulFunctionCall","src":"34070:93:19"},"nodeType":"YulExpressionStatement","src":"34070:93:19"},{"nodeType":"YulAssignment","src":"34172:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34183:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"34188:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34179:3:19"},"nodeType":"YulFunctionCall","src":"34179:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34172:3:19"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33965:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33973:3:19","type":""}],"src":"33831:366:19"},{"body":{"nodeType":"YulBlock","src":"34374:248:19","statements":[{"nodeType":"YulAssignment","src":"34384:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34396:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"34407:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34392:3:19"},"nodeType":"YulFunctionCall","src":"34392:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34384:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34431:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"34442:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34427:3:19"},"nodeType":"YulFunctionCall","src":"34427:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34450:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"34456:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34446:3:19"},"nodeType":"YulFunctionCall","src":"34446:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34420:6:19"},"nodeType":"YulFunctionCall","src":"34420:47:19"},"nodeType":"YulExpressionStatement","src":"34420:47:19"},{"nodeType":"YulAssignment","src":"34476:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34610:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34484:124:19"},"nodeType":"YulFunctionCall","src":"34484:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34476:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34354:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34369:4:19","type":""}],"src":"34203:419:19"},{"body":{"nodeType":"YulBlock","src":"34672:147:19","statements":[{"nodeType":"YulAssignment","src":"34682:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34705:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34687:17:19"},"nodeType":"YulFunctionCall","src":"34687:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34682:1:19"}]},{"nodeType":"YulAssignment","src":"34716:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34739:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34721:17:19"},"nodeType":"YulFunctionCall","src":"34721:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34716:1:19"}]},{"nodeType":"YulAssignment","src":"34750:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34761:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"34764:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34757:3:19"},"nodeType":"YulFunctionCall","src":"34757:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"34750:3:19"}]},{"body":{"nodeType":"YulBlock","src":"34790:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34792:16:19"},"nodeType":"YulFunctionCall","src":"34792:18:19"},"nodeType":"YulExpressionStatement","src":"34792:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34782:1:19"},{"name":"sum","nodeType":"YulIdentifier","src":"34785:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34779:2:19"},"nodeType":"YulFunctionCall","src":"34779:10:19"},"nodeType":"YulIf","src":"34776:36:19"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34659:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"34662:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"34668:3:19","type":""}],"src":"34628:191:19"},{"body":{"nodeType":"YulBlock","src":"34873:362:19","statements":[{"nodeType":"YulAssignment","src":"34883:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34906:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34888:17:19"},"nodeType":"YulFunctionCall","src":"34888:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34883:1:19"}]},{"nodeType":"YulAssignment","src":"34917:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34940:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34922:17:19"},"nodeType":"YulFunctionCall","src":"34922:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34917:1:19"}]},{"nodeType":"YulVariableDeclaration","src":"34951:28:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34974:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"34977:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34970:3:19"},"nodeType":"YulFunctionCall","src":"34970:9:19"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"34955:11:19","type":""}]},{"nodeType":"YulAssignment","src":"34988:41:19","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"35017:11:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34999:17:19"},"nodeType":"YulFunctionCall","src":"34999:30:19"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"34988:7:19"}]},{"body":{"nodeType":"YulBlock","src":"35206:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35208:16:19"},"nodeType":"YulFunctionCall","src":"35208:18:19"},"nodeType":"YulExpressionStatement","src":"35208:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35139:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35132:6:19"},"nodeType":"YulFunctionCall","src":"35132:9:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35162:1:19"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"35169:7:19"},{"name":"x","nodeType":"YulIdentifier","src":"35178:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"35165:3:19"},"nodeType":"YulFunctionCall","src":"35165:15:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"35159:2:19"},"nodeType":"YulFunctionCall","src":"35159:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"35112:2:19"},"nodeType":"YulFunctionCall","src":"35112:83:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35092:6:19"},"nodeType":"YulFunctionCall","src":"35092:113:19"},"nodeType":"YulIf","src":"35089:139:19"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34856:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"34859:1:19","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"34865:7:19","type":""}],"src":"34825:410:19"},{"body":{"nodeType":"YulBlock","src":"35269:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35286:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35289:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35279:6:19"},"nodeType":"YulFunctionCall","src":"35279:88:19"},"nodeType":"YulExpressionStatement","src":"35279:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35383:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"35386:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35376:6:19"},"nodeType":"YulFunctionCall","src":"35376:15:19"},"nodeType":"YulExpressionStatement","src":"35376:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35407:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35410:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35400:6:19"},"nodeType":"YulFunctionCall","src":"35400:15:19"},"nodeType":"YulExpressionStatement","src":"35400:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"35241:180:19"},{"body":{"nodeType":"YulBlock","src":"35469:143:19","statements":[{"nodeType":"YulAssignment","src":"35479:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35502:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35484:17:19"},"nodeType":"YulFunctionCall","src":"35484:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35479:1:19"}]},{"nodeType":"YulAssignment","src":"35513:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35536:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35518:17:19"},"nodeType":"YulFunctionCall","src":"35518:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35513:1:19"}]},{"body":{"nodeType":"YulBlock","src":"35560:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"35562:16:19"},"nodeType":"YulFunctionCall","src":"35562:18:19"},"nodeType":"YulExpressionStatement","src":"35562:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35557:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35550:6:19"},"nodeType":"YulFunctionCall","src":"35550:9:19"},"nodeType":"YulIf","src":"35547:35:19"},{"nodeType":"YulAssignment","src":"35592:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35601:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"35604:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"35597:3:19"},"nodeType":"YulFunctionCall","src":"35597:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"35592:1:19"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35458:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"35461:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"35467:1:19","type":""}],"src":"35427:185:19"},{"body":{"nodeType":"YulBlock","src":"35663:149:19","statements":[{"nodeType":"YulAssignment","src":"35673:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35696:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35678:17:19"},"nodeType":"YulFunctionCall","src":"35678:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35673:1:19"}]},{"nodeType":"YulAssignment","src":"35707:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35730:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35712:17:19"},"nodeType":"YulFunctionCall","src":"35712:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35707:1:19"}]},{"nodeType":"YulAssignment","src":"35741:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35753:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"35756:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35749:3:19"},"nodeType":"YulFunctionCall","src":"35749:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"35741:4:19"}]},{"body":{"nodeType":"YulBlock","src":"35783:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35785:16:19"},"nodeType":"YulFunctionCall","src":"35785:18:19"},"nodeType":"YulExpressionStatement","src":"35785:18:19"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"35774:4:19"},{"name":"x","nodeType":"YulIdentifier","src":"35780:1:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35771:2:19"},"nodeType":"YulFunctionCall","src":"35771:11:19"},"nodeType":"YulIf","src":"35768:37:19"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35649:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"35652:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"35658:4:19","type":""}],"src":"35618:194:19"},{"body":{"nodeType":"YulBlock","src":"35852:142:19","statements":[{"nodeType":"YulAssignment","src":"35862:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35885:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35867:17:19"},"nodeType":"YulFunctionCall","src":"35867:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35862:1:19"}]},{"nodeType":"YulAssignment","src":"35896:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35919:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35901:17:19"},"nodeType":"YulFunctionCall","src":"35901:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35896:1:19"}]},{"body":{"nodeType":"YulBlock","src":"35943:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"35945:16:19"},"nodeType":"YulFunctionCall","src":"35945:18:19"},"nodeType":"YulExpressionStatement","src":"35945:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35940:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35933:6:19"},"nodeType":"YulFunctionCall","src":"35933:9:19"},"nodeType":"YulIf","src":"35930:35:19"},{"nodeType":"YulAssignment","src":"35974:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35983:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"35986:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"35979:3:19"},"nodeType":"YulFunctionCall","src":"35979:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"35974:1:19"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35841:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"35844:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"35850:1:19","type":""}],"src":"35818:176:19"},{"body":{"nodeType":"YulBlock","src":"36053:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36070:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36092:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"36075:16:19"},"nodeType":"YulFunctionCall","src":"36075:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36063:6:19"},"nodeType":"YulFunctionCall","src":"36063:36:19"},"nodeType":"YulExpressionStatement","src":"36063:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36041:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36048:3:19","type":""}],"src":"36000:105:19"},{"body":{"nodeType":"YulBlock","src":"36166:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36183:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36206:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"36188:17:19"},"nodeType":"YulFunctionCall","src":"36188:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36176:6:19"},"nodeType":"YulFunctionCall","src":"36176:37:19"},"nodeType":"YulExpressionStatement","src":"36176:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36154:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36161:3:19","type":""}],"src":"36111:108:19"},{"body":{"nodeType":"YulBlock","src":"36274:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36291:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36311:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"36296:14:19"},"nodeType":"YulFunctionCall","src":"36296:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36284:6:19"},"nodeType":"YulFunctionCall","src":"36284:34:19"},"nodeType":"YulExpressionStatement","src":"36284:34:19"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36262:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36269:3:19","type":""}],"src":"36225:99:19"},{"body":{"nodeType":"YulBlock","src":"36522:1083:19","statements":[{"nodeType":"YulVariableDeclaration","src":"36532:26:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36548:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"36553:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36544:3:19"},"nodeType":"YulFunctionCall","src":"36544:14:19"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"36536:4:19","type":""}]},{"nodeType":"YulBlock","src":"36568:164:19","statements":[{"nodeType":"YulVariableDeclaration","src":"36605:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36635:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"36642:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36631:3:19"},"nodeType":"YulFunctionCall","src":"36631:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36625:5:19"},"nodeType":"YulFunctionCall","src":"36625:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"36609:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"36693:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36711:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"36716:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36707:3:19"},"nodeType":"YulFunctionCall","src":"36707:14:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"36661:31:19"},"nodeType":"YulFunctionCall","src":"36661:61:19"},"nodeType":"YulExpressionStatement","src":"36661:61:19"}]},{"nodeType":"YulBlock","src":"36742:168:19","statements":[{"nodeType":"YulVariableDeclaration","src":"36781:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36811:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"36818:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36807:3:19"},"nodeType":"YulFunctionCall","src":"36807:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36801:5:19"},"nodeType":"YulFunctionCall","src":"36801:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"36785:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"36871:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36889:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"36894:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36885:3:19"},"nodeType":"YulFunctionCall","src":"36885:14:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"36837:33:19"},"nodeType":"YulFunctionCall","src":"36837:63:19"},"nodeType":"YulExpressionStatement","src":"36837:63:19"}]},{"nodeType":"YulBlock","src":"36920:236:19","statements":[{"nodeType":"YulVariableDeclaration","src":"36958:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36988:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"36995:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36984:3:19"},"nodeType":"YulFunctionCall","src":"36984:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36978:5:19"},"nodeType":"YulFunctionCall","src":"36978:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"36962:12:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37026:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37031:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37022:3:19"},"nodeType":"YulFunctionCall","src":"37022:14:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37042:4:19"},{"name":"pos","nodeType":"YulIdentifier","src":"37048:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37038:3:19"},"nodeType":"YulFunctionCall","src":"37038:14:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37015:6:19"},"nodeType":"YulFunctionCall","src":"37015:38:19"},"nodeType":"YulExpressionStatement","src":"37015:38:19"},{"nodeType":"YulAssignment","src":"37066:79:19","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"37126:12:19"},{"name":"tail","nodeType":"YulIdentifier","src":"37140:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"37074:51:19"},"nodeType":"YulFunctionCall","src":"37074:71:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37066:4:19"}]}]},{"nodeType":"YulBlock","src":"37166:236:19","statements":[{"nodeType":"YulVariableDeclaration","src":"37204:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37234:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"37241:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37230:3:19"},"nodeType":"YulFunctionCall","src":"37230:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37224:5:19"},"nodeType":"YulFunctionCall","src":"37224:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"37208:12:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37272:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37277:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37268:3:19"},"nodeType":"YulFunctionCall","src":"37268:14:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37288:4:19"},{"name":"pos","nodeType":"YulIdentifier","src":"37294:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37284:3:19"},"nodeType":"YulFunctionCall","src":"37284:14:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37261:6:19"},"nodeType":"YulFunctionCall","src":"37261:38:19"},"nodeType":"YulExpressionStatement","src":"37261:38:19"},{"nodeType":"YulAssignment","src":"37312:79:19","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"37372:12:19"},{"name":"tail","nodeType":"YulIdentifier","src":"37386:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"37320:51:19"},"nodeType":"YulFunctionCall","src":"37320:71:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37312:4:19"}]}]},{"nodeType":"YulBlock","src":"37412:166:19","statements":[{"nodeType":"YulVariableDeclaration","src":"37455:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37485:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"37492:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37481:3:19"},"nodeType":"YulFunctionCall","src":"37481:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37475:5:19"},"nodeType":"YulFunctionCall","src":"37475:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"37459:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"37539:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37557:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37562:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37553:3:19"},"nodeType":"YulFunctionCall","src":"37553:14:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"37511:27:19"},"nodeType":"YulFunctionCall","src":"37511:57:19"},"nodeType":"YulExpressionStatement","src":"37511:57:19"}]},{"nodeType":"YulAssignment","src":"37588:11:19","value":{"name":"tail","nodeType":"YulIdentifier","src":"37595:4:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37588:3:19"}]}]},"name":"abi_encode_t_struct$_MessagingParams_$20_memory_ptr_to_t_struct$_MessagingParams_$20_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36501:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36508:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36517:3:19","type":""}],"src":"36386:1219:19"},{"body":{"nodeType":"YulBlock","src":"37799:319:19","statements":[{"nodeType":"YulAssignment","src":"37809:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37821:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"37832:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37817:3:19"},"nodeType":"YulFunctionCall","src":"37817:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37809:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37856:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"37867:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37852:3:19"},"nodeType":"YulFunctionCall","src":"37852:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37875:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"37881:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37871:3:19"},"nodeType":"YulFunctionCall","src":"37871:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37845:6:19"},"nodeType":"YulFunctionCall","src":"37845:47:19"},"nodeType":"YulExpressionStatement","src":"37845:47:19"},{"nodeType":"YulAssignment","src":"37901:128:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38015:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"38024:4:19"}],"functionName":{"name":"abi_encode_t_struct$_MessagingParams_$20_memory_ptr_to_t_struct$_MessagingParams_$20_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37909:105:19"},"nodeType":"YulFunctionCall","src":"37909:120:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37901:4:19"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38083:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38096:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"38107:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38092:3:19"},"nodeType":"YulFunctionCall","src":"38092:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38039:43:19"},"nodeType":"YulFunctionCall","src":"38039:72:19"},"nodeType":"YulExpressionStatement","src":"38039:72:19"}]},"name":"abi_encode_tuple_t_struct$_MessagingParams_$20_memory_ptr_t_address__to_t_struct$_MessagingParams_$20_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37763:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37775:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37783:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37794:4:19","type":""}],"src":"37611:507:19"},{"body":{"nodeType":"YulBlock","src":"38213:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38230:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38233:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38223:6:19"},"nodeType":"YulFunctionCall","src":"38223:12:19"},"nodeType":"YulExpressionStatement","src":"38223:12:19"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"38124:117:19"},{"body":{"nodeType":"YulBlock","src":"38336:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38353:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38356:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38346:6:19"},"nodeType":"YulFunctionCall","src":"38346:12:19"},"nodeType":"YulExpressionStatement","src":"38346:12:19"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"38247:117:19"},{"body":{"nodeType":"YulBlock","src":"38433:80:19","statements":[{"nodeType":"YulAssignment","src":"38443:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"38458:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38452:5:19"},"nodeType":"YulFunctionCall","src":"38452:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38443:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38501:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"38474:26:19"},"nodeType":"YulFunctionCall","src":"38474:33:19"},"nodeType":"YulExpressionStatement","src":"38474:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"38411:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"38419:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"38427:5:19","type":""}],"src":"38370:143:19"},{"body":{"nodeType":"YulBlock","src":"38640:527:19","statements":[{"body":{"nodeType":"YulBlock","src":"38684:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"38686:77:19"},"nodeType":"YulFunctionCall","src":"38686:79:19"},"nodeType":"YulExpressionStatement","src":"38686:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"38661:3:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"38666:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38657:3:19"},"nodeType":"YulFunctionCall","src":"38657:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"38678:4:19","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38653:3:19"},"nodeType":"YulFunctionCall","src":"38653:30:19"},"nodeType":"YulIf","src":"38650:117:19"},{"nodeType":"YulAssignment","src":"38776:30:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38801:4:19","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"38785:15:19"},"nodeType":"YulFunctionCall","src":"38785:21:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38776:5:19"}]},{"nodeType":"YulBlock","src":"38816:166:19","statements":[{"nodeType":"YulVariableDeclaration","src":"38856:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"38870:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38860:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38896:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"38903:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38892:3:19"},"nodeType":"YulFunctionCall","src":"38892:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38946:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"38957:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38942:3:19"},"nodeType":"YulFunctionCall","src":"38942:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"38966:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"38910:31:19"},"nodeType":"YulFunctionCall","src":"38910:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38885:6:19"},"nodeType":"YulFunctionCall","src":"38885:86:19"},"nodeType":"YulExpressionStatement","src":"38885:86:19"}]},{"nodeType":"YulBlock","src":"38992:168:19","statements":[{"nodeType":"YulVariableDeclaration","src":"39033:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"39047:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39037:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39074:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"39081:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39070:3:19"},"nodeType":"YulFunctionCall","src":"39070:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39124:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"39135:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39120:3:19"},"nodeType":"YulFunctionCall","src":"39120:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"39144:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"39088:31:19"},"nodeType":"YulFunctionCall","src":"39088:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39063:6:19"},"nodeType":"YulFunctionCall","src":"39063:86:19"},"nodeType":"YulExpressionStatement","src":"39063:86:19"}]}]},"name":"abi_decode_t_struct$_MessagingFee_$33_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38615:9:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"38626:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"38634:5:19","type":""}],"src":"38546:621:19"},{"body":{"nodeType":"YulBlock","src":"39278:302:19","statements":[{"body":{"nodeType":"YulBlock","src":"39324:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"39326:77:19"},"nodeType":"YulFunctionCall","src":"39326:79:19"},"nodeType":"YulExpressionStatement","src":"39326:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"39299:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"39308:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39295:3:19"},"nodeType":"YulFunctionCall","src":"39295:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"39320:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"39291:3:19"},"nodeType":"YulFunctionCall","src":"39291:32:19"},"nodeType":"YulIf","src":"39288:119:19"},{"nodeType":"YulBlock","src":"39417:156:19","statements":[{"nodeType":"YulVariableDeclaration","src":"39432:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"39446:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39436:6:19","type":""}]},{"nodeType":"YulAssignment","src":"39461:102:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39535:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"39546:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39531:3:19"},"nodeType":"YulFunctionCall","src":"39531:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"39555:7:19"}],"functionName":{"name":"abi_decode_t_struct$_MessagingFee_$33_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"39471:59:19"},"nodeType":"YulFunctionCall","src":"39471:92:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"39461:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_MessagingFee_$33_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39248:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"39259:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"39271:6:19","type":""}],"src":"39173:407:19"},{"body":{"nodeType":"YulBlock","src":"39649:80:19","statements":[{"nodeType":"YulAssignment","src":"39659:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"39674:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39668:5:19"},"nodeType":"YulFunctionCall","src":"39668:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"39659:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39717:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"39690:26:19"},"nodeType":"YulFunctionCall","src":"39690:33:19"},"nodeType":"YulExpressionStatement","src":"39690:33:19"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"39627:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"39635:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"39643:5:19","type":""}],"src":"39586:143:19"},{"body":{"nodeType":"YulBlock","src":"39777:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"39833:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39842:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39845:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"39835:6:19"},"nodeType":"YulFunctionCall","src":"39835:12:19"},"nodeType":"YulExpressionStatement","src":"39835:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39800:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39824:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"39807:16:19"},"nodeType":"YulFunctionCall","src":"39807:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"39797:2:19"},"nodeType":"YulFunctionCall","src":"39797:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39790:6:19"},"nodeType":"YulFunctionCall","src":"39790:42:19"},"nodeType":"YulIf","src":"39787:62:19"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39770:5:19","type":""}],"src":"39735:120:19"},{"body":{"nodeType":"YulBlock","src":"39923:79:19","statements":[{"nodeType":"YulAssignment","src":"39933:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"39948:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39942:5:19"},"nodeType":"YulFunctionCall","src":"39942:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"39933:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39990:5:19"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"39964:25:19"},"nodeType":"YulFunctionCall","src":"39964:32:19"},"nodeType":"YulExpressionStatement","src":"39964:32:19"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"39901:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"39909:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"39917:5:19","type":""}],"src":"39861:141:19"},{"body":{"nodeType":"YulBlock","src":"40137:715:19","statements":[{"body":{"nodeType":"YulBlock","src":"40181:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"40183:77:19"},"nodeType":"YulFunctionCall","src":"40183:79:19"},"nodeType":"YulExpressionStatement","src":"40183:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"40158:3:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"40163:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40154:3:19"},"nodeType":"YulFunctionCall","src":"40154:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"40175:4:19","type":"","value":"0x80"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"40150:3:19"},"nodeType":"YulFunctionCall","src":"40150:30:19"},"nodeType":"YulIf","src":"40147:117:19"},{"nodeType":"YulAssignment","src":"40273:30:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40298:4:19","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"40282:15:19"},"nodeType":"YulFunctionCall","src":"40282:21:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"40273:5:19"}]},{"nodeType":"YulBlock","src":"40313:161:19","statements":[{"nodeType":"YulVariableDeclaration","src":"40348:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"40362:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"40352:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40388:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"40395:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40384:3:19"},"nodeType":"YulFunctionCall","src":"40384:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40438:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"40449:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40434:3:19"},"nodeType":"YulFunctionCall","src":"40434:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"40458:3:19"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"40402:31:19"},"nodeType":"YulFunctionCall","src":"40402:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40377:6:19"},"nodeType":"YulFunctionCall","src":"40377:86:19"},"nodeType":"YulExpressionStatement","src":"40377:86:19"}]},{"nodeType":"YulBlock","src":"40484:162:19","statements":[{"nodeType":"YulVariableDeclaration","src":"40520:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"40534:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"40524:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40561:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"40568:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40557:3:19"},"nodeType":"YulFunctionCall","src":"40557:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40610:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"40621:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40606:3:19"},"nodeType":"YulFunctionCall","src":"40606:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"40630:3:19"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"40575:30:19"},"nodeType":"YulFunctionCall","src":"40575:59:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40550:6:19"},"nodeType":"YulFunctionCall","src":"40550:85:19"},"nodeType":"YulExpressionStatement","src":"40550:85:19"}]},{"nodeType":"YulBlock","src":"40656:189:19","statements":[{"nodeType":"YulVariableDeclaration","src":"40690:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"40704:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"40694:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40731:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"40738:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40727:3:19"},"nodeType":"YulFunctionCall","src":"40727:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40809:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"40820:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40805:3:19"},"nodeType":"YulFunctionCall","src":"40805:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"40829:3:19"}],"functionName":{"name":"abi_decode_t_struct$_MessagingFee_$33_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"40745:59:19"},"nodeType":"YulFunctionCall","src":"40745:88:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40720:6:19"},"nodeType":"YulFunctionCall","src":"40720:114:19"},"nodeType":"YulExpressionStatement","src":"40720:114:19"}]}]},"name":"abi_decode_t_struct$_MessagingReceipt_$28_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40112:9:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"40123:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"40131:5:19","type":""}],"src":"40039:813:19"},{"body":{"nodeType":"YulBlock","src":"40967:307:19","statements":[{"body":{"nodeType":"YulBlock","src":"41014:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"41016:77:19"},"nodeType":"YulFunctionCall","src":"41016:79:19"},"nodeType":"YulExpressionStatement","src":"41016:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"40988:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"40997:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40984:3:19"},"nodeType":"YulFunctionCall","src":"40984:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"41009:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"40980:3:19"},"nodeType":"YulFunctionCall","src":"40980:33:19"},"nodeType":"YulIf","src":"40977:120:19"},{"nodeType":"YulBlock","src":"41107:160:19","statements":[{"nodeType":"YulVariableDeclaration","src":"41122:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"41136:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"41126:6:19","type":""}]},{"nodeType":"YulAssignment","src":"41151:106:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41229:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"41240:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41225:3:19"},"nodeType":"YulFunctionCall","src":"41225:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"41249:7:19"}],"functionName":{"name":"abi_decode_t_struct$_MessagingReceipt_$28_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"41161:63:19"},"nodeType":"YulFunctionCall","src":"41161:96:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"41151:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_MessagingReceipt_$28_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40937:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"40948:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"40960:6:19","type":""}],"src":"40858:416:19"},{"body":{"nodeType":"YulBlock","src":"41386:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41408:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41416:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41404:3:19"},"nodeType":"YulFunctionCall","src":"41404:14:19"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"41420:34:19","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41397:6:19"},"nodeType":"YulFunctionCall","src":"41397:58:19"},"nodeType":"YulExpressionStatement","src":"41397:58:19"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41378:6:19","type":""}],"src":"41280:182:19"},{"body":{"nodeType":"YulBlock","src":"41614:220:19","statements":[{"nodeType":"YulAssignment","src":"41624:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41690:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"41695:2:19","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41631:58:19"},"nodeType":"YulFunctionCall","src":"41631:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41624:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41796:3:19"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"41707:88:19"},"nodeType":"YulFunctionCall","src":"41707:93:19"},"nodeType":"YulExpressionStatement","src":"41707:93:19"},{"nodeType":"YulAssignment","src":"41809:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41820:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"41825:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41816:3:19"},"nodeType":"YulFunctionCall","src":"41816:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41809:3:19"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41602:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41610:3:19","type":""}],"src":"41468:366:19"},{"body":{"nodeType":"YulBlock","src":"42011:248:19","statements":[{"nodeType":"YulAssignment","src":"42021:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42033:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42044:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42029:3:19"},"nodeType":"YulFunctionCall","src":"42029:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42021:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42068:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42079:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42064:3:19"},"nodeType":"YulFunctionCall","src":"42064:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42087:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"42093:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42083:3:19"},"nodeType":"YulFunctionCall","src":"42083:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42057:6:19"},"nodeType":"YulFunctionCall","src":"42057:47:19"},"nodeType":"YulExpressionStatement","src":"42057:47:19"},{"nodeType":"YulAssignment","src":"42113:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42247:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42121:124:19"},"nodeType":"YulFunctionCall","src":"42121:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42113:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41991:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42006:4:19","type":""}],"src":"41840:419:19"},{"body":{"nodeType":"YulBlock","src":"42328:80:19","statements":[{"nodeType":"YulAssignment","src":"42338:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"42353:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42347:5:19"},"nodeType":"YulFunctionCall","src":"42347:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42338:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42396:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"42369:26:19"},"nodeType":"YulFunctionCall","src":"42369:33:19"},"nodeType":"YulExpressionStatement","src":"42369:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42306:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"42314:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"42322:5:19","type":""}],"src":"42265:143:19"},{"body":{"nodeType":"YulBlock","src":"42491:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"42537:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"42539:77:19"},"nodeType":"YulFunctionCall","src":"42539:79:19"},"nodeType":"YulExpressionStatement","src":"42539:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"42512:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"42521:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42508:3:19"},"nodeType":"YulFunctionCall","src":"42508:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"42533:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"42504:3:19"},"nodeType":"YulFunctionCall","src":"42504:32:19"},"nodeType":"YulIf","src":"42501:119:19"},{"nodeType":"YulBlock","src":"42630:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"42645:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"42659:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42649:6:19","type":""}]},{"nodeType":"YulAssignment","src":"42674:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42720:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"42731:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42716:3:19"},"nodeType":"YulFunctionCall","src":"42716:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"42740:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"42684:31:19"},"nodeType":"YulFunctionCall","src":"42684:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"42674:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42461:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"42472:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"42484:6:19","type":""}],"src":"42414:351:19"},{"body":{"nodeType":"YulBlock","src":"42925:288:19","statements":[{"nodeType":"YulAssignment","src":"42935:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42947:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42958:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42943:3:19"},"nodeType":"YulFunctionCall","src":"42943:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42935:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43015:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43028:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43039:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43024:3:19"},"nodeType":"YulFunctionCall","src":"43024:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"42971:43:19"},"nodeType":"YulFunctionCall","src":"42971:71:19"},"nodeType":"YulExpressionStatement","src":"42971:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43096:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43109:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43120:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43105:3:19"},"nodeType":"YulFunctionCall","src":"43105:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43052:43:19"},"nodeType":"YulFunctionCall","src":"43052:72:19"},"nodeType":"YulExpressionStatement","src":"43052:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"43178:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43191:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43202:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43187:3:19"},"nodeType":"YulFunctionCall","src":"43187:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"43134:43:19"},"nodeType":"YulFunctionCall","src":"43134:72:19"},"nodeType":"YulExpressionStatement","src":"43134:72:19"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42881:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42893:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42901:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42909:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42920:4:19","type":""}],"src":"42771:442:19"},{"body":{"nodeType":"YulBlock","src":"43259:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"43313:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43322:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43325:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43315:6:19"},"nodeType":"YulFunctionCall","src":"43315:12:19"},"nodeType":"YulExpressionStatement","src":"43315:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43282:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43304:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"43289:14:19"},"nodeType":"YulFunctionCall","src":"43289:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43279:2:19"},"nodeType":"YulFunctionCall","src":"43279:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43272:6:19"},"nodeType":"YulFunctionCall","src":"43272:40:19"},"nodeType":"YulIf","src":"43269:60:19"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43252:5:19","type":""}],"src":"43219:116:19"},{"body":{"nodeType":"YulBlock","src":"43401:77:19","statements":[{"nodeType":"YulAssignment","src":"43411:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43426:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43420:5:19"},"nodeType":"YulFunctionCall","src":"43420:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43411:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43466:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"43442:23:19"},"nodeType":"YulFunctionCall","src":"43442:30:19"},"nodeType":"YulExpressionStatement","src":"43442:30:19"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43379:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"43387:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"43395:5:19","type":""}],"src":"43341:137:19"},{"body":{"nodeType":"YulBlock","src":"43558:271:19","statements":[{"body":{"nodeType":"YulBlock","src":"43604:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"43606:77:19"},"nodeType":"YulFunctionCall","src":"43606:79:19"},"nodeType":"YulExpressionStatement","src":"43606:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"43579:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"43588:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43575:3:19"},"nodeType":"YulFunctionCall","src":"43575:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"43600:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"43571:3:19"},"nodeType":"YulFunctionCall","src":"43571:32:19"},"nodeType":"YulIf","src":"43568:119:19"},{"nodeType":"YulBlock","src":"43697:125:19","statements":[{"nodeType":"YulVariableDeclaration","src":"43712:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"43726:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"43716:6:19","type":""}]},{"nodeType":"YulAssignment","src":"43741:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43784:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"43795:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43780:3:19"},"nodeType":"YulFunctionCall","src":"43780:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"43804:7:19"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"43751:28:19"},"nodeType":"YulFunctionCall","src":"43751:61:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"43741:6:19"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43528:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"43539:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"43551:6:19","type":""}],"src":"43484:345:19"},{"body":{"nodeType":"YulBlock","src":"43941:123:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43963:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"43971:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43959:3:19"},"nodeType":"YulFunctionCall","src":"43959:14:19"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"43975:34:19","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43952:6:19"},"nodeType":"YulFunctionCall","src":"43952:58:19"},"nodeType":"YulExpressionStatement","src":"43952:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44031:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"44039:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44027:3:19"},"nodeType":"YulFunctionCall","src":"44027:15:19"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"44044:12:19","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44020:6:19"},"nodeType":"YulFunctionCall","src":"44020:37:19"},"nodeType":"YulExpressionStatement","src":"44020:37:19"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43933:6:19","type":""}],"src":"43835:229:19"},{"body":{"nodeType":"YulBlock","src":"44216:220:19","statements":[{"nodeType":"YulAssignment","src":"44226:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44292:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"44297:2:19","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44233:58:19"},"nodeType":"YulFunctionCall","src":"44233:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44226:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44398:3:19"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"44309:88:19"},"nodeType":"YulFunctionCall","src":"44309:93:19"},"nodeType":"YulExpressionStatement","src":"44309:93:19"},{"nodeType":"YulAssignment","src":"44411:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44422:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"44427:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44418:3:19"},"nodeType":"YulFunctionCall","src":"44418:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44411:3:19"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44204:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44212:3:19","type":""}],"src":"44070:366:19"},{"body":{"nodeType":"YulBlock","src":"44613:248:19","statements":[{"nodeType":"YulAssignment","src":"44623:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44635:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"44646:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44631:3:19"},"nodeType":"YulFunctionCall","src":"44631:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44623:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44670:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"44681:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44666:3:19"},"nodeType":"YulFunctionCall","src":"44666:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44689:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"44695:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44685:3:19"},"nodeType":"YulFunctionCall","src":"44685:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44659:6:19"},"nodeType":"YulFunctionCall","src":"44659:47:19"},"nodeType":"YulExpressionStatement","src":"44659:47:19"},{"nodeType":"YulAssignment","src":"44715:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44849:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44723:124:19"},"nodeType":"YulFunctionCall","src":"44723:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44715:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44593:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44608:4:19","type":""}],"src":"44442:419:19"},{"body":{"nodeType":"YulBlock","src":"44973:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44995:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"45003:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44991:3:19"},"nodeType":"YulFunctionCall","src":"44991:14:19"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"45007:34:19","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44984:6:19"},"nodeType":"YulFunctionCall","src":"44984:58:19"},"nodeType":"YulExpressionStatement","src":"44984:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45063:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"45071:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45059:3:19"},"nodeType":"YulFunctionCall","src":"45059:15:19"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"45076:8:19","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45052:6:19"},"nodeType":"YulFunctionCall","src":"45052:33:19"},"nodeType":"YulExpressionStatement","src":"45052:33:19"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44965:6:19","type":""}],"src":"44867:225:19"},{"body":{"nodeType":"YulBlock","src":"45244:220:19","statements":[{"nodeType":"YulAssignment","src":"45254:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45320:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"45325:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45261:58:19"},"nodeType":"YulFunctionCall","src":"45261:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45254:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45426:3:19"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"45337:88:19"},"nodeType":"YulFunctionCall","src":"45337:93:19"},"nodeType":"YulExpressionStatement","src":"45337:93:19"},{"nodeType":"YulAssignment","src":"45439:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45450:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"45455:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45446:3:19"},"nodeType":"YulFunctionCall","src":"45446:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45439:3:19"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45232:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45240:3:19","type":""}],"src":"45098:366:19"},{"body":{"nodeType":"YulBlock","src":"45641:248:19","statements":[{"nodeType":"YulAssignment","src":"45651:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45663:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"45674:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45659:3:19"},"nodeType":"YulFunctionCall","src":"45659:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45651:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45698:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"45709:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45694:3:19"},"nodeType":"YulFunctionCall","src":"45694:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45717:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"45723:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45713:3:19"},"nodeType":"YulFunctionCall","src":"45713:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45687:6:19"},"nodeType":"YulFunctionCall","src":"45687:47:19"},"nodeType":"YulExpressionStatement","src":"45687:47:19"},{"nodeType":"YulAssignment","src":"45743:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45877:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45751:124:19"},"nodeType":"YulFunctionCall","src":"45751:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45743:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45621:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45636:4:19","type":""}],"src":"45470:419:19"},{"body":{"nodeType":"YulBlock","src":"46003:278:19","statements":[{"nodeType":"YulVariableDeclaration","src":"46013:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46059:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"46027:31:19"},"nodeType":"YulFunctionCall","src":"46027:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"46017:6:19","type":""}]},{"nodeType":"YulAssignment","src":"46074:95:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46157:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"46162:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46081:75:19"},"nodeType":"YulFunctionCall","src":"46081:88:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46074:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46217:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"46224:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46213:3:19"},"nodeType":"YulFunctionCall","src":"46213:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"46231:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"46236:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"46178:34:19"},"nodeType":"YulFunctionCall","src":"46178:65:19"},"nodeType":"YulExpressionStatement","src":"46178:65:19"},{"nodeType":"YulAssignment","src":"46252:23:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46263:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"46268:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46259:3:19"},"nodeType":"YulFunctionCall","src":"46259:16:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46252:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45984:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45991:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45999:3:19","type":""}],"src":"45895:386:19"},{"body":{"nodeType":"YulBlock","src":"46421:137:19","statements":[{"nodeType":"YulAssignment","src":"46432:100:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46519:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"46528:3:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46439:79:19"},"nodeType":"YulFunctionCall","src":"46439:93:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46432:3:19"}]},{"nodeType":"YulAssignment","src":"46542:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"46549:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46542:3:19"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46400:3:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46406:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46417:3:19","type":""}],"src":"46287:271:19"},{"body":{"nodeType":"YulBlock","src":"46670:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46692:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"46700:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46688:3:19"},"nodeType":"YulFunctionCall","src":"46688:14:19"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"46704:31:19","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46681:6:19"},"nodeType":"YulFunctionCall","src":"46681:55:19"},"nodeType":"YulExpressionStatement","src":"46681:55:19"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46662:6:19","type":""}],"src":"46564:179:19"},{"body":{"nodeType":"YulBlock","src":"46895:220:19","statements":[{"nodeType":"YulAssignment","src":"46905:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46971:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"46976:2:19","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46912:58:19"},"nodeType":"YulFunctionCall","src":"46912:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46905:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47077:3:19"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"46988:88:19"},"nodeType":"YulFunctionCall","src":"46988:93:19"},"nodeType":"YulExpressionStatement","src":"46988:93:19"},{"nodeType":"YulAssignment","src":"47090:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47101:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"47106:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47097:3:19"},"nodeType":"YulFunctionCall","src":"47097:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47090:3:19"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46883:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46891:3:19","type":""}],"src":"46749:366:19"},{"body":{"nodeType":"YulBlock","src":"47292:248:19","statements":[{"nodeType":"YulAssignment","src":"47302:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47314:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"47325:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47310:3:19"},"nodeType":"YulFunctionCall","src":"47310:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47302:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47349:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"47360:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47345:3:19"},"nodeType":"YulFunctionCall","src":"47345:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47368:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"47374:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47364:3:19"},"nodeType":"YulFunctionCall","src":"47364:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47338:6:19"},"nodeType":"YulFunctionCall","src":"47338:47:19"},"nodeType":"YulExpressionStatement","src":"47338:47:19"},{"nodeType":"YulAssignment","src":"47394:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47528:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47402:124:19"},"nodeType":"YulFunctionCall","src":"47402:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47394:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47272:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47287:4:19","type":""}],"src":"47121:419:19"},{"body":{"nodeType":"YulBlock","src":"47638:285:19","statements":[{"nodeType":"YulVariableDeclaration","src":"47648:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47695:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"47662:32:19"},"nodeType":"YulFunctionCall","src":"47662:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"47652:6:19","type":""}]},{"nodeType":"YulAssignment","src":"47710:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47776:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"47781:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47717:58:19"},"nodeType":"YulFunctionCall","src":"47717:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47710:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47836:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"47843:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47832:3:19"},"nodeType":"YulFunctionCall","src":"47832:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"47850:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"47855:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"47797:34:19"},"nodeType":"YulFunctionCall","src":"47797:65:19"},"nodeType":"YulExpressionStatement","src":"47797:65:19"},{"nodeType":"YulAssignment","src":"47871:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47882:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"47909:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"47887:21:19"},"nodeType":"YulFunctionCall","src":"47887:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47878:3:19"},"nodeType":"YulFunctionCall","src":"47878:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47871:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47619:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47626:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47634:3:19","type":""}],"src":"47546:377:19"},{"body":{"nodeType":"YulBlock","src":"48047:195:19","statements":[{"nodeType":"YulAssignment","src":"48057:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48069:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"48080:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48065:3:19"},"nodeType":"YulFunctionCall","src":"48065:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48057:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48104:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"48115:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48100:3:19"},"nodeType":"YulFunctionCall","src":"48100:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48123:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"48129:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48119:3:19"},"nodeType":"YulFunctionCall","src":"48119:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48093:6:19"},"nodeType":"YulFunctionCall","src":"48093:47:19"},"nodeType":"YulExpressionStatement","src":"48093:47:19"},{"nodeType":"YulAssignment","src":"48149:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48221:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"48230:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48157:63:19"},"nodeType":"YulFunctionCall","src":"48157:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48149:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48019:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48031:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48042:4:19","type":""}],"src":"47929:313:19"}]},"contents":"{\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct Origin\n    function abi_decode_t_struct$_Origin_$40_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 96) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_struct$_Origin_$40_calldata_ptrt_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Origin_$40_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 192))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct MessagingFee -> struct MessagingFee\n    function abi_encode_t_struct$_MessagingFee_$33_memory_ptr_to_t_struct$_MessagingFee_$33_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // nativeFee\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lzTokenFee\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_MessagingFee_$33_memory_ptr__to_t_struct$_MessagingFee_$33_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_MessagingFee_$33_memory_ptr_to_t_struct$_MessagingFee_$33_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ILayerZeroEndpointV2_$202_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILayerZeroEndpointV2_$202_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILayerZeroEndpointV2_$202_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILayerZeroEndpointV2_$202__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILayerZeroEndpointV2_$202_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_struct$_Origin_$40_calldata_ptrt_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Origin_$40_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Origin_$40_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Origin_$40_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb(memPtr) {\n\n        mstore(add(memPtr, 0), \",\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct MessagingParams -> struct MessagingParams\n    function abi_encode_t_struct$_MessagingParams_$20_memory_ptr_to_t_struct$_MessagingParams_$20_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // dstEid\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // receiver\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // message\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // options\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // payInLzToken\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_MessagingParams_$20_memory_ptr_t_address__to_t_struct$_MessagingParams_$20_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_MessagingParams_$20_memory_ptr_to_t_struct$_MessagingParams_$20_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct MessagingFee\n    function abi_decode_t_struct$_MessagingFee_$33_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // nativeFee\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // lzTokenFee\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_MessagingFee_$33_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_MessagingFee_$33_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    // struct MessagingReceipt\n    function abi_decode_t_struct$_MessagingReceipt_$28_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // guid\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // nonce\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // fee\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_struct$_MessagingFee_$33_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_MessagingReceipt_$28_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_MessagingReceipt_$28_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"781":[{"length":32,"start":1376},{"length":32,"start":2396},{"length":32,"start":3645},{"length":32,"start":5272},{"length":32,"start":5543},{"length":32,"start":6274},{"length":32,"start":6525}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82413EAC GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBF3F3DE9 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBF3F3DE9 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xCA5EB5E1 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0xEE7D72B4 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xF68016B7 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xFF7BD03D EQ PUSH2 0x504 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x82413EAC EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x9541618C EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xA6451163 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xBB0B6A53 EQ PUSH2 0x3E4 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x56368126 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x7954C58F EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x7D25A05E EQ PUSH2 0x2C5 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x67BD07A EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x13137D65 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x17442B70 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x306FED73 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x3400288B EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x81E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x21ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x97E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x23AA JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x26F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x274E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST PUSH2 0xEDB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x27C0 JUMP JUMPDEST PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9CE8 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D7 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x91AC5E4F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F7 DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST EQ PUSH2 0x651 JUMPI DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP8 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH32 0xC26BEBCC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x648 SWAP3 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x660 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x101A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x2 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 CALLER PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x690 TIMESTAMP PUSH2 0x132E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP2 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST POP PUSH32 0x15B1A221748794744CD2960E23AB851C4E6B2B22FBABE81F3404E15EEBF0AF16 CALLER DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x764 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x791 PUSH2 0x9CE8 DUP5 DUP5 PUSH1 0x0 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FE PUSH2 0x9CE8 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP CALLER PUSH2 0x1571 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x810 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x81A DUP3 DUP3 PUSH2 0x170B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x826 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x830 PUSH2 0xA8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x853 SWAP1 PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x895 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D0 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E4 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF CALLER PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FC TIMESTAMP PUSH2 0x132E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x915 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x94E PUSH2 0x9CE8 DUP4 DUP4 PUSH1 0x0 PUSH2 0x148E JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x986 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x990 PUSH1 0x0 PUSH2 0x176C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x9CA SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F6 SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA43 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA18 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA43 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA26 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xBC4 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xB37 SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB63 SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB85 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB93 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB18 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCDE JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xC51 SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC7D SWAP1 PUSH2 0x2914 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCCA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC9F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCCA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCAD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC32 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD00 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD34 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD1F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xD8F JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH2 0xD70 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xD87 SWAP1 PUSH2 0x2D84 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3A JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDBE CALLER PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDCB TIMESTAMP PUSH2 0x132E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xE1F PUSH2 0x9CE8 DUP5 DUP5 PUSH1 0x0 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3B PUSH2 0x168D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCA5EB5E1 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE94 SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xED1 PUSH2 0x168D JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xEE3 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP1 PUSH2 0x2E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5B DUP2 PUSH2 0x176C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x1011 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xF6FF4FB700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x2A PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109A JUMPI PUSH2 0x1099 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10CC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1104 JUMPI PUSH2 0x1103 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1168 JUMPI PUSH2 0x1167 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0x1322 JUMPI DUP3 PUSH1 0x4 DUP6 PUSH1 0xC DUP5 PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x11C5 JUMPI PUSH2 0x11C4 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 PUSH1 0xF PUSH1 0xF8 SHL DUP6 PUSH1 0xC DUP5 PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x128E JUMPI PUSH2 0x128D PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL AND PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x12AA JUMPI PUSH2 0x12A9 PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0x12C3 SWAP2 SWAP1 PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x12CF SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x12E0 JUMPI PUSH2 0x12DF PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x131A SWAP1 PUSH2 0x2D84 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x119A JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x13A7 JUMPI DUP1 DUP1 PUSH2 0x1390 SWAP1 PUSH2 0x2D84 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST SWAP2 POP PUSH2 0x137D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13C3 JUMPI PUSH2 0x13C2 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13F5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1482 JUMPI PUSH1 0x1 DUP3 PUSH2 0x140E SWAP2 SWAP1 PUSH2 0x2F34 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x141D SWAP2 SWAP1 PUSH2 0x2F68 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1429 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x2D26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x147B SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST SWAP5 POP PUSH2 0x13F9 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1496 PUSH2 0x1CEE JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDC28C58 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F2 DUP10 PUSH2 0xFA5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1527 SWAP3 SWAP2 SWAP1 PUSH2 0x3043 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1543 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1579 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1588 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x187E JUMP JUMPDEST JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2637A450 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1602 DUP13 PUSH2 0xFA5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD GT ISZERO ISZERO DUP2 MSTORE POP DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163E SWAP3 SWAP2 SWAP1 PUSH2 0x3043 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x165C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1681 SWAP2 SWAP1 PUSH2 0x31AF JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1695 PUSH2 0x19C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16B3 PUSH2 0xA8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1700 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x238399D427B947898EDB290F5FF0F9109849B1C3BA196A42E35F00C50A54B98B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1760 SWAP3 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLVALUE EQ PUSH2 0x1876 JUMPI CALLVALUE PUSH1 0x40 MLOAD PUSH32 0x9F70412000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4FE1D94 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x325D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1977 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5373352A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C4 CALLER PUSH32 0x0 DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A53 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x328A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A59 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B21 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1ADD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1ADC SWAP2 SWAP1 PUSH2 0x32ED JUMP JUMPDEST JUMPDEST PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B13 SWAP1 PUSH2 0x338C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B30 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1B39 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1B7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B75 SWAP1 PUSH2 0x341E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1BA7 SWAP2 SWAP1 PUSH2 0x346F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1BFA DUP8 DUP4 DUP4 DUP8 PUSH2 0x1C06 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1C68 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1C60 JUMPI PUSH2 0x1C20 DUP6 PUSH2 0x1C7B JUMP JUMPDEST PUSH2 0x1C5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C56 SWAP1 PUSH2 0x34D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x1C72 DUP4 DUP4 PUSH2 0x1C9E JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1CB1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE5 SWAP2 SWAP1 PUSH2 0x352B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D36 PUSH2 0x1CEE JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D55 DUP2 PUSH2 0x1D3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA5 JUMPI PUSH2 0x1DA4 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC1 DUP2 PUSH2 0x1DAE JUMP JUMPDEST DUP2 EQ PUSH2 0x1DCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DDE DUP2 PUSH2 0x1DB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E09 JUMPI PUSH2 0x1E08 PUSH2 0x1DE4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x1DE9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E41 PUSH2 0x1DEE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E74 DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E84 DUP2 PUSH2 0x1E69 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA1 DUP2 PUSH2 0x1E7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED4 DUP11 DUP3 DUP12 ADD PUSH2 0x1D8F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x1EE5 DUP11 DUP3 DUP12 ADD PUSH2 0x1DCF JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1D85 JUMP JUMPDEST JUMPDEST PUSH2 0x1F12 DUP11 DUP3 DUP12 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0xA0 PUSH2 0x1F25 DUP11 DUP3 DUP12 ADD PUSH2 0x1E92 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F46 JUMPI PUSH2 0x1F45 PUSH2 0x1D85 JUMP JUMPDEST JUMPDEST PUSH2 0x1F52 DUP11 DUP3 DUP12 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F80 DUP2 PUSH2 0x1F63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F9B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x1FA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FFD DUP3 PUSH2 0x1FB4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x201C JUMPI PUSH2 0x201B PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F PUSH2 0x1D76 JUMP JUMPDEST SWAP1 POP PUSH2 0x203B DUP3 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x205B JUMPI PUSH2 0x205A PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH2 0x2064 DUP3 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2093 PUSH2 0x208E DUP5 PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x20AF JUMPI PUSH2 0x20AE PUSH2 0x1FAF JUMP JUMPDEST JUMPDEST PUSH2 0x20BA DUP5 DUP3 DUP6 PUSH2 0x2071 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20D7 JUMPI PUSH2 0x20D6 PUSH2 0x1DE4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2080 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2106 JUMPI PUSH2 0x2105 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2124 JUMPI PUSH2 0x2123 PUSH2 0x1D85 JUMP JUMPDEST JUMPDEST PUSH2 0x2130 DUP5 DUP3 DUP6 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2142 DUP2 PUSH2 0x1D3C JUMP JUMPDEST DUP2 EQ PUSH2 0x214D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x215F DUP2 PUSH2 0x2139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x217C JUMPI PUSH2 0x217B PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP6 DUP3 DUP7 ADD PUSH2 0x2150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x219B DUP6 DUP3 DUP7 ADD PUSH2 0x1DCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B8 DUP2 PUSH2 0x21A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x21D4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x21AF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x21E7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x21AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2202 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222D PUSH2 0x2228 PUSH2 0x2223 DUP5 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x1E49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223F DUP3 PUSH2 0x2212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2251 DUP3 PUSH2 0x2234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2261 DUP2 PUSH2 0x2246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2258 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x228B DUP2 PUSH2 0x21A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22A8 DUP2 PUSH2 0x2282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C5 JUMPI PUSH2 0x22C4 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E4 DUP6 DUP3 DUP7 ADD PUSH2 0x2299 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2328 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x230D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233F DUP3 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x2349 DUP2 DUP6 PUSH2 0x22F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2359 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST PUSH2 0x2362 DUP2 PUSH2 0x1FB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2387 DUP2 DUP5 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23C4 JUMPI PUSH2 0x23C3 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D2 DUP8 DUP3 DUP9 ADD PUSH2 0x1D8F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23F3 JUMPI PUSH2 0x23F2 PUSH2 0x1D85 JUMP JUMPDEST JUMPDEST PUSH2 0x23FF DUP8 DUP3 DUP9 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x80 PUSH2 0x2412 DUP8 DUP3 DUP9 ADD PUSH2 0x1E92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2433 DUP2 PUSH2 0x241E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x244E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x242A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x245D DUP2 PUSH2 0x1E69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2478 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2454 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2494 JUMPI PUSH2 0x2493 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24A2 DUP5 DUP3 DUP6 ADD PUSH2 0x1E92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x24FD DUP2 DUP6 PUSH2 0x24D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x250D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST PUSH2 0x2516 DUP2 PUSH2 0x1FB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252D DUP4 DUP4 PUSH2 0x24E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x254D DUP3 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x2557 DUP2 DUP6 PUSH2 0x24B6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2569 DUP6 PUSH2 0x24C7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x25A5 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2586 DUP6 DUP3 PUSH2 0x2521 JUMP JUMPDEST SWAP5 POP PUSH2 0x2591 DUP4 PUSH2 0x2535 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x256D JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25D1 DUP2 DUP5 PUSH2 0x2542 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262C DUP3 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x2636 DUP2 DUP6 PUSH2 0x2610 JUMP JUMPDEST SWAP4 POP PUSH2 0x2646 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST PUSH2 0x264F DUP2 PUSH2 0x1FB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2666 DUP4 DUP4 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2686 DUP3 PUSH2 0x25D9 JUMP JUMPDEST PUSH2 0x2690 DUP2 DUP6 PUSH2 0x25E4 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x26A2 DUP6 PUSH2 0x25F5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x26DE JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x26BF DUP6 DUP3 PUSH2 0x265A JUMP JUMPDEST SWAP5 POP PUSH2 0x26CA DUP4 PUSH2 0x266E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26A6 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x270A DUP2 DUP5 PUSH2 0x267B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2728 JUMPI PUSH2 0x2727 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2736 DUP5 DUP3 DUP6 ADD PUSH2 0x2150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2748 DUP2 PUSH2 0x1DAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2763 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x273F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2772 DUP2 PUSH2 0x21A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x278D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2769 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A9 JUMPI PUSH2 0x27A8 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27B7 DUP5 DUP3 DUP6 ADD PUSH2 0x2299 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D6 JUMPI PUSH2 0x27D5 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27E4 DUP5 DUP3 DUP6 ADD PUSH2 0x1D8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2802 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x280F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x273F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282C DUP3 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x2836 DUP2 DUP6 PUSH2 0x2816 JUMP JUMPDEST SWAP4 POP PUSH2 0x2846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2888 PUSH1 0x1 DUP4 PUSH2 0x2816 JUMP JUMPDEST SWAP2 POP PUSH2 0x2893 DUP3 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28AA DUP3 DUP7 PUSH2 0x2821 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B5 DUP3 PUSH2 0x287B JUMP JUMPDEST SWAP2 POP PUSH2 0x28C1 DUP3 DUP6 PUSH2 0x2821 JUMP JUMPDEST SWAP2 POP PUSH2 0x28CC DUP3 PUSH2 0x287B JUMP JUMPDEST SWAP2 POP PUSH2 0x28D8 DUP3 DUP5 PUSH2 0x2821 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x292C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x293F JUMPI PUSH2 0x293E PUSH2 0x28E5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x29A7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x296A JUMP JUMPDEST PUSH2 0x29B1 DUP7 DUP4 PUSH2 0x296A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E4 PUSH2 0x29DF PUSH2 0x29DA DUP5 PUSH2 0x21A5 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29FE DUP4 PUSH2 0x29C9 JUMP JUMPDEST PUSH2 0x2A12 PUSH2 0x2A0A DUP3 PUSH2 0x29EB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2977 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2A27 PUSH2 0x2A1A JUMP JUMPDEST PUSH2 0x2A32 DUP2 DUP5 DUP5 PUSH2 0x29F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A56 JUMPI PUSH2 0x2A4B PUSH1 0x0 DUP3 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A38 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A9B JUMPI PUSH2 0x2A6C DUP2 PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2A75 DUP5 PUSH2 0x295A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2A84 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2A98 PUSH2 0x2A90 DUP6 PUSH2 0x295A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2A37 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2AA0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD7 DUP4 DUP4 PUSH2 0x2AAD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AF0 DUP3 PUSH2 0x22EE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B09 JUMPI PUSH2 0x2B08 PUSH2 0x1FC5 JUMP JUMPDEST JUMPDEST PUSH2 0x2B13 DUP3 SLOAD PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x2B1E DUP3 DUP3 DUP6 PUSH2 0x2A5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B51 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B3F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2B49 DUP6 DUP3 PUSH2 0x2ACB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2BB1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2B5F DUP7 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B87 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B62 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2BA4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2BA0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AAD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BCE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2454 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2BE0 DUP2 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BEF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2769 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066656500000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3E PUSH1 0x10 DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C49 DUP3 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C6D DUP2 PUSH2 0x2C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8F PUSH1 0x0 DUP4 PUSH2 0x2C74 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C9A DUP3 PUSH2 0x2C7F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB0 DUP3 PUSH2 0x2C82 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF0 PUSH1 0xF DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFB DUP3 PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D1F DUP2 PUSH2 0x2CE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D8F DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DC1 JUMPI PUSH2 0x2DC0 PUSH2 0x2D55 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E28 PUSH1 0x26 DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E33 DUP3 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E57 DUP2 PUSH2 0x2E1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E69 DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E74 DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E8C JUMPI PUSH2 0x2E8B PUSH2 0x2D55 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9D DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA8 DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2EB6 DUP2 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2ECD JUMPI PUSH2 0x2ECC PUSH2 0x2D55 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F0E DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F19 DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F29 JUMPI PUSH2 0x2F28 PUSH2 0x2ED4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3F DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4A DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2F62 JUMPI PUSH2 0x2F61 PUSH2 0x2D55 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F73 DUP3 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F7E DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F8E JUMPI PUSH2 0x2F8D PUSH2 0x2ED4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FA2 DUP2 PUSH2 0x1D3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FB1 DUP2 PUSH2 0x1DAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FC0 DUP2 PUSH2 0x241E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2FDE PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2F99 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2FF1 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2FA8 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x3009 DUP3 DUP3 PUSH2 0x24E8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x3023 DUP3 DUP3 PUSH2 0x24E8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x3038 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2FB7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x305D DUP2 DUP6 PUSH2 0x2FC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x306C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2454 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3087 DUP2 PUSH2 0x2282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30A3 JUMPI PUSH2 0x30A2 PUSH2 0x3073 JUMP JUMPDEST JUMPDEST PUSH2 0x30AD PUSH1 0x40 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30BD DUP5 DUP3 DUP6 ADD PUSH2 0x3078 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x30D1 DUP5 DUP3 DUP6 ADD PUSH2 0x3078 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30F3 JUMPI PUSH2 0x30F2 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3101 DUP5 DUP3 DUP6 ADD PUSH2 0x308D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3119 DUP2 PUSH2 0x1DB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3128 DUP2 PUSH2 0x1F63 JUMP JUMPDEST DUP2 EQ PUSH2 0x3133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3145 DUP2 PUSH2 0x311F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3161 JUMPI PUSH2 0x3160 PUSH2 0x3073 JUMP JUMPDEST JUMPDEST PUSH2 0x316B PUSH1 0x60 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x317B DUP5 DUP3 DUP6 ADD PUSH2 0x310A JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x318F DUP5 DUP3 DUP6 ADD PUSH2 0x3136 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x31A3 DUP5 DUP3 DUP6 ADD PUSH2 0x308D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C5 JUMPI PUSH2 0x31C4 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31D3 DUP5 DUP3 DUP6 ADD PUSH2 0x314B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3212 PUSH1 0x20 DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x321D DUP3 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3241 DUP2 PUSH2 0x3205 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3257 DUP2 PUSH2 0x1E7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3273 JUMPI PUSH2 0x3272 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3281 DUP5 DUP3 DUP6 ADD PUSH2 0x3248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x329F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x32AC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x32B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2769 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x32CA DUP2 PUSH2 0x241E JUMP JUMPDEST DUP2 EQ PUSH2 0x32D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32E7 DUP2 PUSH2 0x32C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3303 JUMPI PUSH2 0x3302 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3311 DUP5 DUP3 DUP6 ADD PUSH2 0x32D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3376 PUSH1 0x2A DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3381 DUP3 PUSH2 0x331A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A5 DUP2 PUSH2 0x3369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3408 PUSH1 0x26 DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3413 DUP3 PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3437 DUP2 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3449 DUP3 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x3453 DUP2 DUP6 PUSH2 0x2C74 JUMP JUMPDEST SWAP4 POP PUSH2 0x3463 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347B DUP3 DUP5 PUSH2 0x343E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34BC PUSH1 0x1D DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x34C7 DUP3 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34EB DUP2 PUSH2 0x34AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FD DUP3 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x3507 DUP2 DUP6 PUSH2 0x2BF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x3517 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x230A JUMP JUMPDEST PUSH2 0x3520 DUP2 PUSH2 0x1FB4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3545 DUP2 DUP5 PUSH2 0x34F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC ADDMOD ADD MSTORE ADDMOD 0xC3 SELFBALANCE LOG2 0xDE RETURN PUSH21 0xE4A6062AB7CA70869E11AADBFD65F401E0BD98CD48 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"314:7467:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4368:708:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1287:235:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1052:1488:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1724:108:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7609:169:18;;;;;;;;;;;;;:::i;:::-;;5190:674;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;446:46:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:12;;;;;;;;;;;;;:::i;:::-;;626:56:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3507:128:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2013:216;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4200:148:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4561:439;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;569:48:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6052:741:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3252:105:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7430:98:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;532:32:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2771:149:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:46:18;443:5;402:46;:::o;4368:708:8:-;4694:10;4673:31;;4681:8;4673:31;;;4669:68;;4726:10;4713:24;;;;;;;;;;;:::i;:::-;;;;;;;;4669:68;4873:7;:14;;;4837:32;4854:7;:14;;;;;;;;;;:::i;:::-;4837:16;:32::i;:::-;:50;4833:103;;4905:7;:14;;;;;;;;;;:::i;:::-;4921:7;:14;;;4896:40;;;;;;;;;;;;:::i;:::-;;;;;;;;4833:103;5010:59;5021:7;5030:5;5037:8;;5047:9;5058:10;;5010;:59::i;:::-;4368:708;;;;;;;:::o;1287:235:6:-;1414:20;1436:22;843:1:9;678::8;1474:41:6;;;;1287:235;;:::o;1052:1488:18:-;1260:27;1290;1306:10;1290:15;:27::i;:::-;1260:57;;1328:26;1357:32;1373:15;1357;:32::i;:::-;1328:61;;1400:21;1462:13;1496:14;1531:12;1431:123;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1400:155;;1624:20;1653:7;1624:37;;1722:21;:33;1744:10;1722:33;;;;;;;;;;;;;;;1767:14;1722:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1824:66;1839:10;1857:14;1874:15;1824:66;;;;;;;;:::i;:::-;;;;;;;;1961:20;1984:9;;;;;;;;;;;;1961:32;;2095:23;2121:48;443:5;2145:7;2154;2163:5;2121:6;:48::i;:::-;2095:74;;2201:3;:13;;;2188:9;:26;;2180:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2256:276;443:5;2345:7;2390;2435:26;;;;;;;;2448:9;2435:26;;;;2459:1;2435:26;;;2491:10;2256:7;:276::i;:::-;;1120:1420;;;;;;1052:1488;:::o;1724:108:7:-;1094:13:12;:11;:13::i;:::-;1804:21:7::1;1813:4;1819:5;1804:8;:21::i;:::-;1724:108:::0;;:::o;7609:169:18:-;1094:13:12;:11;:13::i;:::-;7660:12:18::1;7678:7;:5;:7::i;:::-;:12;;7698:21;7678:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7659:65;;;7743:7;7735:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;7648:130;7609:169::o:0;5190:674::-;5265:23;;:::i;:::-;5365:27;5395;5411:10;5395:15;:27::i;:::-;5365:57;;5433:26;5462:32;5478:15;5462;:32::i;:::-;5433:61;;5505:21;5567:13;5601:14;5636:12;5536:123;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5505:155;;5681:20;5710:7;5681:37;;5729:20;5752:9;;;;;;;;;;;;5729:32;;5808:48;443:5;5832:7;5841;5850:5;5808:6;:48::i;:::-;5801:55;;;;;;;5190:674;;;:::o;446:46:7:-;;;:::o;1824:101:12:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;626:56:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3507:128:8:-;3596:12;3507:128;;;;:::o;2013:216::-;2175:4;2217;2198:24;;:7;:24;;;2191:31;;2013:216;;;;;;:::o;1201:85:12:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;4200:148:18:-;4272:14;4306:21;:34;4328:11;4306:34;;;;;;;;;;;;;;;4299:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4200:148;;;:::o;4561:439::-;4642:15;4670:29;4702:21;:34;4724:11;4702:34;;;;;;;;;;;;;;;4670:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:28;4791:14;:21;4778:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:66;;4839:6;4834:119;4855:14;:21;4851:1;:25;4834:119;;;4923:14;4938:1;4923:17;;;;;;;;:::i;:::-;;;;;;;;4898:12;4911:1;4898:15;;;;;;;;:::i;:::-;;;;;;;:43;;;;4878:3;;;;;:::i;:::-;;;;4834:119;;;;4980:12;4973:19;;;;4561:439;;;:::o;569:48:7:-;;;;;;;;;;;;;;;;;:::o;6052:741:18:-;6131:7;6205:27;6235;6251:10;6235:15;:27::i;:::-;6205:57;;6273:26;6302:32;6318:15;6302;:32::i;:::-;6273:61;;6345:21;6407:13;6441:14;6476:12;6376:123;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6345:155;;6521:20;6550:7;6521:37;;6627:20;6650:9;;;;;;;;;;;;6627:32;;6680:23;6706:48;443:5;6730:7;6739;6748:5;6706:6;:48::i;:::-;6680:74;;6772:3;:13;;;6765:20;;;;;;;;6052:741;;;:::o;3252:105:7:-;1094:13:12;:11;:13::i;:::-;3319:8:7::1;:20;;;3340:9;3319:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3252:105:::0;:::o;7430:98:18:-;1094:13:12;:11;:13::i;:::-;7511:9:18::1;7500:8;:20;;;;7430:98:::0;:::o;2074:198:12:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;532:32:18:-;;;;:::o;2771:149:8:-;2853:4;2900:6;:13;;;2876:5;:20;2882:6;:13;;;;;;;;;;:::i;:::-;2876:20;;;;;;;;;;;;;;;;:37;2869:44;;2771:149;;;:::o;2718:196:7:-;2788:7;2807:12;2822:5;:11;2828:4;2822:11;;;;;;;;;;;;;;;;2807:26;;2863:1;2855:10;;2847:4;:18;2843:43;;2881:4;2874:12;;;;;;;;;;;:::i;:::-;;;;;;;;2843:43;2903:4;2896:11;;;2718:196;;;:::o;6988:321:18:-;;;;;;;;:::o;2711:537::-;2774:13;2800;2840:5;2824:23;;2816:32;;2800:48;;2859:21;:42;;;;;;;;;;;;;;;;;;;2922:16;2951:2;2941:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2922:32;;2965:12;:3;2969:1;2965:6;;;;;;;;:::i;:::-;;;;;:12;;;;;;;;;;;2988;:3;2992:1;2988:6;;;;;;;;:::i;:::-;;;;;:12;;;;;;;;;;;3026:9;3021:181;3045:2;3041:1;:6;3021:181;;;3086:8;3118:1;3101:5;3111:2;3107:1;:6;;;;:::i;:::-;3101:13;;;;;;;:::i;:::-;;;;;:18;;;;;3095:25;;3086:35;;;;;;;;;;:::i;:::-;;;;;;;;;;3069:3;3081:1;3077;:5;;;;:::i;:::-;3073:1;:9;;;;:::i;:::-;3069:14;;;;;;;;:::i;:::-;;;;;:52;;;;;;;;;;;3153:8;3184:4;3168:20;;:5;3178:2;3174:1;:6;;;;:::i;:::-;3168:13;;;;;;;:::i;:::-;;;;;:20;3162:27;;3153:37;;;;;;;;;;:::i;:::-;;;;;;;;;;3136:3;3148:1;3144;:5;;;;:::i;:::-;3140:1;:9;;;;:::i;:::-;3136:14;;;;;;;;:::i;:::-;;;;;:54;;;;;;;;;;;3049:3;;;;;:::i;:::-;;;;3021:181;;;;3236:3;3222:18;;;;;2711:537;;;:::o;3419:585::-;3483:13;3523:1;3513:6;:11;3509:54;;3541:10;;;;;;;;;;;;;;;;;;;;;3509:54;3583:12;3598:6;3583:21;;3615:14;3650:78;3665:1;3657:4;:9;3650:78;;3683:8;;;;;:::i;:::-;;;;3714:2;3706:10;;;;;:::i;:::-;;;3650:78;;;3748:19;3780:6;3770:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3748:39;;3798:157;3815:1;3805:6;:11;3798:157;;3843:1;3833:11;;;;;:::i;:::-;;;3911:2;3902:6;:11;;;;:::i;:::-;3889:2;:25;;;;:::i;:::-;3876:40;;3859:6;3866;3859:14;;;;;;;;:::i;:::-;;;;;:57;;;;;;;;;;;3941:2;3931:12;;;;;:::i;:::-;;;3798:157;;;3989:6;3975:21;;;;;3419:585;;;;:::o;2038:391:9:-;2205:23;;:::i;:::-;2259:8;:14;;;2291:86;;;;;;;;2307:7;2291:86;;;;;;2316:25;2333:7;2316:16;:25::i;:::-;2291:86;;;;2343:8;2291:86;;;;2353:8;2291:86;;;;2363:13;2291:86;;;;;2403:4;2259:163;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2240:182;;2038:391;;;;;;:::o;3188:766::-;3389:31;;:::i;:::-;3554:20;3577:26;3588:4;:14;;;3577:10;:26::i;:::-;3554:49;;3635:1;3617:4;:15;;;:19;3613:53;;;3638:28;3650:4;:15;;;3638:11;:28::i;:::-;3613:53;3755:8;:13;;;3777:12;3809:92;;;;;;;;3825:7;3809:92;;;;;;3834:25;3851:7;3834:16;:25::i;:::-;3809:92;;;;3861:8;3809:92;;;;3871:8;3809:92;;;;3899:1;3881:4;:15;;;:19;3809:92;;;;;3919:14;3755:192;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3677:270;;;3188:766;;;;;;;:::o;1359:130:12:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2286:134:7:-;2373:5;2359;:11;2365:4;2359:11;;;;;;;;;;;;;;;:19;;;;2393:20;2401:4;2407:5;2393:20;;;;;;;:::i;:::-;;;;;;;;2286:134;;:::o;2426:187:12:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;4650:191:9:-;4716:17;4762:10;4749:9;:23;4745:62;;4797:9;4781:26;;;;;;;;;;;:::i;:::-;;;;;;;;4745:62;4824:10;4817:17;;4650:191;;;:::o;5218:410::-;5371:15;5389:8;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5371:36;;5440:1;5421:21;;:7;:21;;;5417:54;;5451:20;;;;;;;;;;;;;;5417:54;5545:76;5578:10;5598:8;5609:11;5552:7;5545:32;;;;:76;;;;;;:::i;:::-;5277:351;5218:410;:::o;655:96:17:-;708:7;734:10;727:17;;655:96;:::o;1355:203:15:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:16:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;7:93:19:-;43:7;83:10;76:5;72:22;61:33;;7:93;;;:::o;106:115::-;191:23;208:5;191:23;:::i;:::-;186:3;179:36;106:115;;:::o;227:218::-;318:4;356:2;345:9;341:18;333:26;;369:69;435:1;424:9;420:17;411:6;369:69;:::i;:::-;227:218;;;;:::o;451:75::-;484:6;517:2;511:9;501:19;;451:75;:::o;532:117::-;641:1;638;631:12;655:117;764:1;761;754:12;778:117;887:1;884;877:12;922:228;992:5;1033:2;1024:6;1019:3;1015:16;1011:25;1008:112;;;1039:79;;:::i;:::-;1008:112;1138:6;1129:15;;922:228;;;;:::o;1156:77::-;1193:7;1222:5;1211:16;;1156:77;;;:::o;1239:122::-;1312:24;1330:5;1312:24;:::i;:::-;1305:5;1302:35;1292:63;;1351:1;1348;1341:12;1292:63;1239:122;:::o;1367:139::-;1413:5;1451:6;1438:20;1429:29;;1467:33;1494:5;1467:33;:::i;:::-;1367:139;;;;:::o;1512:117::-;1621:1;1618;1611:12;1635:117;1744:1;1741;1734:12;1758:117;1867:1;1864;1857:12;1894:552;1951:8;1961:6;2011:3;2004:4;1996:6;1992:17;1988:27;1978:122;;2019:79;;:::i;:::-;1978:122;2132:6;2119:20;2109:30;;2162:18;2154:6;2151:30;2148:117;;;2184:79;;:::i;:::-;2148:117;2298:4;2290:6;2286:17;2274:29;;2352:3;2344:4;2336:6;2332:17;2322:8;2318:32;2315:41;2312:128;;;2359:79;;:::i;:::-;2312:128;1894:552;;;;;:::o;2452:126::-;2489:7;2529:42;2522:5;2518:54;2507:65;;2452:126;;;:::o;2584:96::-;2621:7;2650:24;2668:5;2650:24;:::i;:::-;2639:35;;2584:96;;;:::o;2686:122::-;2759:24;2777:5;2759:24;:::i;:::-;2752:5;2749:35;2739:63;;2798:1;2795;2788:12;2739:63;2686:122;:::o;2814:139::-;2860:5;2898:6;2885:20;2876:29;;2914:33;2941:5;2914:33;:::i;:::-;2814:139;;;;:::o;2959:1357::-;3100:6;3108;3116;3124;3132;3140;3148;3197:3;3185:9;3176:7;3172:23;3168:33;3165:120;;;3204:79;;:::i;:::-;3165:120;3324:1;3349:77;3418:7;3409:6;3398:9;3394:22;3349:77;:::i;:::-;3339:87;;3295:141;3475:2;3501:53;3546:7;3537:6;3526:9;3522:22;3501:53;:::i;:::-;3491:63;;3446:118;3631:3;3620:9;3616:19;3603:33;3663:18;3655:6;3652:30;3649:117;;;3685:79;;:::i;:::-;3649:117;3798:64;3854:7;3845:6;3834:9;3830:22;3798:64;:::i;:::-;3780:82;;;;3574:298;3911:3;3938:53;3983:7;3974:6;3963:9;3959:22;3938:53;:::i;:::-;3928:63;;3882:119;4068:3;4057:9;4053:19;4040:33;4100:18;4092:6;4089:30;4086:117;;;4122:79;;:::i;:::-;4086:117;4235:64;4291:7;4282:6;4271:9;4267:22;4235:64;:::i;:::-;4217:82;;;;4011:298;2959:1357;;;;;;;;;;:::o;4322:101::-;4358:7;4398:18;4391:5;4387:30;4376:41;;4322:101;;;:::o;4429:115::-;4514:23;4531:5;4514:23;:::i;:::-;4509:3;4502:36;4429:115;;:::o;4550:324::-;4667:4;4705:2;4694:9;4690:18;4682:26;;4718:69;4784:1;4773:9;4769:17;4760:6;4718:69;:::i;:::-;4797:70;4863:2;4852:9;4848:18;4839:6;4797:70;:::i;:::-;4550:324;;;;;:::o;4880:117::-;4989:1;4986;4979:12;5003:102;5044:6;5095:2;5091:7;5086:2;5079:5;5075:14;5071:28;5061:38;;5003:102;;;:::o;5111:180::-;5159:77;5156:1;5149:88;5256:4;5253:1;5246:15;5280:4;5277:1;5270:15;5297:281;5380:27;5402:4;5380:27;:::i;:::-;5372:6;5368:40;5510:6;5498:10;5495:22;5474:18;5462:10;5459:34;5456:62;5453:88;;;5521:18;;:::i;:::-;5453:88;5561:10;5557:2;5550:22;5340:238;5297:281;;:::o;5584:129::-;5618:6;5645:20;;:::i;:::-;5635:30;;5674:33;5702:4;5694:6;5674:33;:::i;:::-;5584:129;;;:::o;5719:308::-;5781:4;5871:18;5863:6;5860:30;5857:56;;;5893:18;;:::i;:::-;5857:56;5931:29;5953:6;5931:29;:::i;:::-;5923:37;;6015:4;6009;6005:15;5997:23;;5719:308;;;:::o;6033:146::-;6130:6;6125:3;6120;6107:30;6171:1;6162:6;6157:3;6153:16;6146:27;6033:146;;;:::o;6185:425::-;6263:5;6288:66;6304:49;6346:6;6304:49;:::i;:::-;6288:66;:::i;:::-;6279:75;;6377:6;6370:5;6363:21;6415:4;6408:5;6404:16;6453:3;6444:6;6439:3;6435:16;6432:25;6429:112;;;6460:79;;:::i;:::-;6429:112;6550:54;6597:6;6592:3;6587;6550:54;:::i;:::-;6269:341;6185:425;;;;;:::o;6630:340::-;6686:5;6735:3;6728:4;6720:6;6716:17;6712:27;6702:122;;6743:79;;:::i;:::-;6702:122;6860:6;6847:20;6885:79;6960:3;6952:6;6945:4;6937:6;6933:17;6885:79;:::i;:::-;6876:88;;6692:278;6630:340;;;;:::o;6976:509::-;7045:6;7094:2;7082:9;7073:7;7069:23;7065:32;7062:119;;;7100:79;;:::i;:::-;7062:119;7248:1;7237:9;7233:17;7220:31;7278:18;7270:6;7267:30;7264:117;;;7300:79;;:::i;:::-;7264:117;7405:63;7460:7;7451:6;7440:9;7436:22;7405:63;:::i;:::-;7395:73;;7191:287;6976:509;;;;:::o;7491:120::-;7563:23;7580:5;7563:23;:::i;:::-;7556:5;7553:34;7543:62;;7601:1;7598;7591:12;7543:62;7491:120;:::o;7617:137::-;7662:5;7700:6;7687:20;7678:29;;7716:32;7742:5;7716:32;:::i;:::-;7617:137;;;;:::o;7760:472::-;7827:6;7835;7884:2;7872:9;7863:7;7859:23;7855:32;7852:119;;;7890:79;;:::i;:::-;7852:119;8010:1;8035:52;8079:7;8070:6;8059:9;8055:22;8035:52;:::i;:::-;8025:62;;7981:116;8136:2;8162:53;8207:7;8198:6;8187:9;8183:22;8162:53;:::i;:::-;8152:63;;8107:118;7760:472;;;;;:::o;8238:77::-;8275:7;8304:5;8293:16;;8238:77;;;:::o;8321:108::-;8398:24;8416:5;8398:24;:::i;:::-;8393:3;8386:37;8321:108;;:::o;8485:524::-;8638:4;8633:3;8629:14;8730:4;8723:5;8719:16;8713:23;8749:63;8806:4;8801:3;8797:14;8783:12;8749:63;:::i;:::-;8653:169;8910:4;8903:5;8899:16;8893:23;8929:63;8986:4;8981:3;8977:14;8963:12;8929:63;:::i;:::-;8832:170;8607:402;8485:524;;:::o;9015:334::-;9164:4;9202:2;9191:9;9187:18;9179:26;;9215:127;9339:1;9328:9;9324:17;9315:6;9215:127;:::i;:::-;9015:334;;;;:::o;9355:60::-;9383:3;9404:5;9397:12;;9355:60;;;:::o;9421:142::-;9471:9;9504:53;9522:34;9531:24;9549:5;9531:24;:::i;:::-;9522:34;:::i;:::-;9504:53;:::i;:::-;9491:66;;9421:142;;;:::o;9569:126::-;9619:9;9652:37;9683:5;9652:37;:::i;:::-;9639:50;;9569:126;;;:::o;9701:154::-;9779:9;9812:37;9843:5;9812:37;:::i;:::-;9799:50;;9701:154;;;:::o;9861:187::-;9976:65;10035:5;9976:65;:::i;:::-;9971:3;9964:78;9861:187;;:::o;10054:278::-;10175:4;10213:2;10202:9;10198:18;10190:26;;10226:99;10322:1;10311:9;10307:17;10298:6;10226:99;:::i;:::-;10054:278;;;;:::o;10338:122::-;10411:24;10429:5;10411:24;:::i;:::-;10404:5;10401:35;10391:63;;10450:1;10447;10440:12;10391:63;10338:122;:::o;10466:139::-;10512:5;10550:6;10537:20;10528:29;;10566:33;10593:5;10566:33;:::i;:::-;10466:139;;;;:::o;10611:474::-;10679:6;10687;10736:2;10724:9;10715:7;10711:23;10707:32;10704:119;;;10742:79;;:::i;:::-;10704:119;10862:1;10887:53;10932:7;10923:6;10912:9;10908:22;10887:53;:::i;:::-;10877:63;;10833:117;10989:2;11015:53;11060:7;11051:6;11040:9;11036:22;11015:53;:::i;:::-;11005:63;;10960:118;10611:474;;;;;:::o;11091:98::-;11142:6;11176:5;11170:12;11160:22;;11091:98;;;:::o;11195:168::-;11278:11;11312:6;11307:3;11300:19;11352:4;11347:3;11343:14;11328:29;;11195:168;;;;:::o;11369:246::-;11450:1;11460:113;11474:6;11471:1;11468:13;11460:113;;;11559:1;11554:3;11550:11;11544:18;11540:1;11535:3;11531:11;11524:39;11496:2;11493:1;11489:10;11484:15;;11460:113;;;11607:1;11598:6;11593:3;11589:16;11582:27;11431:184;11369:246;;;:::o;11621:373::-;11707:3;11735:38;11767:5;11735:38;:::i;:::-;11789:70;11852:6;11847:3;11789:70;:::i;:::-;11782:77;;11868:65;11926:6;11921:3;11914:4;11907:5;11903:16;11868:65;:::i;:::-;11958:29;11980:6;11958:29;:::i;:::-;11953:3;11949:39;11942:46;;11711:283;11621:373;;;;:::o;12000:309::-;12111:4;12149:2;12138:9;12134:18;12126:26;;12198:9;12192:4;12188:20;12184:1;12173:9;12169:17;12162:47;12226:76;12297:4;12288:6;12226:76;:::i;:::-;12218:84;;12000:309;;;;:::o;12315:218::-;12406:4;12444:2;12433:9;12429:18;12421:26;;12457:69;12523:1;12512:9;12508:17;12499:6;12457:69;:::i;:::-;12315:218;;;;:::o;12539:867::-;12651:6;12659;12667;12675;12724:3;12712:9;12703:7;12699:23;12695:33;12692:120;;;12731:79;;:::i;:::-;12692:120;12851:1;12876:77;12945:7;12936:6;12925:9;12921:22;12876:77;:::i;:::-;12866:87;;12822:141;13030:2;13019:9;13015:18;13002:32;13061:18;13053:6;13050:30;13047:117;;;13083:79;;:::i;:::-;13047:117;13196:64;13252:7;13243:6;13232:9;13228:22;13196:64;:::i;:::-;13178:82;;;;12973:297;13309:3;13336:53;13381:7;13372:6;13361:9;13357:22;13336:53;:::i;:::-;13326:63;;13280:119;12539:867;;;;;;;:::o;13412:90::-;13446:7;13489:5;13482:13;13475:21;13464:32;;13412:90;;;:::o;13508:109::-;13589:21;13604:5;13589:21;:::i;:::-;13584:3;13577:34;13508:109;;:::o;13623:210::-;13710:4;13748:2;13737:9;13733:18;13725:26;;13761:65;13823:1;13812:9;13808:17;13799:6;13761:65;:::i;:::-;13623:210;;;;:::o;13839:118::-;13926:24;13944:5;13926:24;:::i;:::-;13921:3;13914:37;13839:118;;:::o;13963:222::-;14056:4;14094:2;14083:9;14079:18;14071:26;;14107:71;14175:1;14164:9;14160:17;14151:6;14107:71;:::i;:::-;13963:222;;;;:::o;14191:329::-;14250:6;14299:2;14287:9;14278:7;14274:23;14270:32;14267:119;;;14305:79;;:::i;:::-;14267:119;14425:1;14450:53;14495:7;14486:6;14475:9;14471:22;14450:53;:::i;:::-;14440:63;;14396:117;14191:329;;;;:::o;14526:123::-;14602:6;14636:5;14630:12;14620:22;;14526:123;;;:::o;14655:193::-;14763:11;14797:6;14792:3;14785:19;14837:4;14832:3;14828:14;14813:29;;14655:193;;;;:::o;14854:141::-;14930:4;14953:3;14945:11;;14983:4;14978:3;14974:14;14966:22;;14854:141;;;:::o;15001:158::-;15074:11;15108:6;15103:3;15096:19;15148:4;15143:3;15139:14;15124:29;;15001:158;;;;:::o;15165:353::-;15241:3;15269:38;15301:5;15269:38;:::i;:::-;15323:60;15376:6;15371:3;15323:60;:::i;:::-;15316:67;;15392:65;15450:6;15445:3;15438:4;15431:5;15427:16;15392:65;:::i;:::-;15482:29;15504:6;15482:29;:::i;:::-;15477:3;15473:39;15466:46;;15245:273;15165:353;;;;:::o;15524:192::-;15611:10;15646:64;15706:3;15698:6;15646:64;:::i;:::-;15632:78;;15524:192;;;;:::o;15722:122::-;15801:4;15833;15828:3;15824:14;15816:22;;15722:122;;;:::o;15876:983::-;16013:3;16042:63;16099:5;16042:63;:::i;:::-;16121:95;16209:6;16204:3;16121:95;:::i;:::-;16114:102;;16242:3;16287:4;16279:6;16275:17;16270:3;16266:27;16317:65;16376:5;16317:65;:::i;:::-;16405:7;16436:1;16421:393;16446:6;16443:1;16440:13;16421:393;;;16517:9;16511:4;16507:20;16502:3;16495:33;16568:6;16562:13;16596:82;16673:4;16658:13;16596:82;:::i;:::-;16588:90;;16701:69;16763:6;16701:69;:::i;:::-;16691:79;;16799:4;16794:3;16790:14;16783:21;;16481:333;16468:1;16465;16461:9;16456:14;;16421:393;;;16425:14;16830:4;16823:11;;16850:3;16843:10;;16018:841;;;;;15876:983;;;;:::o;16865:409::-;17026:4;17064:2;17053:9;17049:18;17041:26;;17113:9;17107:4;17103:20;17099:1;17088:9;17084:17;17077:47;17141:126;17262:4;17253:6;17141:126;:::i;:::-;17133:134;;16865:409;;;;:::o;17280:124::-;17357:6;17391:5;17385:12;17375:22;;17280:124;;;:::o;17410:194::-;17519:11;17553:6;17548:3;17541:19;17593:4;17588:3;17584:14;17569:29;;17410:194;;;;:::o;17610:142::-;17687:4;17710:3;17702:11;;17740:4;17735:3;17731:14;17723:22;;17610:142;;;:::o;17758:99::-;17810:6;17844:5;17838:12;17828:22;;17758:99;;;:::o;17863:159::-;17937:11;17971:6;17966:3;17959:19;18011:4;18006:3;18002:14;17987:29;;17863:159;;;;:::o;18028:357::-;18106:3;18134:39;18167:5;18134:39;:::i;:::-;18189:61;18243:6;18238:3;18189:61;:::i;:::-;18182:68;;18259:65;18317:6;18312:3;18305:4;18298:5;18294:16;18259:65;:::i;:::-;18349:29;18371:6;18349:29;:::i;:::-;18344:3;18340:39;18333:46;;18110:275;18028:357;;;;:::o;18391:196::-;18480:10;18515:66;18577:3;18569:6;18515:66;:::i;:::-;18501:80;;18391:196;;;;:::o;18593:123::-;18673:4;18705;18700:3;18696:14;18688:22;;18593:123;;;:::o;18750:991::-;18889:3;18918:64;18976:5;18918:64;:::i;:::-;18998:96;19087:6;19082:3;18998:96;:::i;:::-;18991:103;;19120:3;19165:4;19157:6;19153:17;19148:3;19144:27;19195:66;19255:5;19195:66;:::i;:::-;19284:7;19315:1;19300:396;19325:6;19322:1;19319:13;19300:396;;;19396:9;19390:4;19386:20;19381:3;19374:33;19447:6;19441:13;19475:84;19554:4;19539:13;19475:84;:::i;:::-;19467:92;;19582:70;19645:6;19582:70;:::i;:::-;19572:80;;19681:4;19676:3;19672:14;19665:21;;19360:336;19347:1;19344;19340:9;19335:14;;19300:396;;;19304:14;19712:4;19705:11;;19732:3;19725:10;;18894:847;;;;;18750:991;;;;:::o;19747:413::-;19910:4;19948:2;19937:9;19933:18;19925:26;;19997:9;19991:4;19987:20;19983:1;19972:9;19968:17;19961:47;20025:128;20148:4;20139:6;20025:128;:::i;:::-;20017:136;;19747:413;;;;:::o;20166:327::-;20224:6;20273:2;20261:9;20252:7;20248:23;20244:32;20241:119;;;20279:79;;:::i;:::-;20241:119;20399:1;20424:52;20468:7;20459:6;20448:9;20444:22;20424:52;:::i;:::-;20414:62;;20370:116;20166:327;;;;:::o;20499:118::-;20586:24;20604:5;20586:24;:::i;:::-;20581:3;20574:37;20499:118;;:::o;20623:222::-;20716:4;20754:2;20743:9;20739:18;20731:26;;20767:71;20835:1;20824:9;20820:17;20811:6;20767:71;:::i;:::-;20623:222;;;;:::o;20851:118::-;20938:24;20956:5;20938:24;:::i;:::-;20933:3;20926:37;20851:118;;:::o;20975:222::-;21068:4;21106:2;21095:9;21091:18;21083:26;;21119:71;21187:1;21176:9;21172:17;21163:6;21119:71;:::i;:::-;20975:222;;;;:::o;21203:329::-;21262:6;21311:2;21299:9;21290:7;21286:23;21282:32;21279:119;;;21317:79;;:::i;:::-;21279:119;21437:1;21462:53;21507:7;21498:6;21487:9;21483:22;21462:53;:::i;:::-;21452:63;;21408:117;21203:329;;;;:::o;21538:377::-;21621:6;21670:2;21658:9;21649:7;21645:23;21641:32;21638:119;;;21676:79;;:::i;:::-;21638:119;21796:1;21821:77;21890:7;21881:6;21870:9;21866:22;21821:77;:::i;:::-;21811:87;;21767:141;21538:377;;;;:::o;21921:328::-;22040:4;22078:2;22067:9;22063:18;22055:26;;22091:69;22157:1;22146:9;22142:17;22133:6;22091:69;:::i;:::-;22170:72;22238:2;22227:9;22223:18;22214:6;22170:72;:::i;:::-;21921:328;;;;;:::o;22255:148::-;22357:11;22394:3;22379:18;;22255:148;;;;:::o;22409:390::-;22515:3;22543:39;22576:5;22543:39;:::i;:::-;22598:89;22680:6;22675:3;22598:89;:::i;:::-;22591:96;;22696:65;22754:6;22749:3;22742:4;22735:5;22731:16;22696:65;:::i;:::-;22786:6;22781:3;22777:16;22770:23;;22519:280;22409:390;;;;:::o;22805:151::-;22945:3;22941:1;22933:6;22929:14;22922:27;22805:151;:::o;22962:400::-;23122:3;23143:84;23225:1;23220:3;23143:84;:::i;:::-;23136:91;;23236:93;23325:3;23236:93;:::i;:::-;23354:1;23349:3;23345:11;23338:18;;22962:400;;;:::o;23368:1127::-;23798:3;23820:95;23911:3;23902:6;23820:95;:::i;:::-;23813:102;;23932:148;24076:3;23932:148;:::i;:::-;23925:155;;24097:95;24188:3;24179:6;24097:95;:::i;:::-;24090:102;;24209:148;24353:3;24209:148;:::i;:::-;24202:155;;24374:95;24465:3;24456:6;24374:95;:::i;:::-;24367:102;;24486:3;24479:10;;23368:1127;;;;;;:::o;24501:180::-;24549:77;24546:1;24539:88;24646:4;24643:1;24636:15;24670:4;24667:1;24660:15;24687:320;24731:6;24768:1;24762:4;24758:12;24748:22;;24815:1;24809:4;24805:12;24836:18;24826:81;;24892:4;24884:6;24880:17;24870:27;;24826:81;24954:2;24946:6;24943:14;24923:18;24920:38;24917:84;;24973:18;;:::i;:::-;24917:84;24738:269;24687:320;;;:::o;25013:140::-;25061:4;25084:3;25076:11;;25107:3;25104:1;25097:14;25141:4;25138:1;25128:18;25120:26;;25013:140;;;:::o;25159:93::-;25196:6;25243:2;25238;25231:5;25227:14;25223:23;25213:33;;25159:93;;;:::o;25258:107::-;25302:8;25352:5;25346:4;25342:16;25321:37;;25258:107;;;;:::o;25371:393::-;25440:6;25490:1;25478:10;25474:18;25513:97;25543:66;25532:9;25513:97;:::i;:::-;25631:39;25661:8;25650:9;25631:39;:::i;:::-;25619:51;;25703:4;25699:9;25692:5;25688:21;25679:30;;25752:4;25742:8;25738:19;25731:5;25728:30;25718:40;;25447:317;;25371:393;;;;;:::o;25770:142::-;25820:9;25853:53;25871:34;25880:24;25898:5;25880:24;:::i;:::-;25871:34;:::i;:::-;25853:53;:::i;:::-;25840:66;;25770:142;;;:::o;25918:75::-;25961:3;25982:5;25975:12;;25918:75;;;:::o;25999:269::-;26109:39;26140:7;26109:39;:::i;:::-;26170:91;26219:41;26243:16;26219:41;:::i;:::-;26211:6;26204:4;26198:11;26170:91;:::i;:::-;26164:4;26157:105;26075:193;25999:269;;;:::o;26274:73::-;26319:3;26274:73;:::o;26353:189::-;26430:32;;:::i;:::-;26471:65;26529:6;26521;26515:4;26471:65;:::i;:::-;26406:136;26353:189;;:::o;26548:186::-;26608:120;26625:3;26618:5;26615:14;26608:120;;;26679:39;26716:1;26709:5;26679:39;:::i;:::-;26652:1;26645:5;26641:13;26632:22;;26608:120;;;26548:186;;:::o;26740:541::-;26840:2;26835:3;26832:11;26829:445;;;26874:37;26905:5;26874:37;:::i;:::-;26957:29;26975:10;26957:29;:::i;:::-;26947:8;26943:44;27140:2;27128:10;27125:18;27122:49;;;27161:8;27146:23;;27122:49;27184:80;27240:22;27258:3;27240:22;:::i;:::-;27230:8;27226:37;27213:11;27184:80;:::i;:::-;26844:430;;26829:445;26740:541;;;:::o;27287:117::-;27341:8;27391:5;27385:4;27381:16;27360:37;;27287:117;;;;:::o;27410:169::-;27454:6;27487:51;27535:1;27531:6;27523:5;27520:1;27516:13;27487:51;:::i;:::-;27483:56;27568:4;27562;27558:15;27548:25;;27461:118;27410:169;;;;:::o;27584:295::-;27660:4;27806:29;27831:3;27825:4;27806:29;:::i;:::-;27798:37;;27868:3;27865:1;27861:11;27855:4;27852:21;27844:29;;27584:295;;;;:::o;27884:1390::-;27999:36;28031:3;27999:36;:::i;:::-;28100:18;28092:6;28089:30;28086:56;;;28122:18;;:::i;:::-;28086:56;28166:38;28198:4;28192:11;28166:38;:::i;:::-;28251:66;28310:6;28302;28296:4;28251:66;:::i;:::-;28344:1;28368:4;28355:17;;28400:2;28392:6;28389:14;28417:1;28412:617;;;;29073:1;29090:6;29087:77;;;29139:9;29134:3;29130:19;29124:26;29115:35;;29087:77;29190:67;29250:6;29243:5;29190:67;:::i;:::-;29184:4;29177:81;29046:222;28382:886;;28412:617;28464:4;28460:9;28452:6;28448:22;28498:36;28529:4;28498:36;:::i;:::-;28556:1;28570:208;28584:7;28581:1;28578:14;28570:208;;;28663:9;28658:3;28654:19;28648:26;28640:6;28633:42;28714:1;28706:6;28702:14;28692:24;;28761:2;28750:9;28746:18;28733:31;;28607:4;28604:1;28600:12;28595:17;;28570:208;;;28806:6;28797:7;28794:19;28791:179;;;28864:9;28859:3;28855:19;28849:26;28907:48;28949:4;28941:6;28937:17;28926:9;28907:48;:::i;:::-;28899:6;28892:64;28814:156;28791:179;29016:1;29012;29004:6;29000:14;28996:22;28990:4;28983:36;28419:610;;;28382:886;;27974:1300;;;27884:1390;;:::o;29280:529::-;29447:4;29485:2;29474:9;29470:18;29462:26;;29498:71;29566:1;29555:9;29551:17;29542:6;29498:71;:::i;:::-;29616:9;29610:4;29606:20;29601:2;29590:9;29586:18;29579:48;29644:76;29715:4;29706:6;29644:76;:::i;:::-;29636:84;;29730:72;29798:2;29787:9;29783:18;29774:6;29730:72;:::i;:::-;29280:529;;;;;;:::o;29815:169::-;29899:11;29933:6;29928:3;29921:19;29973:4;29968:3;29964:14;29949:29;;29815:169;;;;:::o;29990:166::-;30130:18;30126:1;30118:6;30114:14;30107:42;29990:166;:::o;30162:366::-;30304:3;30325:67;30389:2;30384:3;30325:67;:::i;:::-;30318:74;;30401:93;30490:3;30401:93;:::i;:::-;30519:2;30514:3;30510:12;30503:19;;30162:366;;;:::o;30534:419::-;30700:4;30738:2;30727:9;30723:18;30715:26;;30787:9;30781:4;30777:20;30773:1;30762:9;30758:17;30751:47;30815:131;30941:4;30815:131;:::i;:::-;30807:139;;30534:419;;;:::o;30959:147::-;31060:11;31097:3;31082:18;;30959:147;;;;:::o;31112:114::-;;:::o;31232:398::-;31391:3;31412:83;31493:1;31488:3;31412:83;:::i;:::-;31405:90;;31504:93;31593:3;31504:93;:::i;:::-;31622:1;31617:3;31613:11;31606:18;;31232:398;;;:::o;31636:379::-;31820:3;31842:147;31985:3;31842:147;:::i;:::-;31835:154;;32006:3;31999:10;;31636:379;;;:::o;32021:165::-;32161:17;32157:1;32149:6;32145:14;32138:41;32021:165;:::o;32192:366::-;32334:3;32355:67;32419:2;32414:3;32355:67;:::i;:::-;32348:74;;32431:93;32520:3;32431:93;:::i;:::-;32549:2;32544:3;32540:12;32533:19;;32192:366;;;:::o;32564:419::-;32730:4;32768:2;32757:9;32753:18;32745:26;;32817:9;32811:4;32807:20;32803:1;32792:9;32788:17;32781:47;32845:131;32971:4;32845:131;:::i;:::-;32837:139;;32564:419;;;:::o;32989:180::-;33037:77;33034:1;33027:88;33134:4;33131:1;33124:15;33158:4;33155:1;33148:15;33175:180;33223:77;33220:1;33213:88;33320:4;33317:1;33310:15;33344:4;33341:1;33334:15;33361:233;33400:3;33423:24;33441:5;33423:24;:::i;:::-;33414:33;;33469:66;33462:5;33459:77;33456:103;;33539:18;;:::i;:::-;33456:103;33586:1;33579:5;33575:13;33568:20;;33361:233;;;:::o;33600:225::-;33740:34;33736:1;33728:6;33724:14;33717:58;33809:8;33804:2;33796:6;33792:15;33785:33;33600:225;:::o;33831:366::-;33973:3;33994:67;34058:2;34053:3;33994:67;:::i;:::-;33987:74;;34070:93;34159:3;34070:93;:::i;:::-;34188:2;34183:3;34179:12;34172:19;;33831:366;;;:::o;34203:419::-;34369:4;34407:2;34396:9;34392:18;34384:26;;34456:9;34450:4;34446:20;34442:1;34431:9;34427:17;34420:47;34484:131;34610:4;34484:131;:::i;:::-;34476:139;;34203:419;;;:::o;34628:191::-;34668:3;34687:20;34705:1;34687:20;:::i;:::-;34682:25;;34721:20;34739:1;34721:20;:::i;:::-;34716:25;;34764:1;34761;34757:9;34750:16;;34785:3;34782:1;34779:10;34776:36;;;34792:18;;:::i;:::-;34776:36;34628:191;;;;:::o;34825:410::-;34865:7;34888:20;34906:1;34888:20;:::i;:::-;34883:25;;34922:20;34940:1;34922:20;:::i;:::-;34917:25;;34977:1;34974;34970:9;34999:30;35017:11;34999:30;:::i;:::-;34988:41;;35178:1;35169:7;35165:15;35162:1;35159:22;35139:1;35132:9;35112:83;35089:139;;35208:18;;:::i;:::-;35089:139;34873:362;34825:410;;;;:::o;35241:180::-;35289:77;35286:1;35279:88;35386:4;35383:1;35376:15;35410:4;35407:1;35400:15;35427:185;35467:1;35484:20;35502:1;35484:20;:::i;:::-;35479:25;;35518:20;35536:1;35518:20;:::i;:::-;35513:25;;35557:1;35547:35;;35562:18;;:::i;:::-;35547:35;35604:1;35601;35597:9;35592:14;;35427:185;;;;:::o;35618:194::-;35658:4;35678:20;35696:1;35678:20;:::i;:::-;35673:25;;35712:20;35730:1;35712:20;:::i;:::-;35707:25;;35756:1;35753;35749:9;35741:17;;35780:1;35774:4;35771:11;35768:37;;;35785:18;;:::i;:::-;35768:37;35618:194;;;;:::o;35818:176::-;35850:1;35867:20;35885:1;35867:20;:::i;:::-;35862:25;;35901:20;35919:1;35901:20;:::i;:::-;35896:25;;35940:1;35930:35;;35945:18;;:::i;:::-;35930:35;35986:1;35983;35979:9;35974:14;;35818:176;;;;:::o;36000:105::-;36075:23;36092:5;36075:23;:::i;:::-;36070:3;36063:36;36000:105;;:::o;36111:108::-;36188:24;36206:5;36188:24;:::i;:::-;36183:3;36176:37;36111:108;;:::o;36225:99::-;36296:21;36311:5;36296:21;:::i;:::-;36291:3;36284:34;36225:99;;:::o;36386:1219::-;36517:3;36553:4;36548:3;36544:14;36642:4;36635:5;36631:16;36625:23;36661:61;36716:4;36711:3;36707:14;36693:12;36661:61;:::i;:::-;36568:164;36818:4;36811:5;36807:16;36801:23;36837:63;36894:4;36889:3;36885:14;36871:12;36837:63;:::i;:::-;36742:168;36995:4;36988:5;36984:16;36978:23;37048:3;37042:4;37038:14;37031:4;37026:3;37022:14;37015:38;37074:71;37140:4;37126:12;37074:71;:::i;:::-;37066:79;;36920:236;37241:4;37234:5;37230:16;37224:23;37294:3;37288:4;37284:14;37277:4;37272:3;37268:14;37261:38;37320:71;37386:4;37372:12;37320:71;:::i;:::-;37312:79;;37166:236;37492:4;37485:5;37481:16;37475:23;37511:57;37562:4;37557:3;37553:14;37539:12;37511:57;:::i;:::-;37412:166;37595:4;37588:11;;36522:1083;36386:1219;;;;:::o;37611:507::-;37794:4;37832:2;37821:9;37817:18;37809:26;;37881:9;37875:4;37871:20;37867:1;37856:9;37852:17;37845:47;37909:120;38024:4;38015:6;37909:120;:::i;:::-;37901:128;;38039:72;38107:2;38096:9;38092:18;38083:6;38039:72;:::i;:::-;37611:507;;;;;:::o;38124:117::-;38233:1;38230;38223:12;38370:143;38427:5;38458:6;38452:13;38443:22;;38474:33;38501:5;38474:33;:::i;:::-;38370:143;;;;:::o;38546:621::-;38634:5;38678:4;38666:9;38661:3;38657:19;38653:30;38650:117;;;38686:79;;:::i;:::-;38650:117;38785:21;38801:4;38785:21;:::i;:::-;38776:30;;38870:1;38910:60;38966:3;38957:6;38946:9;38942:22;38910:60;:::i;:::-;38903:4;38896:5;38892:16;38885:86;38816:166;39047:2;39088:60;39144:3;39135:6;39124:9;39120:22;39088:60;:::i;:::-;39081:4;39074:5;39070:16;39063:86;38992:168;38546:621;;;;:::o;39173:407::-;39271:6;39320:2;39308:9;39299:7;39295:23;39291:32;39288:119;;;39326:79;;:::i;:::-;39288:119;39446:1;39471:92;39555:7;39546:6;39535:9;39531:22;39471:92;:::i;:::-;39461:102;;39417:156;39173:407;;;;:::o;39586:143::-;39643:5;39674:6;39668:13;39659:22;;39690:33;39717:5;39690:33;:::i;:::-;39586:143;;;;:::o;39735:120::-;39807:23;39824:5;39807:23;:::i;:::-;39800:5;39797:34;39787:62;;39845:1;39842;39835:12;39787:62;39735:120;:::o;39861:141::-;39917:5;39948:6;39942:13;39933:22;;39964:32;39990:5;39964:32;:::i;:::-;39861:141;;;;:::o;40039:813::-;40131:5;40175:4;40163:9;40158:3;40154:19;40150:30;40147:117;;;40183:79;;:::i;:::-;40147:117;40282:21;40298:4;40282:21;:::i;:::-;40273:30;;40362:1;40402:60;40458:3;40449:6;40438:9;40434:22;40402:60;:::i;:::-;40395:4;40388:5;40384:16;40377:86;40313:161;40534:2;40575:59;40630:3;40621:6;40610:9;40606:22;40575:59;:::i;:::-;40568:4;40561:5;40557:16;40550:85;40484:162;40704:2;40745:88;40829:3;40820:6;40809:9;40805:22;40745:88;:::i;:::-;40738:4;40731:5;40727:16;40720:114;40656:189;40039:813;;;;:::o;40858:416::-;40960:6;41009:3;40997:9;40988:7;40984:23;40980:33;40977:120;;;41016:79;;:::i;:::-;40977:120;41136:1;41161:96;41249:7;41240:6;41229:9;41225:22;41161:96;:::i;:::-;41151:106;;41107:160;40858:416;;;;:::o;41280:182::-;41420:34;41416:1;41408:6;41404:14;41397:58;41280:182;:::o;41468:366::-;41610:3;41631:67;41695:2;41690:3;41631:67;:::i;:::-;41624:74;;41707:93;41796:3;41707:93;:::i;:::-;41825:2;41820:3;41816:12;41809:19;;41468:366;;;:::o;41840:419::-;42006:4;42044:2;42033:9;42029:18;42021:26;;42093:9;42087:4;42083:20;42079:1;42068:9;42064:17;42057:47;42121:131;42247:4;42121:131;:::i;:::-;42113:139;;41840:419;;;:::o;42265:143::-;42322:5;42353:6;42347:13;42338:22;;42369:33;42396:5;42369:33;:::i;:::-;42265:143;;;;:::o;42414:351::-;42484:6;42533:2;42521:9;42512:7;42508:23;42504:32;42501:119;;;42539:79;;:::i;:::-;42501:119;42659:1;42684:64;42740:7;42731:6;42720:9;42716:22;42684:64;:::i;:::-;42674:74;;42630:128;42414:351;;;;:::o;42771:442::-;42920:4;42958:2;42947:9;42943:18;42935:26;;42971:71;43039:1;43028:9;43024:17;43015:6;42971:71;:::i;:::-;43052:72;43120:2;43109:9;43105:18;43096:6;43052:72;:::i;:::-;43134;43202:2;43191:9;43187:18;43178:6;43134:72;:::i;:::-;42771:442;;;;;;:::o;43219:116::-;43289:21;43304:5;43289:21;:::i;:::-;43282:5;43279:32;43269:60;;43325:1;43322;43315:12;43269:60;43219:116;:::o;43341:137::-;43395:5;43426:6;43420:13;43411:22;;43442:30;43466:5;43442:30;:::i;:::-;43341:137;;;;:::o;43484:345::-;43551:6;43600:2;43588:9;43579:7;43575:23;43571:32;43568:119;;;43606:79;;:::i;:::-;43568:119;43726:1;43751:61;43804:7;43795:6;43784:9;43780:22;43751:61;:::i;:::-;43741:71;;43697:125;43484:345;;;;:::o;43835:229::-;43975:34;43971:1;43963:6;43959:14;43952:58;44044:12;44039:2;44031:6;44027:15;44020:37;43835:229;:::o;44070:366::-;44212:3;44233:67;44297:2;44292:3;44233:67;:::i;:::-;44226:74;;44309:93;44398:3;44309:93;:::i;:::-;44427:2;44422:3;44418:12;44411:19;;44070:366;;;:::o;44442:419::-;44608:4;44646:2;44635:9;44631:18;44623:26;;44695:9;44689:4;44685:20;44681:1;44670:9;44666:17;44659:47;44723:131;44849:4;44723:131;:::i;:::-;44715:139;;44442:419;;;:::o;44867:225::-;45007:34;45003:1;44995:6;44991:14;44984:58;45076:8;45071:2;45063:6;45059:15;45052:33;44867:225;:::o;45098:366::-;45240:3;45261:67;45325:2;45320:3;45261:67;:::i;:::-;45254:74;;45337:93;45426:3;45337:93;:::i;:::-;45455:2;45450:3;45446:12;45439:19;;45098:366;;;:::o;45470:419::-;45636:4;45674:2;45663:9;45659:18;45651:26;;45723:9;45717:4;45713:20;45709:1;45698:9;45694:17;45687:47;45751:131;45877:4;45751:131;:::i;:::-;45743:139;;45470:419;;;:::o;45895:386::-;45999:3;46027:38;46059:5;46027:38;:::i;:::-;46081:88;46162:6;46157:3;46081:88;:::i;:::-;46074:95;;46178:65;46236:6;46231:3;46224:4;46217:5;46213:16;46178:65;:::i;:::-;46268:6;46263:3;46259:16;46252:23;;46003:278;45895:386;;;;:::o;46287:271::-;46417:3;46439:93;46528:3;46519:6;46439:93;:::i;:::-;46432:100;;46549:3;46542:10;;46287:271;;;;:::o;46564:179::-;46704:31;46700:1;46692:6;46688:14;46681:55;46564:179;:::o;46749:366::-;46891:3;46912:67;46976:2;46971:3;46912:67;:::i;:::-;46905:74;;46988:93;47077:3;46988:93;:::i;:::-;47106:2;47101:3;47097:12;47090:19;;46749:366;;;:::o;47121:419::-;47287:4;47325:2;47314:9;47310:18;47302:26;;47374:9;47368:4;47364:20;47360:1;47349:9;47345:17;47338:47;47402:131;47528:4;47402:131;:::i;:::-;47394:139;;47121:419;;;:::o;47546:377::-;47634:3;47662:39;47695:5;47662:39;:::i;:::-;47717:71;47781:6;47776:3;47717:71;:::i;:::-;47710:78;;47797:65;47855:6;47850:3;47843:4;47836:5;47832:16;47797:65;:::i;:::-;47887:29;47909:6;47887:29;:::i;:::-;47882:3;47878:39;47871:46;;47638:285;47546:377;;;;:::o;47929:313::-;48042:4;48080:2;48069:9;48065:18;48057:26;;48129:9;48123:4;48119:20;48115:1;48104:9;48100:17;48093:47;48157:78;48230:4;48221:6;48157:78;:::i;:::-;48149:86;;47929:313;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2739800","executionCost":"infinite","totalCost":"infinite"},"external":{"SOLANA_CHAIN_ID()":"359","allowInitializePath((uint32,bytes32,uint64))":"3143","endpoint()":"infinite","gasLimit()":"2539","getLinkedAddresses(address)":"infinite","getLinkedAddressesAsStrings(address)":"infinite","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"1045","linkAddress(string)":"infinite","linkedSolanaAddresses(address,uint256)":"infinite","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"infinite","nextNonce(uint32,bytes32)":"912","oAppVersion()":"infinite","owner()":"2567","peers(uint32)":"2882","quoteLinkAddress(string)":"infinite","quoteLinkFee(string)":"infinite","renounceOwnership()":"30487","setDelegate(address)":"infinite","setGasLimit(uint256)":"24850","setPeer(uint32,bytes32)":"infinite","transferOwnership(address)":"30832","withdraw()":"infinite"},"internal":{"_lzReceive(struct Origin calldata,bytes32,bytes calldata,address,bytes calldata)":"23","addressToString(address)":"infinite","uint256ToString(uint256)":"infinite"}},"methodIdentifiers":{"SOLANA_CHAIN_ID()":"067bd07a","allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","endpoint()":"5e280f11","gasLimit()":"f68016b7","getLinkedAddresses(address)":"9541618c","getLinkedAddressesAsStrings(address)":"a6451163","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"82413eac","linkAddress(string)":"306fed73","linkedSolanaAddresses(address,uint256)":"7954c58f","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","quoteLinkAddress(string)":"bf3f3de9","quoteLinkFee(string)":"56368126","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setGasLimit(uint256)":"ee7d72b4","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzEndpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LzTokenUnavailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"NotEnoughNative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OnlyEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"evmAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"solanaAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IdentityLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SOLANA_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_evmAddress\",\"type\":\"address\"}],\"name\":\"getLinkedAddresses\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_evmAddress\",\"type\":\"address\"}],\"name\":\"getLinkedAddressesAsStrings\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isComposeMsgSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_solanaAddress\",\"type\":\"string\"}],\"name\":\"linkAddress\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"linkedSolanaAddresses\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_solanaAddress\",\"type\":\"string\"}],\"name\":\"quoteLinkAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_solanaAddress\",\"type\":\"string\"}],\"name\":\"quoteLinkFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"}],\"name\":\"setGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for linking EVM addresses to Solana addresses via LayerZero V2 This contract sends messages from EVM chains to a Solana OApp\",\"kind\":\"dev\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"details\":\"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.\",\"params\":{\"origin\":\"The origin information containing the source endpoint and sender address.\"},\"returns\":{\"_0\":\"Whether the path has been initialized.\"}},\"getLinkedAddresses(address)\":{\"details\":\"Get linked Solana addresses for an EVM address\",\"params\":{\"_evmAddress\":\"The EVM address to check\"},\"returns\":{\"_0\":\"Array of linked Solana addresses as bytes\"}},\"getLinkedAddressesAsStrings(address)\":{\"details\":\"Get linked Solana addresses for an EVM address as strings\",\"params\":{\"_evmAddress\":\"The EVM address to check\"},\"returns\":{\"_0\":\"Array of linked Solana addresses as strings\"}},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"details\":\"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.\",\"params\":{\"_sender\":\"The sender address.\"},\"returns\":{\"_0\":\"isSender Is a valid sender.\"}},\"linkAddress(string)\":{\"details\":\"Link the sender's EVM address to a Solana address\",\"params\":{\"_solanaAddress\":\"Solana address as string\"}},\"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)\":{\"details\":\"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.\",\"params\":{\"_executor\":\"The address of the executor for the received message.\",\"_extraData\":\"Additional arbitrary data provided by the corresponding executor.\",\"_guid\":\"The unique identifier for the received LayerZero message.\",\"_message\":\"The payload of the received message.\",\"_origin\":\"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.\"}},\"nextNonce(uint32,bytes32)\":{\"details\":\"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\",\"returns\":{\"nonce\":\"The next nonce.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol implementation.\",\"senderVersion\":\"The version of the OAppSender.sol implementation.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"quoteLinkAddress(string)\":{\"details\":\"Quote the fee for linking an address\",\"params\":{\"_solanaAddress\":\"Solana address as string\"},\"returns\":{\"_0\":\"Fee required for the cross-chain message\"}},\"quoteLinkFee(string)\":{\"details\":\"Quote the fee for sending a message to Solana\",\"params\":{\"_solanaAddress\":\"The Solana address to link\"},\"returns\":{\"fee\":\"The estimated messaging fee\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setGasLimit(uint256)\":{\"details\":\"Update the gas limit for cross-chain calls\",\"params\":{\"_gasLimit\":\"New gas limit\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw()\":{\"details\":\"Withdraw any stuck funds (admin function)\"}},\"title\":\"OmnichainIdentityLinker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"notice\":\"Checks if the path initialization is allowed based on the provided origin.\"},\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"notice\":\"Indicates whether an address is an approved composeMsg sender to the Endpoint.\"},\"nextNonce(uint32,bytes32)\":{\"notice\":\"Retrieves the next nonce for a given source endpoint and sender address.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OmnichainIdentityLinker.sol\":\"OmnichainIdentityLinker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\n// @dev Import the 'MessagingFee' and 'MessagingReceipt' so it's exposed to OApp implementers\\n// solhint-disable-next-line no-unused-import\\nimport { OAppSender, MessagingFee, MessagingReceipt } from \\\"./OAppSender.sol\\\";\\n// @dev Import the 'Origin' so it's exposed to OApp implementers\\n// solhint-disable-next-line no-unused-import\\nimport { OAppReceiver, Origin } from \\\"./OAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OApp\\n * @dev Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.\\n */\\nabstract contract OApp is OAppSender, OAppReceiver {\\n    /**\\n     * @dev Constructor to initialize the OApp with the provided endpoint and owner.\\n     * @param _endpoint The address of the LOCAL LayerZero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     */\\n    constructor(address _endpoint, address _delegate) OAppCore(_endpoint, _delegate) {}\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol implementation.\\n     * @return receiverVersion The version of the OAppReceiver.sol implementation.\\n     */\\n    function oAppVersion()\\n        public\\n        pure\\n        virtual\\n        override(OAppSender, OAppReceiver)\\n        returns (uint64 senderVersion, uint64 receiverVersion)\\n    {\\n        return (SENDER_VERSION, RECEIVER_VERSION);\\n    }\\n}\\n\",\"keccak256\":\"0xac362c4c291fad2f1511a968424b2e78a5ad502d1c867bd31da04be742aca8c5\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { IOAppReceiver, Origin } from \\\"./interfaces/IOAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppReceiver\\n * @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\\n */\\nabstract contract OAppReceiver is IOAppReceiver, OAppCore {\\n    // Custom error message for when the caller is not the registered endpoint/\\n    error OnlyEndpoint(address addr);\\n\\n    // @dev The version of the OAppReceiver implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant RECEIVER_VERSION = 2;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\\n     * ie. this is a RECEIVE only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (0, RECEIVER_VERSION);\\n    }\\n\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @dev _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @dev _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata /*_origin*/,\\n        bytes calldata /*_message*/,\\n        address _sender\\n    ) public view virtual returns (bool) {\\n        return _sender == address(this);\\n    }\\n\\n    /**\\n     * @notice Checks if the path initialization is allowed based on the provided origin.\\n     * @param origin The origin information containing the source endpoint and sender address.\\n     * @return Whether the path has been initialized.\\n     *\\n     * @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\\n     * @dev This defaults to assuming if a peer has been set, its initialized.\\n     * Can be overridden by the OApp if there is other logic to determine this.\\n     */\\n    function allowInitializePath(Origin calldata origin) public view virtual returns (bool) {\\n        return peers[origin.srcEid] == origin.sender;\\n    }\\n\\n    /**\\n     * @notice Retrieves the next nonce for a given source endpoint and sender address.\\n     * @dev _srcEid The source endpoint ID.\\n     * @dev _sender The sender address.\\n     * @return nonce The next nonce.\\n     *\\n     * @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\\n     * @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\\n     * @dev This is also enforced by the OApp.\\n     * @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\\n     */\\n    function nextNonce(uint32 /*_srcEid*/, bytes32 /*_sender*/) public view virtual returns (uint64 nonce) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Entry point for receiving messages or packets from the endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _guid The unique identifier for the received LayerZero message.\\n     * @param _message The payload of the received message.\\n     * @param _executor The address of the executor for the received message.\\n     * @param _extraData Additional arbitrary data provided by the corresponding executor.\\n     *\\n     * @dev Entry point for receiving msg/packet from the LayerZero endpoint.\\n     */\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) public payable virtual {\\n        // Ensures that only the endpoint can attempt to lzReceive() messages to this OApp.\\n        if (address(endpoint) != msg.sender) revert OnlyEndpoint(msg.sender);\\n\\n        // Ensure that the sender matches the expected peer for the source endpoint.\\n        if (_getPeerOrRevert(_origin.srcEid) != _origin.sender) revert OnlyPeer(_origin.srcEid, _origin.sender);\\n\\n        // Call the internal OApp implementation of lzReceive.\\n        _lzReceive(_origin, _guid, _message, _executor, _extraData);\\n    }\\n\\n    /**\\n     * @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation.\\n     */\\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal virtual;\\n}\\n\",\"keccak256\":\"0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/oapp-evm/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroReceiver, Origin } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\n\\ninterface IOAppReceiver is ILayerZeroReceiver {\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata _origin,\\n        bytes calldata _message,\\n        address _sender\\n    ) external view returns (bool isSender);\\n}\\n\",\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/OmnichainIdentityLinker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@layerzerolabs/oapp-evm/contracts/oapp/OApp.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title OmnichainIdentityLinker\\r\\n * @dev Contract for linking EVM addresses to Solana addresses via LayerZero V2\\r\\n * This contract sends messages from EVM chains to a Solana OApp\\r\\n */\\r\\ncontract OmnichainIdentityLinker is OApp {\\r\\n    // Solana chain ID in LayerZero V2\\r\\n    uint32 public constant SOLANA_CHAIN_ID = 40168; // Solana DEVNET chain ID in LZ V2\\r\\n\\r\\n    // Gas limit for cross-chain calls\\r\\n    uint256 public gasLimit = 200000;\\r\\n\\r\\n    // Store linked addresses history for reference\\r\\n    mapping(address => bytes[]) public linkedSolanaAddresses;\\r\\n\\r\\n    // Event emitted when a link is created\\r\\n    event IdentityLinked(address evmAddress, bytes solanaAddress, uint256 timestamp);\\r\\n\\r\\n    constructor(address _lzEndpoint, address _delegate) OApp(_lzEndpoint, _delegate) {}\\r\\n\\r\\n    /**\\r\\n     * @dev Link the sender's EVM address to a Solana address\\r\\n     * @param _solanaAddress Solana address as string\\r\\n     */\\r\\n    function linkAddress(string memory _solanaAddress) external payable {\\r\\n        // Format the message as CSV string for easy parsing on Solana\\r\\n        // Format: \\\"evmAddress,solanaAddress,timestamp\\\"\\r\\n        string memory evmAddressStr = addressToString(msg.sender);\\r\\n        string memory timestampStr = uint256ToString(block.timestamp);\\r\\n        string memory message = string(abi.encodePacked(\\r\\n            evmAddressStr, \\\",\\\", \\r\\n            _solanaAddress, \\\",\\\", \\r\\n            timestampStr\\r\\n        ));\\r\\n        \\r\\n        // Convert string to bytes for sending\\r\\n        bytes memory payload = bytes(message);\\r\\n\\r\\n        // Store the linked address in history\\r\\n        linkedSolanaAddresses[msg.sender].push(bytes(_solanaAddress));\\r\\n\\r\\n        // Emit event\\r\\n        emit IdentityLinked(msg.sender, bytes(_solanaAddress), block.timestamp);\\r\\n\\r\\n        // Prepare messaging parameters for LayerZero V2\\r\\n        bytes memory options = bytes(\\\"\\\"); // Use empty options for now\\r\\n        \\r\\n        // Send message to Solana via LayerZero V2\\r\\n        MessagingFee memory fee = _quote(SOLANA_CHAIN_ID, payload, options, false);\\r\\n        require(msg.value >= fee.nativeFee, \\\"Insufficient fee\\\");\\r\\n        \\r\\n        _lzSend(\\r\\n            SOLANA_CHAIN_ID,     // Destination chain ID (Solana)\\r\\n            payload,             // Payload\\r\\n            options,             // Options\\r\\n            MessagingFee(msg.value, 0), // Fee\\r\\n            payable(msg.sender)  // Refund address\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Convert an address to a string\\r\\n     * @param _addr The address to convert\\r\\n     * @return String representation of the address\\r\\n     */\\r\\n    function addressToString(address _addr) internal pure returns (string memory) {\\r\\n        bytes32 value = bytes32(uint256(uint160(_addr)));\\r\\n        bytes memory alphabet = \\\"0123456789abcdef\\\";\\r\\n        \\r\\n        bytes memory str = new bytes(42);\\r\\n        str[0] = \\\"0\\\";\\r\\n        str[1] = \\\"x\\\";\\r\\n        \\r\\n        for (uint256 i = 0; i < 20; i++) {\\r\\n            str[2 + i * 2] = alphabet[uint8(value[i + 12] >> 4)];\\r\\n            str[3 + i * 2] = alphabet[uint8(value[i + 12] & 0x0f)];\\r\\n        }\\r\\n        \\r\\n        return string(str);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Convert a uint256 to a string\\r\\n     * @param _value The uint256 to convert\\r\\n     * @return String representation of the uint256\\r\\n     */\\r\\n    function uint256ToString(uint256 _value) internal pure returns (string memory) {\\r\\n        if (_value == 0) {\\r\\n            return \\\"0\\\";\\r\\n        }\\r\\n        \\r\\n        uint256 temp = _value;\\r\\n        uint256 digits;\\r\\n        \\r\\n        while (temp != 0) {\\r\\n            digits++;\\r\\n            temp /= 10;\\r\\n        }\\r\\n        \\r\\n        bytes memory buffer = new bytes(digits);\\r\\n        while (_value != 0) {\\r\\n            digits -= 1;\\r\\n            buffer[digits] = bytes1(uint8(48 + uint256(_value % 10)));\\r\\n            _value /= 10;\\r\\n        }\\r\\n        \\r\\n        return string(buffer);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get linked Solana addresses for an EVM address\\r\\n     * @param _evmAddress The EVM address to check\\r\\n     * @return Array of linked Solana addresses as bytes\\r\\n     */\\r\\n    function getLinkedAddresses(address _evmAddress) external view returns (bytes[] memory) {\\r\\n        return linkedSolanaAddresses[_evmAddress];\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Get linked Solana addresses for an EVM address as strings\\r\\n     * @param _evmAddress The EVM address to check\\r\\n     * @return Array of linked Solana addresses as strings\\r\\n     */\\r\\n    function getLinkedAddressesAsStrings(address _evmAddress) external view returns (string[] memory) {\\r\\n        bytes[] memory bytesAddresses = linkedSolanaAddresses[_evmAddress];\\r\\n        string[] memory strAddresses = new string[](bytesAddresses.length);\\r\\n        \\r\\n        for (uint i = 0; i < bytesAddresses.length; i++) {\\r\\n            strAddresses[i] = string(bytesAddresses[i]);\\r\\n        }\\r\\n        \\r\\n        return strAddresses;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Quote the fee for sending a message to Solana\\r\\n     * @param _solanaAddress The Solana address to link\\r\\n     * @return fee The estimated messaging fee\\r\\n     */\\r\\n    function quoteLinkFee(string memory _solanaAddress) external view returns (MessagingFee memory fee) {\\r\\n        // Format the message as CSV string for fee estimation\\r\\n        string memory evmAddressStr = addressToString(msg.sender);\\r\\n        string memory timestampStr = uint256ToString(block.timestamp);\\r\\n        string memory message = string(abi.encodePacked(\\r\\n            evmAddressStr, \\\",\\\", \\r\\n            _solanaAddress, \\\",\\\", \\r\\n            timestampStr\\r\\n        ));\\r\\n        \\r\\n        bytes memory payload = bytes(message);\\r\\n        bytes memory options = bytes(\\\"\\\"); // Default options\\r\\n        \\r\\n        return _quote(SOLANA_CHAIN_ID, payload, options, false);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Quote the fee for linking an address\\r\\n     * @param _solanaAddress Solana address as string\\r\\n     * @return Fee required for the cross-chain message\\r\\n     */\\r\\n    function quoteLinkAddress(string memory _solanaAddress) external view returns (uint256) {\\r\\n        // Format the same message as in linkAddress\\r\\n        string memory evmAddressStr = addressToString(msg.sender);\\r\\n        string memory timestampStr = uint256ToString(block.timestamp);\\r\\n        string memory message = string(abi.encodePacked(\\r\\n            evmAddressStr, \\\",\\\", \\r\\n            _solanaAddress, \\\",\\\", \\r\\n            timestampStr\\r\\n        ));\\r\\n        \\r\\n        bytes memory payload = bytes(message);\\r\\n        \\r\\n        // Use empty options for compatibility\\r\\n        bytes memory options = bytes(\\\"\\\");\\r\\n        \\r\\n        MessagingFee memory fee = _quote(SOLANA_CHAIN_ID, payload, options, false);\\r\\n        return fee.nativeFee;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Override the _lzReceive function to handle incoming messages (if needed)\\r\\n     * This would be used if you want to receive messages from Solana back to EVM\\r\\n     */\\r\\n    function _lzReceive(\\r\\n        Origin calldata _origin,\\r\\n        bytes32 _guid,\\r\\n        bytes calldata _payload,\\r\\n        address _executor,\\r\\n        bytes calldata _extraData\\r\\n    ) internal override {\\r\\n        // Add handling for received messages from Solana if needed\\r\\n        // For now, this is a placeholder\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Update the gas limit for cross-chain calls\\r\\n     * @param _gasLimit New gas limit\\r\\n     */\\r\\n    function setGasLimit(uint256 _gasLimit) external onlyOwner {\\r\\n        gasLimit = _gasLimit;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Withdraw any stuck funds (admin function)\\r\\n     */\\r\\n    function withdraw() external onlyOwner {\\r\\n        (bool success, ) = owner().call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3d42bfb788bb5eb186721061b34b684a7a7015016fe6b518caa914f523f50b66\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"contracts/OmnichainIdentityLinker.sol:OmnichainIdentityLinker","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":785,"contract":"contracts/OmnichainIdentityLinker.sol:OmnichainIdentityLinker","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"},{"astId":2293,"contract":"contracts/OmnichainIdentityLinker.sol:OmnichainIdentityLinker","label":"gasLimit","offset":0,"slot":"2","type":"t_uint256"},{"astId":2298,"contract":"contracts/OmnichainIdentityLinker.sol:OmnichainIdentityLinker","label":"linkedSolanaAddresses","offset":0,"slot":"3","type":"t_mapping(t_address,t_array(t_bytes_storage)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes_storage)dyn_storage":{"base":"t_bytes_storage","encoding":"dynamic_array","label":"bytes[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_array(t_bytes_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes[])","numberOfBytes":"32","value":"t_array(t_bytes_storage)dyn_storage"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"notice":"Checks if the path initialization is allowed based on the provided origin."},"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"notice":"Indicates whether an address is an approved composeMsg sender to the Endpoint."},"nextNonce(uint32,bytes32)":{"notice":"Retrieves the next nonce for a given source endpoint and sender address."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}}}}}